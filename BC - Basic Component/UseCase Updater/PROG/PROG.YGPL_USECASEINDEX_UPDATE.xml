<?xml version="1.0" encoding="utf-16"?>
<ZL_OBJECT CHECKSUM="6417081A3E16005158661FED68BF84E6" CODE_SIGNATURE="66F94283F32E2A1FA30119954BEF4DA0" CONNECTOR="AAAD0A4B07A5A05AE1000000AC120173" NAME="YGPL_USECASEINDEX_UPDATE" TYPE="PROG" VERSION="1.0">
 <DIRECTORY DEVCLASS="YGPL-USECASEINDEX" MASTERLANG="E"/>
 <RAW>
  <A0_MAINDATA EDTX="X" VARCL="X" SUBC="1" RSTAT="S" RMAND="200" RLOAD="E" UCCHECK="X"/>
  <SOURCE>`
*---------------------------------------------------------------------*
* Report  ZAPLINK_EXTRACTOR
*---------------------------------------------------------------------*

REPORT  ygpl_usecaseindex_update MESSAGE-ID zaplink.

TABLES: tadir, tdevc.
TYPE-POOLS: abap.

*TYPES to_synch TYPE REF TO zaplink_raw_data.  &quot; to be the first object meet in standalone generator

SELECT-OPTIONS:
  s_srcs FOR tadir-srcsystem  DEFAULT sy-sysid,
  s_soft FOR tdevc-dlvunit,
  s_type FOR tadir-object,
  s_name FOR tadir-obj_name,
  s_pack FOR tadir-devclass.
PARAMETERS:
  p_ext TYPE abap_bool AS CHECKBOX DEFAULT abap_true.
SELECT-OPTIONS:
  s_author FOR tadir-author DEFAULT sy-uname.

START-OF-SELECTION.
  DATA t_list     TYPE ygpl_usecaseindex=&gt;tt_compkeys.
  DATA o_updater  TYPE REF TO ygpl_usecaseindex.
  FIELD-SYMBOLS: &lt;i&gt; LIKE LINE OF o_updater-&gt;components.

  t_list = ygpl_usecaseindex=&gt;get_keys_from_tadir(
                      srcsystem  = s_srcs[]
                      softcomp   = s_soft[]
                      type       = s_type[]
                      name       = s_name[]
                      packages   = s_pack[]
                      ext        = p_ext
                      author     = s_author[] ).

  CREATE OBJECT o_updater.

  o_updater-&gt;add_keys( t_list ).
  IF o_updater-&gt;components IS INITIAL.
    WRITE:/ &apos;Component list is empty or do no contains any program, class or function group&apos;(lie).
    EXIT.
  ENDIF.

  o_updater-&gt;update_index( ).

  WRITE:/ &apos;List of components that usecase indexes have been updated :&apos;(cpl).
  LOOP AT o_updater-&gt;components ASSIGNING &lt;i&gt;.
    WRITE:/ &lt;i&gt;-object, &lt;i&gt;-objname, &lt;i&gt;-name.
  ENDLOOP.

END-OF-SELECTION.</SOURCE>
  <TEXTS>
   <ITEM LANGU="E">
    <LONG_TXT TDFRELES="701" TDLINESIZE="072">U1&amp;PURPOSE&amp;
ASUpdate &quot;UseCase&quot; indexes of a list of programs (class, function group,
  type pool, Logical databases,...).
AS&quot;UseCase&quot; indexes are required by the functionally of &quot;UseCase&quot; in
  various transaction (SE38, SE80, SE24, ...) if theses indexes are not up
  to date &quot;UseCase&quot; result list might be empty or some entries might be
  missing.
U1&amp;INTEGRATION&amp;
AS&quot;UseCase&quot; indexes are updated each time program is activated, but
  sometimes this action failed and indexes are not up to date. Also SAP
  program are delivred activated so no &quot;UseCase&quot; Index at all. Using this
  tools allow you to force &quot;UseCase&quot; indexes update.
U1&amp;PREREQUISITES&amp;
AS
U1&amp;FEATURES&amp;
ASForce an &quot;UseCase&quot; index update by scanning a specified program to get
  list of the component it use.
U2&amp;SELECTION&amp;
AS
U2&amp;STANDARD_VARIANTS&amp;
AS
U2&amp;OUTPUT&amp;
AS
U1&amp;ACTIVITIES&amp;
AS
U1&amp;EXAMPLE&amp;
AS</LONG_TXT>
   </ITEM>
  </TEXTS>
  <TEXTSPOOL>
   <ITEM ID="I" KEY="CPL">
    <TEXTS>
     <ITEM LANGU="E" ENTRY="List of components that usecase indexes have been updated :" LENGTH="125 "/>
    </TEXTS>
   </ITEM>
   <ITEM ID="I" KEY="LIE">
    <TEXTS>
     <ITEM LANGU="E" ENTRY="Component list is empty or do no contains any program, class or function group" LENGTH="125 "/>
    </TEXTS>
   </ITEM>
   <ITEM ID="I" KEY="MOD">
    <TEXTS>
     <ITEM LANGU="F" ENTRY="Mode d&apos;extraction" LENGTH="20 "/>
    </TEXTS>
   </ITEM>
   <ITEM ID="R">
    <TEXTS>
     <ITEM LANGU="E" ENTRY="Whereuse Index updater" LENGTH="22 "/>
     <ITEM LANGU="F" ENTRY="ZAPLink : Extraction en masse de componsants" LENGTH="70 "/>
    </TEXTS>
   </ITEM>
   <ITEM ID="S" KEY="EM_CNX">
    <TEXTS>
     <ITEM LANGU="F" ENTRY="        Connecteurs" LENGTH="19 "/>
    </TEXTS>
   </ITEM>
   <ITEM ID="S" KEY="EM_PACK">
    <TEXTS>
     <ITEM LANGU="F" ENTRY="        Hiérarchie par package" LENGTH="35 "/>
    </TEXTS>
   </ITEM>
   <ITEM ID="S" KEY="EM_TYPE">
    <TEXTS>
     <ITEM LANGU="F" ENTRY="        Hiérarchie par type" LENGTH="32 "/>
    </TEXTS>
   </ITEM>
   <ITEM ID="S" KEY="P_EXT">
    <TEXTS>
     <ITEM LANGU="E" ENTRY="        Extend to sub-packages" LENGTH="30 "/>
     <ITEM LANGU="F" ENTRY="        Etendre aux sous-packages" LENGTH="33 "/>
    </TEXTS>
   </ITEM>
   <ITEM ID="S" KEY="P_PATH">
    <TEXTS>
     <ITEM LANGU="F" ENTRY="        Chemin local de sauvegarde" LENGTH="34 "/>
    </TEXTS>
   </ITEM>
   <ITEM ID="S" KEY="S_AUTHOR">
    <TEXTS>
     <ITEM LANGU="E" ENTRY="D       ." LENGTH="26 "/>
     <ITEM LANGU="F" ENTRY="D       ." LENGTH="26 "/>
    </TEXTS>
   </ITEM>
   <ITEM ID="S" KEY="S_NAME">
    <TEXTS>
     <ITEM LANGU="E" ENTRY="D       ." LENGTH="19 "/>
     <ITEM LANGU="F" ENTRY="D       ." LENGTH="19 "/>
    </TEXTS>
   </ITEM>
   <ITEM ID="S" KEY="S_PACK">
    <TEXTS>
     <ITEM LANGU="E" ENTRY="D       ." LENGTH="15 "/>
     <ITEM LANGU="F" ENTRY="D       ." LENGTH="15 "/>
    </TEXTS>
   </ITEM>
   <ITEM ID="S" KEY="S_SOFT">
    <TEXTS>
     <ITEM LANGU="E" ENTRY="D       ." LENGTH="9 "/>
    </TEXTS>
   </ITEM>
   <ITEM ID="S" KEY="S_SRCS">
    <TEXTS>
     <ITEM LANGU="E" ENTRY="D       ." LENGTH="23 "/>
     <ITEM LANGU="F" ENTRY="D       ." LENGTH="23 "/>
    </TEXTS>
   </ITEM>
   <ITEM ID="S" KEY="S_TYPE">
    <TEXTS>
     <ITEM LANGU="E" ENTRY="D       ." LENGTH="19 "/>
     <ITEM LANGU="F" ENTRY="D       ." LENGTH="19 "/>
    </TEXTS>
   </ITEM>
  </TEXTSPOOL>
 </RAW>
</ZL_OBJECT>
