<?xml version="1.0" encoding="utf-16"?>
<ZL_OBJECT CHECKSUM="C9706EA27ED5C7CCA889EAB390527E11" CODE_SIGNATURE="1E1C1461AE8ABB5D1C370905E1ACE241" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="YGPL_MT_ROOTCLASS" TYPE="CLAS" VERSION="1.01">
 <DEPENDENCIES>
  <ITEM TYPE="CLAS" NAME="YGPL_MT_CATEGORI"/>
 </DEPENDENCIES>
 <DIRECTORY DEVCLASS="YGPL-MULTITHREAD" MASTERLANG="E"/>
 <RAW>
  <A0_MAINDATA LANGU="E" EXPOSURE="2" STATE="1" CLSCCINCL="X" FIXPT="X" UNICODE="X">
   <TEXTS>
    <ITEM LANG="E" TEXT="Export to Database"/>
    <ITEM LANG="F" TEXT="Export to Database"/>
   </TEXTS>
  </A0_MAINDATA>
  <ATTRIBUTS>
   <ITEM CMPNAME="BATCH_TAUX" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;0.5&apos;" TYPTYPE="1" TYPE="YGPL_BATCH_RATE">
    <TEXTS>
     <ITEM LANG="E" TEXT="Pourcentage du Batch (0%&lt;R&lt;100%) conseillé (0.25&lt;R&lt;0.75)"/>
     <ITEM LANG="F" TEXT="Pourcentage du Batch (0%&lt;R&lt;100%) conseillé (0.25&lt;R&lt;0.75)"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="CLEAR_OBJ" EXPOSURE="2" STATE="1" ATTVALUE="&apos; &apos;" TYPTYPE="1" TYPE="T_BOOLEAN">
    <TEXTS>
     <ITEM LANG="E" TEXT="Supprime les messages Oui &apos;X&apos; ou &apos;N&apos;"/>
     <ITEM LANG="F" TEXT="Supprime les messages Oui &apos;X&apos; ou &apos;N&apos;"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="CURRENT_BLOCS" STATE="1" TYPTYPE="1" TYPE="TT_BLOCS">
    <TEXTS>
     <ITEM LANG="E" TEXT="Liste de blocs"/>
     <ITEM LANG="F" TEXT="Liste de blocs"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="END_TIME" STATE="1" ATTDECLTYP="2" ATTVALUE="5" TYPTYPE="1" TYPE="T_TIME">
    <TEXTS>
     <ITEM LANG="E" TEXT="Temps fin de traitement en seconde"/>
     <ITEM LANG="F" TEXT="Temps fin de traitement en seconde"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="JOB_ST_ABORTED" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;A&apos;" TYPTYPE="1" TYPE="TBTCO-STATUS">
    <TEXTS>
     <ITEM LANG="E" TEXT="JOB_ST_ABORTED"/>
     <ITEM LANG="F" TEXT="JOB_ST_ABORTED"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="JOB_ST_FINISHED" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;F&apos;" TYPTYPE="1" TYPE="TBTCO-STATUS">
    <TEXTS>
     <ITEM LANG="E" TEXT="JOB_ST_FINISHED"/>
     <ITEM LANG="F" TEXT="JOB_ST_FINISHED"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="JOB_ST_PUT_ACTIVE" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;Z&apos;" TYPTYPE="1" TYPE="TBTCO-STATUS">
    <TEXTS>
     <ITEM LANG="E" TEXT="JOB_ST_PUT_ACTIVE"/>
     <ITEM LANG="F" TEXT="JOB_ST_PUT_ACTIVE"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="JOB_ST_READY" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;Y&apos;" TYPTYPE="1" TYPE="TBTCO-STATUS">
    <TEXTS>
     <ITEM LANG="E" TEXT="JOB_ST_READY"/>
     <ITEM LANG="F" TEXT="JOB_ST_READY"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="JOB_ST_RELEASED" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;S&apos;" TYPTYPE="1" TYPE="TBTCO-STATUS">
    <TEXTS>
     <ITEM LANG="E" TEXT="JOB_ST_RELEASED"/>
     <ITEM LANG="F" TEXT="JOB_ST_RELEASED"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="JOB_ST_RUNNING" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;R&apos;" TYPTYPE="1" TYPE="TBTCO-STATUS">
    <TEXTS>
     <ITEM LANG="E" TEXT="JOB_ST_RUNNING"/>
     <ITEM LANG="F" TEXT="JOB_ST_RUNNING"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="JOB_ST_SCHEDULED" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;P&apos;" TYPTYPE="1" TYPE="TBTCO-STATUS">
    <TEXTS>
     <ITEM LANG="E" TEXT="JOB_ST_SCHEDULED"/>
     <ITEM LANG="F" TEXT="JOB_ST_SCHEDULED"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="JOB_ST_UNKNOWN_STATE" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;X&apos;" TYPTYPE="1" TYPE="TBTCO-STATUS">
    <TEXTS>
     <ITEM LANG="E" TEXT="JOB_ST_UNKNOWN_STATE"/>
     <ITEM LANG="F" TEXT="JOB_ST_UNKNOWN_STATE"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="LAST_PROGRESS" STATE="1" TYPTYPE="1" TYPE="T_PROGRESS">
    <TEXTS>
     <ITEM LANG="E" TEXT="Progression"/>
     <ITEM LANG="F" TEXT="Progression"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="MAX_MEM" EXPOSURE="2" STATE="1" TYPTYPE="1" TYPE="T_MEM_SIZE">
    <TEXTS>
     <ITEM LANG="E" TEXT="Estimated Memory size of the bloc"/>
     <ITEM LANG="F" TEXT="Estimated Memory size of the bloc"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="MSG_CAT_TYPES" STATE="1" TYPTYPE="1" TYPE="TT_MSG_CAT_TYPES">
    <TEXTS>
     <ITEM LANG="E" TEXT="Table des types de donnée pour catégorie de msg"/>
     <ITEM LANG="F" TEXT="Table des types de donnée pour catégorie de msg"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="MSG_IN_BACKGROUND" EXPOSURE="2" STATE="1" ATTVALUE="&apos;X&apos;" TYPTYPE="1" TYPE="T_BOOLEAN">
    <TEXTS>
     <ITEM LANG="E" TEXT="Envoi message progression en arrière plan Oui &apos;X&apos; ou &apos;N&apos;"/>
     <ITEM LANG="F" TEXT="Envoi message progression en arrière plan Oui &apos;X&apos; ou &apos;N&apos;"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="MSG_OBJECTS" STATE="1" TYPTYPE="1" TYPE="T_OBJ_COUNT">
    <TEXTS>
     <ITEM LANG="E" TEXT="Nombre d&apos;objet traiter par les messages"/>
     <ITEM LANG="F" TEXT="Nombre d&apos;objet traiter par les messages"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="MY_STATUS" EXPOSURE="2" STATE="1" ATTRDONLY="X" TYPTYPE="1" TYPE="TT_STATUS_LIST">
    <TEXTS>
     <ITEM LANG="E" TEXT="Liste des status"/>
     <ITEM LANG="F" TEXT="Liste des status"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="PROCESSED_OBJECTS" STATE="1" TYPTYPE="1" TYPE="T_OBJ_COUNT">
    <TEXTS>
     <ITEM LANG="E" TEXT="Nombre d&apos;objet déjà traité"/>
     <ITEM LANG="F" TEXT="Nombre d&apos;objet déjà traité"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="RUN_ID" EXPOSURE="2" STATE="1" ATTRDONLY="X" TYPTYPE="1" TYPE="T_RUN">
    <TEXTS>
     <ITEM LANG="E" TEXT="ID unique de l&apos;exécution"/>
     <ITEM LANG="F" TEXT="ID unique de l&apos;exécution"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="STATUS_TO_SEND" STATE="1" TYPTYPE="1" TYPE="TT_STATUS_LIST">
    <TEXTS>
     <ITEM LANG="E" TEXT="Liste des status"/>
     <ITEM LANG="F" TEXT="Liste des status"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="THREADS" EXPOSURE="2" STATE="1" ATTRDONLY="X" TYPTYPE="1" TYPE="T_THREADS">
    <TEXTS>
     <ITEM LANG="E" TEXT="Nombre de thread en cours"/>
     <ITEM LANG="F" TEXT="Nombre de thread en cours"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="THREAD_LAUNCHED" STATE="1" TYPTYPE="1" TYPE="TT_JOBLIST">
    <TEXTS>
     <ITEM LANG="E" TEXT="Liste des threads"/>
     <ITEM LANG="F" TEXT="Liste des threads"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TOTAL_OBJECTS" EXPOSURE="2" STATE="1" ATTRDONLY="X" TYPTYPE="1" TYPE="T_OBJ_COUNT">
    <TEXTS>
     <ITEM LANG="E" TEXT="Nombre d&apos;objet total"/>
     <ITEM LANG="F" TEXT="Nombre d&apos;objet total"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="WAIT_TIME" STATE="1" ATTDECLTYP="2" ATTVALUE="3" TYPTYPE="1" TYPE="T_TIME">
    <TEXTS>
     <ITEM LANG="E" TEXT="Temps d&apos;attende en secondes"/>
     <ITEM LANG="F" TEXT="Temps d&apos;attende en secondes"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="_BLOC_COUNT" STATE="1" TYPTYPE="1" TYPE="T_BLOC_COUNT">
    <TEXTS>
     <ITEM LANG="E" TEXT="Nombre de bloc pour traitement //"/>
     <ITEM LANG="F" TEXT="Nombre de bloc pour traitement //"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="_BLOC_SIZE" STATE="1" TYPTYPE="1" TYPE="T_BLOC_SIZE">
    <TEXTS>
     <ITEM LANG="E" TEXT="Taille d&apos;un bloc (unité mini de traitement)"/>
     <ITEM LANG="F" TEXT="Taille d&apos;un bloc (unité mini de traitement)"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="_STARTTIME" STATE="1" TYPTYPE="1" TYPE="T_TIMESTAMP">
    <TEXTS>
     <ITEM LANG="E" TEXT="Horodatage UTC sous forme étendue (AAAAMMJJhhmmssmmmuuun)"/>
     <ITEM LANG="F" TEXT="Horodatage UTC sous forme étendue (AAAAMMJJhhmmssmmmuuun)"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="_WEIGTH_TK" STATE="1" ATTDECLTYP="1" TYPTYPE="1" TYPE="R_TYPE_KIND">
    <TEXTS>
     <ITEM LANG="E" TEXT="Range de type_kind."/>
     <ITEM LANG="F" TEXT="Range de type_kind."/>
    </TEXTS>
   </ITEM>
  </ATTRIBUTS>
  <DEFERRED>
   <CLASSES>
    <ITEM TYPEGROUP="YGPL_MT_CATEGORI" TPUTYPE="1" EXPLICIT="X"/>
   </CLASSES>
  </DEFERRED>
  <EVENTS>
   <ITEM CMPNAME="HANDLE_SPECIFIC_MSG" EXPOSURE="2" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Traitement de vos messages (messages non systeme)"/>
     <ITEM LANG="F" TEXT="Traitement de vos messages (messages non systeme)"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="CAT" CMPTYPE="2" PARDECLTYP="1" TYPTYPE="1" TYPE="YGPL_MT_CATEGORI=&gt;_CATEG">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catégory"/>
       <ITEM LANG="F" TEXT="Catégory"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RAWDATA" CMPTYPE="2" PARDECLTYP="1" TYPTYPE="1" TYPE="T_RAWDATA">
      <TEXTS>
       <ITEM LANG="E" TEXT="Message à traiter"/>
       <ITEM LANG="F" TEXT="Message à traiter"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
   </ITEM>
   <ITEM CMPNAME="SUBMIT_THREAD" EXPOSURE="2" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Code utilisateur pour lancer un thread"/>
     <ITEM LANG="F" TEXT="Code utilisateur pour lancer un thread"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="JOBCOUNT" CMPTYPE="2" PARDECLTYP="1" TYPTYPE="1" TYPE="T_JOBCOUNT">
      <TEXTS>
       <ITEM LANG="E" TEXT="N° du job arrière plan"/>
       <ITEM LANG="F" TEXT="N° du job arrière plan"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="JOBNAME" CMPTYPE="2" PARDECLTYP="1" TYPTYPE="1" TYPE="T_JOBNAME">
      <TEXTS>
       <ITEM LANG="E" TEXT="Nom du job arrière plan"/>
       <ITEM LANG="F" TEXT="Nom du job arrière plan"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="THREAD_NUMBER" CMPTYPE="2" PARDECLTYP="1" TYPTYPE="1" TYPE="T_THREADS" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="N° du thread"/>
       <ITEM LANG="F" TEXT="N° du thread"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
   </ITEM>
  </EVENTS>
  <LOCAL>
   <TYPES>`
*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</TYPES>
   <IMPLEMENTATIONS>`
*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</IMPLEMENTATIONS>
   <MACROS>`
*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</MACROS>
  </LOCAL>
  <METHODS>
   <ITEM CMPNAME="ADD_THREAD" EXPOSURE="2" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Ajout un thread"/>
     <ITEM LANG="F" TEXT="Ajout un thread"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="JOBCOUNT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TBTCJOB-JOBCOUNT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Numéro d&apos;identification d&apos;un job"/>
       <ITEM LANG="F" TEXT="Numéro d&apos;identification d&apos;un job"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="JOBNAME" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TBTCJOB-JOBNAME">
      <TEXTS>
       <ITEM LANG="E" TEXT="Nom d&apos;un job d&apos;arrière-plan"/>
       <ITEM LANG="F" TEXT="Nom d&apos;un job d&apos;arrière-plan"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Echec d&apos;ajout"/>
       <ITEM LANG="F" TEXT="Echec d&apos;ajout"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="JOB_DOESNT_EXIST" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Le job n&apos;existe pas"/>
       <ITEM LANG="F" TEXT="Le job n&apos;existe pas"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA: _job LIKE LINE OF thread_launched.

  _job-jobcount = jobcount.
  _job-jobname = jobname.

  CALL METHOD _get_thread
    EXPORTING
      jobname          = _job-jobname
      jobcount         = _job-jobcount
    EXCEPTIONS
      job_doesnt_exist = 1
      others           = 2.
  IF sy-subrc &lt;&gt; 0.
    RAISE job_doesnt_exist.
  ENDIF.

  DESCRIBE TABLE thread_launched lines _job-num.
  add 1 to _job-num.
  APPEND _job TO thread_launched.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.

  DESCRIBE TABLE thread_launched lines threads.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CLASS_CONSTRUCTOR" EXPOSURE="2" STATE="1" MTDTYPE="2" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="CLASS_CONSTRUCTOR"/>
     <ITEM LANG="F" TEXT="CLASS_CONSTRUCTOR"/>
    </TEXTS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA: tk LIKE LINE OF _weigth_tk.

* Génerate Weight Typekind
  tk-sign = &apos;I&apos;. tk-option = &apos;EQ&apos;.
  tk-low = cl_abap_typedescr=&gt;typekind_num. APPEND tk TO _weigth_tk.
  tk-low = cl_abap_typedescr=&gt;typekind_packed. APPEND tk TO _weigth_tk.
  tk-low = cl_abap_typedescr=&gt;typekind_float. APPEND tk TO _weigth_tk.
  tk-low = cl_abap_typedescr=&gt;typekind_int. APPEND tk TO _weigth_tk.
  tk-low = cl_abap_typedescr=&gt;typekind_int1. APPEND tk TO _weigth_tk.
  tk-low = cl_abap_typedescr=&gt;typekind_int2. APPEND tk TO _weigth_tk.
  tk-low = cl_abap_typedescr=&gt;typekind_numeric. APPEND tk TO _weigth_tk.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CONFIRM_BATCH" EXPOSURE="2" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Confirm processing of a batch (n blocs)"/>
     <ITEM LANG="F" TEXT="Confirm processing of a batch (n blocs)"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="WAIT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_BOOLEAN" PARVALUE="&apos;X&apos;" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Attendre"/>
       <ITEM LANG="F" TEXT="Attendre"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Run creation has failed"/>
       <ITEM LANG="F" TEXT="Run creation has failed"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="GET_BATCH_FIRST" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Use GET_BATCH First"/>
       <ITEM LANG="F" TEXT="Use GET_BATCH First"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA _correction TYPE i.
  FIELD-SYMBOLS :
    &lt;wa_b&gt; LIKE LINE OF current_blocs.

  IF current_blocs IS INITIAL.
    RAISE get_batch_first.
  ENDIF.

  IF NOT status_to_send IS INITIAL.
    CALL METHOD send_obj_confirm.
  ENDIF.

  IF processed_objects &lt;&gt; msg_objects.
* External error all objects processed haven&apos;t get a status or too much
    _correction = processed_objects - msg_objects. &quot; aurait du etre envoyé - réellement envoyé
    CALL METHOD confirm_object
      EXPORTING
        status = ygpl_mt_status=&gt;inconsistency
        count  = _correction.
    CALL METHOD send_obj_confirm.
  ENDIF.

  LOOP AT current_blocs ASSIGNING &lt;wa_b&gt;.
    UPDATE ygpl_objects SET status = ygpl_mt_status=&gt;done
      WHERE bloc_id = &lt;wa_b&gt;-bloc_id.
    IF sy-subrc &lt;&gt; 0.
      ROLLBACK WORK.
      RAISE failed.
    ENDIF.
  ENDLOOP.

  DESCRIBE TABLE current_blocs LINES _correction.

  COMMIT WORK AND WAIT.
  CLEAR current_blocs.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CONFIRM_OBJECT" EXPOSURE="2" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Confirmer le traitement d&apos;un ou plusieurs Objets"/>
     <ITEM LANG="F" TEXT="Confirmer le traitement d&apos;un ou plusieurs Objets"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COUNT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_OBJ_COUNT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Nombre d&apos;objet"/>
       <ITEM LANG="F" TEXT="Nombre d&apos;objet"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="STATUS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_STATUS">
      <TEXTS>
       <ITEM LANG="E" TEXT="Status de Objets"/>
       <ITEM LANG="F" TEXT="Status de Objets"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA: statut LIKE LINE OF my_status.

  statut-status = status.
  statut-count = count.

  add count to MSG_OBJECTS.

  COLLECT statut INTO my_status.
  COLLECT statut INTO status_to_send.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CONSTRUCTOR" EXPOSURE="2" STATE="1" MTDTYPE="2">
    <TEXTS>
     <ITEM LANG="E" TEXT="CONSTRUCTOR"/>
     <ITEM LANG="F" TEXT="CONSTRUCTOR"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="MAX_MEM" CMPTYPE="1" MTDTYPE="2" PARPASSTYP="1" TYPTYPE="1" TYPE="T_MEM_SIZE" PARVALUE="0" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Estimated Memory size of the bloc"/>
       <ITEM LANG="F" TEXT="Estimated Memory size of the bloc"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RUN_ID" CMPTYPE="1" MTDTYPE="2" PARPASSTYP="1" TYPTYPE="1" TYPE="T_RUN" PAROPTIONL="X" PARPREFERD="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="ID unique de l&apos;exécution"/>
       <ITEM LANG="F" TEXT="ID unique de l&apos;exécution"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA:_run TYPE ts_run.

* Check Run_ID
  IF run_id IS INITIAL OR STRLEN( run_id ) &lt;&gt; 32.
    me-&gt;run_id = generate_run_id( ).
  ELSE.
    me-&gt;run_id = run_id.
    CALL METHOD _get_run
      EXPORTING
        lock      = abap_false
      IMPORTING
        run_data  = _run
      EXCEPTIONS
        not_found = 1
        failed    = 2
        OTHERS    = 3.
    IF sy-subrc &lt;&gt; 0.
      me-&gt;run_id = generate_run_id( ).
    ELSE.
      _bloc_size = _run-bloc_size.
    ENDIF.
  ENDIF.

* Save Max Memory
  me-&gt;max_mem = max_mem.
  GET TIME STAMP FIELD _starttime.

* Création des catégories.
  SELECT categ
  INTO TABLE msg_cat_types
  FROM ygpl_run_cat
  WHERE categ NOT IN ygpl_mt_categori=&gt;x_categ.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CONV_RAW2DATA" EXPOSURE="2" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Converti les donnée brute en donnée typé"/>
     <ITEM LANG="F" TEXT="Converti les donnée brute en donnée typé"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="DATA" CMPTYPE="1" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY">
      <TEXTS>
       <ITEM LANG="E" TEXT="Donnée typée"/>
       <ITEM LANG="F" TEXT="Donnée typée"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RAWDATA" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_RAWDATA">
      <TEXTS>
       <ITEM LANG="E" TEXT="Donnée brute à décoder avec CONV_RAW2DATA"/>
       <ITEM LANG="F" TEXT="Donnée brute à décoder avec CONV_RAW2DATA"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  TRY.
      IMPORT msg = data FROM DATA BUFFER rawdata.
**CX_SY_CONVERSION_CODEPAGE
**CX_SY_IMPORT_MISMATCH_ERROR
**CX_SY_IMPORT_FORMAT_ERROR
    CATCH cx_root.
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="DELETE_ALL" EXPOSURE="2" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Suppression de tout les run"/>
     <ITEM LANG="F" TEXT="Suppression de tout les run"/>
    </TEXTS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************

*  IF _run-run_id &lt;&gt; run_id.
  DELETE FROM ygpl_msgs.
  DELETE FROM ygpl_objects.
  DELETE FROM ygpl_run_info.
  DELETE FROM ygpl_run.

  COMMIT WORK AND WAIT.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="DELETE_RUN" EXPOSURE="2" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Suppression d&apos;un run complet"/>
     <ITEM LANG="F" TEXT="Suppression d&apos;un run complet"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="RUN_ID" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_RUN">
      <TEXTS>
       <ITEM LANG="E" TEXT="ID unique de l&apos;exécution"/>
       <ITEM LANG="F" TEXT="ID unique de l&apos;exécution"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Delete has failed"/>
       <ITEM LANG="F" TEXT="Delete has failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************

  CALL METHOD _lock
    EXPORTING
      run_id       = run_id
    EXCEPTIONS
      foreign_lock = 1
      sys_failure  = 2
      OTHERS       = 3.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.

*  IF _run-run_id &lt;&gt; run_id.
  DELETE FROM ygpl_msgs WHERE run_id = run_id.
  DELETE FROM ygpl_objects WHERE run_id = run_id.
  DELETE FROM ygpl_run_info WHERE run_id = run_id.
  DELETE FROM ygpl_run WHERE run_id = run_id.

  COMMIT WORK AND WAIT.

  CALL METHOD _unlock( run_id = run_id ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="GENERATE_RUN_ID" EXPOSURE="2" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Create a new RUN_ID"/>
     <ITEM LANG="F" TEXT="Create a new RUN_ID"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="RUN_ID" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="T_RUN">
      <TEXTS>
       <ITEM LANG="E" TEXT="ID unique de l&apos;exécution"/>
       <ITEM LANG="F" TEXT="ID unique de l&apos;exécution"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************

  CALL FUNCTION &apos;GUID_CREATE&apos;
    IMPORTING
*     EV_GUID_16       =
*     EV_GUID_22       =
      EV_GUID_32       = RUN_ID.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="GET_INFO" EXPOSURE="1" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Read info from DB"/>
     <ITEM LANG="F" TEXT="Read info from DB"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="CAT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="YGPL_MT_CATEGORI=&gt;_CATEG">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catégorie de donnée supplémentaire"/>
       <ITEM LANG="F" TEXT="Catégorie de donnée supplémentaire"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="INFO" CMPTYPE="1" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY">
      <TEXTS>
       <ITEM LANG="E" TEXT="Information à stocker"/>
       <ITEM LANG="F" TEXT="Information à stocker"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="CAT_NOT_FOUND" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catérogie non définie dans YGPL_RUN_CAT"/>
       <ITEM LANG="F" TEXT="Catérogie non définie dans YGPL_RUN_CAT"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="action has failed"/>
       <ITEM LANG="F" TEXT="action has failed"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="NOT_FOUND" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="information record do not exists"/>
       <ITEM LANG="F" TEXT="information record do not exists"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SYSTEM_CAT" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Utilisation d&apos;une catégorie systeme (non autorisé)"/>
       <ITEM LANG="F" TEXT="Utilisation d&apos;une catégorie systeme (non autorisé)"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  IF cat IN ygpl_mt_categori=&gt;x_categ. RAISE system_cat. ENDIF.
  IF ygpl_mt_categori=&gt;do_exists( cat ) IS INITIAL. RAISE cat_not_found. ENDIF.

  CALL METHOD _get_info
    EXPORTING
      categ     = cat
    IMPORTING
      info      = info
    EXCEPTIONS
      failed    = 1
      not_found = 2
      OTHERS    = 3.
  IF sy-subrc = 2.
    RAISE not_found.
  ELSEIF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SEND_MESSAGE" EXPOSURE="1" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Send message to DB"/>
     <ITEM LANG="F" TEXT="Send message to DB"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="CAT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="YGPL_MT_CATEGORI=&gt;_CATEG">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catégorie de donnée supplémentaire"/>
       <ITEM LANG="F" TEXT="Catégorie de donnée supplémentaire"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="MSG" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY">
      <TEXTS>
       <ITEM LANG="E" TEXT="Donnée du message"/>
       <ITEM LANG="F" TEXT="Donnée du message"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="CAT_HAS_NO_DATATYPE" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="No Datatype has been define for this categorie"/>
       <ITEM LANG="F" TEXT="No Datatype has been define for this categorie"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="CAT_NOT_FOUND" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catérogie non définie dans YGPL_RUN_CAT"/>
       <ITEM LANG="F" TEXT="Catérogie non définie dans YGPL_RUN_CAT"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Action has failed"/>
       <ITEM LANG="F" TEXT="Action has failed"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SYSTEM_CAT" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Utilisation d&apos;une catégorie systeme (non autorisé)"/>
       <ITEM LANG="F" TEXT="Utilisation d&apos;une catégorie systeme (non autorisé)"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  FIELD-SYMBOLS:
    &lt;wa&gt; LIKE LINE OF msg_cat_types.

  IF cat IN ygpl_mt_categori=&gt;x_categ. RAISE system_cat. ENDIF.
  IF ygpl_mt_categori=&gt;do_exists( cat ) IS INITIAL. RAISE cat_not_found. ENDIF.

  READ TABLE msg_cat_types WITH TABLE KEY cat = cat ASSIGNING &lt;wa&gt;.
  IF sy-subrc &lt;&gt; 0.
    RAISE cat_has_no_datatype.
  ENDIF.
  IF &lt;wa&gt;-ok = abap_false.
    RAISE cat_has_no_datatype.
  ENDIF.

  CALL METHOD _send_message
    EXPORTING
      categ  = cat
      msg    = msg
    EXCEPTIONS
      failed = 1
      OTHERS = 2.
  IF sy-subrc &lt;&gt; 0.
    ROLLBACK WORK.
    RAISE failed.
  ENDIF.
  COMMIT WORK AND WAIT.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SEND_OBJ_CONFIRM" EXPOSURE="2" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Envoyer régulièrement les confirmations des objets"/>
     <ITEM LANG="F" TEXT="Envoyer régulièrement les confirmations des objets"/>
    </TEXTS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="action failed"/>
       <ITEM LANG="F" TEXT="action failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************

  IF status_to_send IS INITIAL.
    RETURN.
  ENDIF.

  CALL METHOD _send_message
    EXPORTING
      categ  = ygpl_mt_categori=&gt;obj_conf
      msg    = status_to_send
    EXCEPTIONS
      failed = 1
      OTHERS = 2.
  IF sy-subrc &lt;&gt; 0.
    ROLLBACK WORK.
    RAISE failed.
  ENDIF.
  COMMIT WORK AND WAIT.
  FREE status_to_send.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SET_INFO" EXPOSURE="1" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Write info to DB"/>
     <ITEM LANG="F" TEXT="Write info to DB"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="CAT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="YGPL_MT_CATEGORI=&gt;_CATEG">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catégorie de donnée supplémentaire"/>
       <ITEM LANG="F" TEXT="Catégorie de donnée supplémentaire"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="INFO" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY">
      <TEXTS>
       <ITEM LANG="E" TEXT="Information à stocker"/>
       <ITEM LANG="F" TEXT="Information à stocker"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="CAT_NOT_FOUND" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catérogie non définie dans YGPL_RUN_CAT"/>
       <ITEM LANG="F" TEXT="Catérogie non définie dans YGPL_RUN_CAT"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="action has failed"/>
       <ITEM LANG="F" TEXT="action has failed"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SYSTEM_CAT" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Utilisation d&apos;une catégorie systeme (non autorisé)"/>
       <ITEM LANG="F" TEXT="Utilisation d&apos;une catégorie systeme (non autorisé)"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  IF cat IN ygpl_mt_categori=&gt;x_categ. RAISE system_cat. ENDIF.
  IF ygpl_mt_categori=&gt;do_exists( cat ) IS INITIAL. RAISE cat_not_found. ENDIF.

  CALL METHOD _set_info
    EXPORTING
      categ  = cat
      info   = info
    EXCEPTIONS
      failed = 1
      others = 2.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="START_THREADS" EXPOSURE="2" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Create threads and call event new thread"/>
     <ITEM LANG="F" TEXT="Create threads and call event new thread"/>
    </TEXTS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Action a échoué"/>
       <ITEM LANG="F" TEXT="Action a échoué"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SUBMIT_THREAD" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Erreur dans l&apos;event submit_thread aucune étape de job crée"/>
       <ITEM LANG="F" TEXT="Erreur dans l&apos;event submit_thread aucune étape de job crée"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  FIELD-SYMBOLS:
    &lt;th&gt; LIKE LINE OF thread_launched.
  DATA:
    _startParam type TBTCSTRT,
    _useless TYPE STANDARD TABLE OF tbtcstep,
    _steps TYPE	tt_stepinfo,
    _jobname TYPE t_jobname,
    _jobcount TYPE t_jobcount,
    _thread TYPE t_threads.

  DO threads TIMES.
    ADD 1 TO _thread.
    _jobname = _thread. CONDENSE _jobname.
    MESSAGE i003(ygpl_mt_rootclass) WITH sy-cprog _jobname INTO _jobname.
    CALL FUNCTION &apos;JOB_OPEN&apos;
      EXPORTING
*     DELANFREP              = &apos; &apos;
*     JOBGROUP               = &apos; &apos;
        jobname                = _jobname
*     SDLSTRTDT              = NO_DATE
*     SDLSTRTTM              = NO_TIME
*     JOBCLASS               =
      IMPORTING
        jobcount               = _jobcount
*   CHANGING
*     RET                    =
     EXCEPTIONS
       cant_create_job        = 1
       invalid_job_data       = 2
       jobname_missing        = 3
       OTHERS                 = 4.
    IF sy-subrc &lt;&gt; 0.
      RAISE failed.
    ENDIF.

    CALL METHOD add_thread
      EXPORTING
        jobname          = _jobname
        jobcount         = _jobcount
      EXCEPTIONS
        job_doesnt_exist = 1
        failed           = 2
        OTHERS           = 3.
    IF sy-subrc &lt;&gt; 0.
      RAISE failed.
    ENDIF.

* Event that call a SUBMIT
    RAISE EVENT submit_thread
      EXPORTING
        jobname       = _jobname
        jobcount      = _jobcount
        thread_number = _thread.

* Check step added
    CALL METHOD _get_thread_details
      EXPORTING
        jobname          = _jobname
        jobcount         = _jobcount
      IMPORTING
*        job_info         =
        steps            = _steps
      EXCEPTIONS
        job_doesnt_exist = 1
        OTHERS           = 2.
    IF sy-subrc &lt;&gt; 0 OR _steps IS INITIAL.
      RAISE submit_thread.
    ENDIF.

    CALL FUNCTION &apos;JOB_CLOSE&apos;
      EXPORTING
*     AT_OPMODE                         = &apos; &apos;
*     AT_OPMODE_PERIODIC                = &apos; &apos;
*     CALENDAR_ID                       = &apos; &apos;
*     EVENT_ID                          = &apos; &apos;
*     EVENT_PARAM                       = &apos; &apos;
*     EVENT_PERIODIC                    = &apos; &apos;
        jobcount                          = _jobcount
        jobname                           = _jobname
*     LASTSTRTDT                        = NO_DATE
*     LASTSTRTTM                        = NO_TIME
*     PRDDAYS                           = 0
*     PRDHOURS                          = 0
*     PRDMINS                           = 0
*     PRDMONTHS                         = 0
*     PRDWEEKS                          = 0
*     PREDJOB_CHECKSTAT                 = &apos; &apos;
*     PRED_JOBCOUNT                     = &apos; &apos;
*     PRED_JOBNAME                      = &apos; &apos;
*     SDLSTRTDT                         = NO_DATE
*     SDLSTRTTM                         = NO_TIME
*     STARTDATE_RESTRICTION             = BTC_PROCESS_ALWAYS
        strtimmed                         = abap_false
*     TARGETSYSTEM                      = &apos; &apos;
*     START_ON_WORKDAY_NOT_BEFORE       = SY-DATUM
*     START_ON_WORKDAY_NR               = 0
*     WORKDAY_COUNT_DIRECTION           = 0
*     RECIPIENT_OBJ                     =
*     TARGETSERVER                      = &apos; &apos;
*     DONT_RELEASE                      = &apos; &apos;
*     TARGETGROUP                       = &apos; &apos;
*     DIRECT_START                      =
*   IMPORTING
*     JOB_WAS_RELEASED                  =
*   CHANGING
*     RET                               =
     EXCEPTIONS
       cant_start_immediate              = 1
       invalid_startdate                 = 2
       jobname_missing                   = 3
       job_close_failed                  = 4
       job_nosteps                       = 5
       job_notex                         = 6
       lock_failed                       = 7
       invalid_target                    = 8
       OTHERS                            = 9.
    IF sy-subrc &gt; 1.
      RAISE failed.
    ENDIF.

  ENDDO.

* If all jobs correctly added start them.
*   btc_stdt_immediate  LIKE  tbtcstrt-startdttyp VALUE &apos;I&apos;,
*  btc_stdt_datetime   LIKE  tbtcstrt-startdttyp VALUE &apos;D&apos;,
*  btc_stdt_event      LIKE  tbtcstrt-startdttyp VALUE &apos;E&apos;,
*  btc_stdt_afterjob   LIKE  tbtcstrt-startdttyp VALUE &apos;A&apos;,
*  btc_stdt_onworkday  LIKE  tbtcstrt-startdttyp VALUE &apos;W&apos;.
  _startParam-STARTDTTYP = &apos;I&apos;.
  LOOP AT thread_launched ASSIGNING &lt;th&gt;.
    CALL FUNCTION &apos;BP_JOB_MODIFY&apos;
      EXPORTING
        dialog                           = &apos;N&apos;
        jobcount                         = &lt;th&gt;-jobcount
        jobname                          = &lt;th&gt;-jobname
*       NEW_JOBHEAD                      = &apos; &apos;
        opcode                           = 17
        RELEASE_STDT                     = _startParam
*       RELEASE_TARGETSYSTEM             = &apos; &apos;
*       SUPPRESS_RELEASE_CHECK           = &apos; &apos;
*       ADK_MODE                         = FALSE
*       RECIPIENT_OBJ                    =
*       RELEASE_TARGETSERVER             = &apos; &apos;
*       DONT_RELEASE                     = &apos; &apos;
*       TARGETGROUP                      = &apos; &apos;
*        DIRECT_START                     = abap_true
*     IMPORTING
*       MODIFIED_JOBHEAD                 =
      TABLES
        new_steplist                     = _useless
*     CHANGING
*       RET                              =
     EXCEPTIONS
       cant_derelease_job               = 1
       cant_enq_job                     = 2
       cant_read_jobdata                = 3
       cant_release_job                 = 4
       cant_set_jobstatus_in_db         = 5
       cant_start_job_immediately       = 6
       cant_update_jobdata              = 7
       eventcnt_generation_error        = 8
       invalid_dialog_type              = 9
       invalid_new_jobdata              = 10
       invalid_new_jobstatus            = 11
       invalid_opcode                   = 12
       invalid_startdate                = 13
       job_edit_failed                  = 14
       job_modify_canceled              = 15
       job_not_modifiable_anymore       = 16
       nothing_to_do                    = 17
       no_batch_on_target_host          = 18
       no_batch_server_found            = 19
       no_batch_wp_for_jobclass         = 20
       no_modify_privilege_given        = 21
       no_release_privilege_given       = 22
       no_startdate_no_release          = 23
       target_host_not_defined          = 24
       tgt_host_chk_has_failed          = 25
       invalid_targetgroup              = 26
       conflicting_targets              = 27
       OTHERS                           = 28
              .
    IF sy-subrc &lt;&gt; 0.
      RAISE failed.
    ENDIF.

*    CALL FUNCTION &apos;BP_JOB_RELEASE&apos;
*      EXPORTING
*        jobname                     = &lt;th&gt;-jobname
*        jobcount                    = &lt;th&gt;-jobcount
*      CHANGING
*        ret                         = _ret
*      EXCEPTIONS
*        missing_jobname             = 1
*        missing_jobcount            = 2
*        missing_start_date          = 3
*        status_not_scheduled        = 4
*        cant_enq_job                = 5
*        cant_start_job_immediately  = 6
*        no_privilege_to_release_job = 7
*        cant_release_job            = 8
*        job_not_exist               = 9
*        job_have_no_steps           = 10
*        error_job_modify            = 11
*        OTHERS                      = 12.
*    IF sy-subrc &lt;&gt; 0 OR _ret &lt;&gt; 0.
*      RAISE failed.
*    ENDIF.

  ENDLOOP.
  get TIME STAMP FIELD _STARTTIME.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="WAIT_PROGRESS" EXPOSURE="2" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Récupération des information de progression"/>
     <ITEM LANG="F" TEXT="Récupération des information de progression"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="FINISH" CMPTYPE="1" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_BOOLEAN">
      <TEXTS>
       <ITEM LANG="E" TEXT="All threads have ended"/>
       <ITEM LANG="F" TEXT="All threads have ended"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="MINI_PROGRESS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_PROGRESS" PARVALUE="1" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Progression"/>
       <ITEM LANG="F" TEXT="Progression"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="MINI_WAIT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_TIME" PARVALUE="60" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Temps en seconde"/>
       <ITEM LANG="F" TEXT="Temps en seconde"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="PROGRESS" CMPTYPE="1" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING">
      <TEXTS>
       <ITEM LANG="E" TEXT="% de progression"/>
       <ITEM LANG="F" TEXT="% de progression"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Echec"/>
       <ITEM LANG="F" TEXT="Echec"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA:  _in TYPE timestampl,
         _delta TYPE timestampl,
         _out TYPE timestampl,
         _sec TYPE t_time.
  DATA pos TYPE i.
  DATA new_p TYPE t_progress.
  DATA delta_p TYPE t_progress.
  DATA msg_read TYPE oax.
  DATA: duration TYPE sy-uzeit, d_str(15) TYPE c.
  DATA: end_str(50) TYPE c.
  DATA str TYPE string.
  DATA duree(9) TYPE p DECIMALS 5.
  DATA duree_p(9) TYPE p DECIMALS 5.
  DATA tmp_line(10) TYPE c.

  IF mini_wait &gt; 0.
    GET TIME STAMP FIELD _in.
  ENDIF.
  DO.
    new_p = processed_objects / total_objects * 100.
    delta_p = new_p - last_progress.
    IF delta_p &gt; mini_progress.
      GET TIME STAMP FIELD _out.
      _delta = _out - _in.
      _sec = _delta.
      IF _sec &gt;= mini_wait.
        EXIT.
      ENDIF.
    ENDIF.

    CALL METHOD _handle_msg
      IMPORTING
        msg_read = msg_read
      EXCEPTIONS
        failed   = 1
        OTHERS   = 2.
    IF sy-subrc &lt;&gt; 0.
      RAISE failed.
    ENDIF.

    IF msg_read IS INITIAL.
      CALL METHOD _sleep.
    ENDIF.

    CALL METHOD _check_active_threads( ).
    IF thread_launched IS INITIAL.

* To collect last sended messages after threads has ended.
      CALL METHOD _handle_msg
        IMPORTING
          msg_read = msg_read
        EXCEPTIONS
          failed   = 1
          OTHERS   = 2.
      IF sy-subrc &lt;&gt; 0.
* Ingore exceptions
      ENDIF.

* Clear blocs
      IF NOT clear_obj IS INITIAL.
        CALL METHOD _del_obj
          EXPORTING
            run_id = run_id
          EXCEPTIONS
            failed = 1
            OTHERS = 2.
        IF sy-subrc &lt;&gt; 0.
* Ingore exceptions
        ENDIF.
      ENDIF.

      new_p = 100.
      finish = abap_true.
      EXIT.
    ENDIF.

  ENDDO.

  last_progress = new_p.
  WRITE last_progress DECIMALS 1 TO tmp_line.
  CONDENSE tmp_line.

* Calcul temps restant
  IF new_p &gt; 0.
    GET TIME STAMP FIELD _in.

    TRY.
        duree = cl_abap_tstmp=&gt;subtract(
            tstmp1 = _in
            tstmp2 = _starttime
            ).
      CATCH cx_parameter_invalid_range .
        duree = ( _in - _starttime ).
      CATCH cx_parameter_invalid_type .
        duree = ( _in - _starttime ).
    ENDTRY.
    duree_p = duree * 100 / new_p.

    _out = ( duree_p - duree ). &quot;temps restant
    IF _out &lt; 0. _out = 0. ENDIF.
    _out = _out + END_TIME.
    duration = _out.
    WRITE duration TO d_str.

    TRY.
        _out = cl_abap_tstmp=&gt;add(
            tstmp   = _starttime
            secs    = duree_p
            ).
      CATCH cx_parameter_invalid_range .
        _out = _starttime + duree_p.
      CATCH cx_parameter_invalid_type .
        _out = _starttime + duree_p.
    ENDTRY.
    WRITE _out TIME ZONE sy-zonlo TO end_str.
    FIND FIRST OCCURRENCE OF &apos;,&apos; IN end_str MATCH OFFSET pos.
    IF sy-subrc = 0.
      end_str = end_str(pos).
    ENDIF.
  ENDIF.

  IF NOT sy-batch IS INITIAL.
    MESSAGE i000(ygpl_mt_rootclass) WITH tmp_line d_str end_str.
  ELSE.
    MESSAGE i001(ygpl_mt_rootclass) WITH tmp_line d_str end_str INTO str.
    CALL FUNCTION &apos;SAPGUI_PROGRESS_INDICATOR&apos;
      EXPORTING
        percentage = new_p
        text       = str.
  ENDIF.
  progress = tmp_line.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_ADD_BLOC" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Add object bloc"/>
     <ITEM LANG="F" TEXT="Add object bloc"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="BLOC_SIZE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_BLOC_SIZE" PARVALUE="-1" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Taille d&apos;un bloc (unité mini de traitement)"/>
       <ITEM LANG="F" TEXT="Taille d&apos;un bloc (unité mini de traitement)"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Liste d&apos;objet générique"/>
       <ITEM LANG="F" TEXT="Liste d&apos;objet générique"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Bloc insertion or creation has failed"/>
       <ITEM LANG="F" TEXT="Bloc insertion or creation has failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA _bloc TYPE ygpl_objects.

  _bloc-bloc_id =  _generate_bloc_id( ).
  _bloc-run_id = run_id.
  _bloc-status = ygpl_mt_status=&gt;to_do.
  DESCRIBE TABLE objects LINES _bloc-nb.
  IF bloc_size &lt;= 0.
    _bloc-bloc_size = _bloc-nb.
  ELSE.
    _bloc-bloc_size = bloc_size.
  ENDIF.
  _bloc-mem_size = _get_size( objects ).
  EXPORT objects = objects TO DATA BUFFER _bloc-obj_data COMPRESSION ON.
  IF sy-subrc = 0.
    GET TIME STAMP FIELD _bloc-timestamp.
    INSERT ygpl_objects FROM _bloc.
    ADD 1 TO _bloc_count.
  ENDIF.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_ADD_OBJ_2_MICRO_BLOC" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Add object to micro bloc"/>
     <ITEM LANG="F" TEXT="Add object to micro bloc"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="BLOC" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_OBJ_NUM">
      <TEXTS>
       <ITEM LANG="E" TEXT="Numéro de bloc"/>
       <ITEM LANG="F" TEXT="Numéro de bloc"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="M_BLOC" CMPTYPE="1" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_BLOCS_NFO">
      <TEXTS>
       <ITEM LANG="E" TEXT="Table dépendance bloc"/>
       <ITEM LANG="F" TEXT="Table dépendance bloc"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJ" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_OBJ_NUM">
      <TEXTS>
       <ITEM LANG="E" TEXT="Numéro d&apos;objet"/>
       <ITEM LANG="F" TEXT="Numéro d&apos;objet"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJ2BLOCS" CMPTYPE="1" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_LINES_NFO">
      <TEXTS>
       <ITEM LANG="E" TEXT="Table dépendance bloc : OBJ-&gt;Bloc ou Bloc-&gt;Obj"/>
       <ITEM LANG="F" TEXT="Table dépendance bloc : OBJ-&gt;Bloc ou Bloc-&gt;Obj"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SIZE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_BLOC_SIZE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
       <ITEM LANG="F" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Action failed"/>
       <ITEM LANG="F" TEXT="Action failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  FIELD-SYMBOLS:
    &lt;bloc&gt; LIKE LINE OF m_bloc.
  DATA _obj LIKE LINE OF &lt;bloc&gt;-objs.

  READ TABLE m_bloc WITH TABLE KEY id = bloc ASSIGNING &lt;bloc&gt;.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.

  ADD size TO &lt;bloc&gt;-size.
  _obj-id = obj.
  APPEND _obj TO &lt;bloc&gt;-objs.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.

  CALL METHOD _set_obj_bloc
    EXPORTING
      obj       = obj
      bloc      = bloc
    changing
      obj2blocs = obj2blocs
    EXCEPTIONS
      failed    = 1
      others    = 2.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_ADD_RUN" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Add Run record"/>
     <ITEM LANG="F" TEXT="Add Run record"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="BLOC_SIZE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_BLOC_SIZE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
       <ITEM LANG="F" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="COUNT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="INT4">
      <TEXTS>
       <ITEM LANG="E" TEXT="Objets à traiter"/>
       <ITEM LANG="F" TEXT="Objets à traiter"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="THREADS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_THREADS">
      <TEXTS>
       <ITEM LANG="E" TEXT="Entier naturel"/>
       <ITEM LANG="F" TEXT="Entier naturel"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Run creation has failed"/>
       <ITEM LANG="F" TEXT="Run creation has failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA _run TYPE ygpl_run.

  _run-run_id = run_id.
  _run-threads = me-&gt;threads = threads.
  _run-obj_left = _run-objects = count.
  _run-bloc_size = bloc_size.
  GET TIME STAMP FIELD _run-timestamp.
  IF bloc_size &gt; 0. COMPUTE _run-blocs = ( count - 1 ) div bloc_size + 1. ELSE. _run-blocs = count. ENDIF.
  INSERT ygpl_run FROM _run.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_CHECK_ACTIVE_THREADS" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Check threads active"/>
     <ITEM LANG="F" TEXT="Check threads active"/>
    </TEXTS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA: job_info TYPE ts_job_info.
  FIELD-SYMBOLS:
    &lt;th&gt; LIKE LINE OF thread_launched.

  LOOP AT thread_launched ASSIGNING &lt;th&gt;.
    CALL METHOD _get_thread
      EXPORTING
        jobname          = &lt;th&gt;-jobname
        jobcount         = &lt;th&gt;-jobcount
      IMPORTING
        job_info         = job_info
      EXCEPTIONS
        job_doesnt_exist = 1
        OTHERS           = 2.
    IF sy-subrc &lt;&gt; 0 OR job_info-status = job_st_aborted OR job_info-status = job_st_finished.
      IF job_info-status = job_st_finished.
        IF NOT sy-batch IS INITIAL.
          MESSAGE i006(ygpl_mt_rootclass) WITH &lt;th&gt;-num &lt;th&gt;-jobname &lt;th&gt;-jobcount.
        ENDIF.
      ELSE.
        IF NOT sy-batch IS INITIAL.
          MESSAGE i007(ygpl_mt_rootclass) WITH &lt;th&gt;-num &lt;th&gt;-jobname &lt;th&gt;-jobcount.
        ELSE.
          MESSAGE w007(ygpl_mt_rootclass) WITH &lt;th&gt;-num &lt;th&gt;-jobname &lt;th&gt;-jobcount.
        ENDIF.
      ENDIF.
      DELETE thread_launched.
    ENDIF.
  ENDLOOP.

  DESCRIBE TABLE thread_launched LINES threads.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_CHECK_WEIGHT_FN" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Controle validité du champs Weight"/>
     <ITEM LANG="F" TEXT="Controle validité du champs Weight"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="OBJECTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Liste d&apos;objet générique"/>
       <ITEM LANG="F" TEXT="Liste d&apos;objet générique"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="WEIGHT_FN" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_FN">
      <TEXTS>
       <ITEM LANG="E" TEXT="Field Name du numérique poids"/>
       <ITEM LANG="F" TEXT="Field Name du numérique poids"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Weight_FN is incorect"/>
       <ITEM LANG="F" TEXT="Weight_FN is incorect"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA: abap_type TYPE REF TO cl_abap_typedescr.
  DATA: abap_structure TYPE REF TO cl_abap_structdescr.
  DATA line_ref TYPE REF TO data.

  FIELD-SYMBOLS :
    &lt;field&gt; LIKE LINE OF cl_abap_structdescr=&gt;components,
    &lt;wa&gt; TYPE ANY.

  abap_type = cl_abap_typedescr=&gt;describe_by_data( objects ).

  IF abap_type-&gt;kind &lt;&gt; cl_abap_typedescr=&gt;kind_table.
    RAISE failed.
  ENDIF.

  CREATE DATA line_ref LIKE LINE OF objects.
  ASSIGN line_ref-&gt;* TO &lt;wa&gt;.

  abap_type = cl_abap_typedescr=&gt;describe_by_data( &lt;wa&gt; ).
  IF abap_type-&gt;kind &lt;&gt; cl_abap_typedescr=&gt;kind_struct.
    RAISE failed.
  ENDIF.

  abap_structure ?= abap_type.

  READ TABLE abap_structure-&gt;components ASSIGNING &lt;field&gt; WITH KEY name = weight_fn.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ELSEIF NOT &lt;field&gt;-type_kind IN _weigth_tk.
    RAISE failed.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_CREATE_BLOCS" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Create blocs"/>
     <ITEM LANG="F" TEXT="Create blocs"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="BLOC_SIZE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_BLOC_SIZE" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
       <ITEM LANG="F" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="DEPENDENCIES" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_DEPENDENCIES" PAROPTIONL="X"/>
     <ITEM SCONAME="OBJECTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Liste d&apos;objet générique"/>
       <ITEM LANG="F" TEXT="Liste d&apos;objet générique"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="WEIGHT_FN" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_FN" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Field Name du numérique poids"/>
       <ITEM LANG="F" TEXT="Field Name du numérique poids"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Run creation has failed"/>
       <ITEM LANG="F" TEXT="Run creation has failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA _wfn TYPE t_fn.
  DATA tab_ref TYPE REF TO data.
  DATA _from TYPE i.
  DATA _to TYPE i.

  FIELD-SYMBOLS :
    &lt;fs&gt; LIKE objects.

  IF NOT weight_fn IS INITIAL.
    CALL METHOD _check_weight_fn
      EXPORTING
        OBJECTS   = OBJECTS
        weight_fn = weight_fn
      EXCEPTIONS
        failed    = 1
        OTHERS    = 2.
    IF sy-subrc &lt;&gt; 0.
      RAISE failed.
    ENDIF.
    _wfn = weight_fn.
  ENDIF.

  IF _wfn IS INITIAL AND dependencies IS INITIAL.
* Quick Bloc Generation
    CREATE DATA tab_ref LIKE objects.
    ASSIGN tab_ref-&gt;* TO &lt;fs&gt;.
    _from = 1.
    DO.
      _to = _from + bloc_size - 1.
      IF _to &gt; total_objects. _to = total_objects. ENDIF.
      APPEND LINES OF objects FROM _from TO _to TO &lt;fs&gt;.
      CALL METHOD _add_bloc
        EXPORTING
          OBJECTS = &lt;fs&gt;
        EXCEPTIONS
          failed  = 1
          OTHERS  = 2.
      IF sy-subrc &lt;&gt; 0.
        RAISE failed.
      ENDIF.
      IF _to &gt;= total_objects.
        EXIT.
      ELSE.
        _from = _to + 1.
      ENDIF.
      CLEAR &lt;fs&gt;.
    ENDDO.
  ELSE.
    CALL METHOD _create_complex_blocs
      EXPORTING
        OBJECTS      = OBJECTS
        bloc_size    = bloc_size
        weight_fn    = weight_fn
        dependencies = dependencies
      EXCEPTIONS
        failed       = 1
        OTHERS       = 2.
    IF sy-subrc &lt;&gt; 0.
      RAISE failed.
    ENDIF.
  ENDIF.

  CALL METHOD _update_bloc_count.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_CREATE_COMPLEX_BLOCS" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Create blocs complexes (avec dépendant et/ou par poids)"/>
     <ITEM LANG="F" TEXT="Create blocs complexes (avec dépendant et/ou par poids)"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="BLOC_SIZE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_BLOC_SIZE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
       <ITEM LANG="F" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="DEPENDENCIES" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_DEPENDENCIES">
      <TEXTS>
       <ITEM LANG="E" TEXT="Table des dépendences"/>
       <ITEM LANG="F" TEXT="Table des dépendences"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Liste d&apos;objet générique"/>
       <ITEM LANG="F" TEXT="Liste d&apos;objet générique"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="WEIGHT_FN" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_FN">
      <TEXTS>
       <ITEM LANG="E" TEXT="Field Name du numérique poids"/>
       <ITEM LANG="F" TEXT="Field Name du numérique poids"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Run creation has failed"/>
       <ITEM LANG="F" TEXT="Run creation has failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA it_objlst TYPE tt_lines_nfo.
  DATA tab_ref TYPE REF TO data.
  DATA fn TYPE string.
  DATA weight TYPE t_bloc_size.
  DATA b_weight TYPE t_bloc_size.
  DATA line_ref TYPE REF TO data.

  FIELD-SYMBOLS :
    &lt;obj&gt; TYPE ANY,
    &lt;weight&gt; TYPE ANY,
    &lt;objects&gt; LIKE objects,
    &lt;wa&gt; TYPE ANY.

  IF NOT dependencies IS INITIAL.
    CALL METHOD _create_with_dependencies
      EXPORTING
        OBJECTS      = OBJECTS
        bloc_size    = bloc_size
        weight_fn    = weight_fn
        dependencies = dependencies
      IMPORTING
        done_obj     = it_objlst
      EXCEPTIONS
        failed       = 1
        OTHERS       = 2.
    IF sy-subrc &lt;&gt; 0.
      RAISE failed.
    ENDIF.
  ENDIF.

  CREATE DATA line_ref LIKE LINE OF objects.
  ASSIGN line_ref-&gt;* TO &lt;wa&gt;.

  CREATE DATA tab_ref LIKE objects.
  ASSIGN tab_ref-&gt;* TO &lt;objects&gt;.

  IF NOT weight_fn IS INITIAL. CONCATENATE &apos;&lt;obj&gt;-&apos; weight_fn INTO fn. ENDIF.
  LOOP AT objects ASSIGNING &lt;obj&gt;.
* check obj allready done
    READ TABLE it_objlst WITH TABLE KEY key = sy-tabix TRANSPORTING NO FIELDS.
    IF sy-subrc = 0.
      CONTINUE.
    ENDIF.
* Weight determine
    weight = 1.
    IF NOT fn IS INITIAL.
      ASSIGN (fn) TO &lt;weight&gt;.
      IF sy-subrc = 0.
        weight = &lt;weight&gt;.
      ENDIF.
    ENDIF.
* Add bloc
    ADD weight TO b_weight.
    IF b_weight &gt;= bloc_size.
      SUBTRACT weight FROM b_weight.
      CALL METHOD _add_bloc
        EXPORTING
          OBJECTS   = &lt;objects&gt;
          bloc_size = b_weight
        EXCEPTIONS
          failed    = 1
          OTHERS    = 2.
      IF sy-subrc &lt;&gt; 0.
        RAISE failed.
      ENDIF.
      b_weight = weight.
      FREE: &lt;objects&gt;.
    ENDIF.
* DO the line
    &lt;wa&gt; = &lt;obj&gt;.
    APPEND &lt;wa&gt; TO &lt;objects&gt;.
  ENDLOOP.

* Add last bloc
  IF NOT &lt;objects&gt; IS INITIAL.
    CALL METHOD _add_bloc
      EXPORTING
        OBJECTS   = &lt;objects&gt;
        bloc_size = b_weight
      EXCEPTIONS
        failed    = 1
        OTHERS    = 2.
    IF sy-subrc &lt;&gt; 0.
      RAISE failed.
    ENDIF.
    FREE: &lt;objects&gt;.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_CREATE_MICRO_BLOC" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Create a new micro bloc"/>
     <ITEM LANG="F" TEXT="Create a new micro bloc"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="BLOC" CMPTYPE="1" PARDECLTYP="1" TYPTYPE="1" TYPE="T_OBJ_NUM">
      <TEXTS>
       <ITEM LANG="E" TEXT="Numéro de bloc"/>
       <ITEM LANG="F" TEXT="Numéro de bloc"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="M_BLOC" CMPTYPE="1" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_BLOCS_NFO">
      <TEXTS>
       <ITEM LANG="E" TEXT="Table dépendance bloc"/>
       <ITEM LANG="F" TEXT="Table dépendance bloc"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJ" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_OBJ_NUM">
      <TEXTS>
       <ITEM LANG="E" TEXT="Numéro d&apos;objet"/>
       <ITEM LANG="F" TEXT="Numéro d&apos;objet"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJ2BLOCS" CMPTYPE="1" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_LINES_NFO">
      <TEXTS>
       <ITEM LANG="E" TEXT="Table dépendance bloc : OBJ-&gt;Bloc ou Bloc-&gt;Obj"/>
       <ITEM LANG="F" TEXT="Table dépendance bloc : OBJ-&gt;Bloc ou Bloc-&gt;Obj"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SIZE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_BLOC_SIZE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
       <ITEM LANG="F" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="action failed"/>
       <ITEM LANG="F" TEXT="action failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  STATICS: next_id TYPE t_obj_num.
  DATA _wa LIKE LINE OF m_bloc.
  DATA _obj LIKE LINE OF _wa-objs.

  ADD 1 TO next_id.
  _wa-id = next_id.
  IF size &lt; 1. _wa-size = 1. ELSE. _wa-size = size. ENDIF.
  _obj-id = obj. APPEND _obj TO _wa-objs.
  INSERT _wa INTO TABLE m_bloc.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.

  bloc = _wa-id.

  CALL METHOD _set_obj_bloc
    EXPORTING
      obj       = obj
      bloc      = bloc
    CHANGING
      obj2blocs = obj2blocs
    EXCEPTIONS
      failed    = 1
      OTHERS    = 2.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_CREATE_WITH_DEPENDENCIES" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Create blocs complexes (avec dépendances)"/>
     <ITEM LANG="F" TEXT="Create blocs complexes (avec dépendances)"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="BLOC_SIZE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_BLOC_SIZE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
       <ITEM LANG="F" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="DEPENDENCIES" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_DEPENDENCIES">
      <TEXTS>
       <ITEM LANG="E" TEXT="Table des dépendences"/>
       <ITEM LANG="F" TEXT="Table des dépendences"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="DONE_OBJ" CMPTYPE="1" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_LINES_NFO">
      <TEXTS>
       <ITEM LANG="E" TEXT="Objets déjà envoyés"/>
       <ITEM LANG="F" TEXT="Objets déjà envoyés"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Liste d&apos;objet générique"/>
       <ITEM LANG="F" TEXT="Liste d&apos;objet générique"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="WEIGHT_FN" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_FN">
      <TEXTS>
       <ITEM LANG="E" TEXT="Field Name du numérique poids"/>
       <ITEM LANG="F" TEXT="Field Name du numérique poids"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Run creation has failed"/>
       <ITEM LANG="F" TEXT="Run creation has failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA:
    it_obj2blocs TYPE tt_lines_nfo,   &quot; Index = Obj, ID = Bloc
    it_mini_blocs TYPE tt_blocs_nfo,
    obj_size TYPE t_bloc_size,
    obj1_bloc TYPE T_OBJ_NUM,
    obj2_bloc TYPE T_OBJ_NUM,
    _DEPENDENCIES TYPE TT_DEPENDENCIES,
    obj_count TYPE i.

  FIELD-SYMBOLS :
    &lt;dep&gt; LIKE LINE OF dependencies.

  DESCRIBE TABLE objects LINES obj_count.
  _dependencies = dependencies.
  DELETE _dependencies WHERE obj1 &lt; 1 OR obj1 &gt; obj_count
                         OR obj2 &lt; 1 OR obj2 &gt; obj_count.
* Create µblocs
  LOOP AT _dependencies ASSIGNING &lt;dep&gt;.
    If &lt;dep&gt;-obj1 = &lt;dep&gt;-obj2. continue. endif.
    AT NEW obj1.
* check if obj1 afected to
      obj1_bloc = _get_obj_bloc( num = &lt;dep&gt;-obj1
                               table = it_obj2blocs ).
    ENDAT.
* check if obj1 afected to
    obj2_bloc = _get_obj_bloc( num = &lt;dep&gt;-obj2
                             table = it_obj2blocs ).
    IF obj1_bloc IS INITIAL AND obj2_bloc IS INITIAL.
* Creat new µbloc
      obj_size = _get_obj_size( objects = objects
                              weight_fn = weight_fn
                                obj_num = &lt;dep&gt;-obj1 ).
      CALL METHOD _create_micro_bloc
        EXPORTING
          obj    = &lt;dep&gt;-obj1
          size   = obj_size
        IMPORTING
          bloc   = obj1_bloc
        CHANGING
          m_bloc = it_mini_blocs
          obj2blocs = it_obj2blocs
        EXCEPTIONS
          failed = 1
          OTHERS = 2.
      IF sy-subrc &lt;&gt; 0.
        RAISE failed.
      ENDIF.
    ENDIF.
    IF obj2_bloc IS INITIAL.
* Affect µbloc obj1 to obj2
      obj_size = _get_obj_size( objects = objects
                              weight_fn = weight_fn
                                obj_num = &lt;dep&gt;-obj2 ).
      CALL METHOD _add_obj_2_micro_bloc
        EXPORTING
          obj    = &lt;dep&gt;-obj2
          size   = obj_size
          bloc   = obj1_bloc
        CHANGING
          m_bloc = it_mini_blocs
          obj2blocs = it_obj2blocs
        EXCEPTIONS
          failed = 1
          OTHERS = 2.
      IF sy-subrc &lt;&gt; 0.
        RAISE failed.
      ENDIF.
    ELSE.
* Join µbloc obj1 &amp; Obj2
      CALL METHOD _join_2_micro_bloc
        EXPORTING
          bloc1     = obj1_bloc
          bloc2     = obj2_bloc
        changing
          m_bloc    = it_mini_blocs
          obj2blocs = it_obj2blocs
        EXCEPTIONS
          failed    = 1
          others    = 2
              .
      IF sy-subrc &lt;&gt; 0.
        RAISE failed.
      ENDIF.
    ENDIF.
  ENDLOOP.

  free it_obj2blocs.
* Groups µbloc to get wanted size
  CALL METHOD _generate_blocs
    EXPORTING
      bloc_size = bloc_size
    changing
      m_bloc    = it_mini_blocs
    EXCEPTIONS
      failed    = 1
      others    = 2.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.

  CALL METHOD _send_blocs
    EXPORTING
      OBJECTS   = objects
      blocs     = it_mini_blocs
      WEIGHT_FN = WEIGHT_FN
    IMPORTING
      done_obj = done_obj
    EXCEPTIONS
      failed   = 1
      others   = 2.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_DEFINE_CAT_TYPE" EXPOSURE="1" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Ajoute un type pour une catégorie"/>
     <ITEM LANG="F" TEXT="Ajoute un type pour une catégorie"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="CAT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="YGPL_MT_CATEGORI=&gt;_CATEG">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catégorie de donnée supplémentaire"/>
       <ITEM LANG="F" TEXT="Catégorie de donnée supplémentaire"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="DATA_TYPE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_DATA_TYPE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Type de donnée"/>
       <ITEM LANG="F" TEXT="Type de donnée"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="CAT_NOT_FOUND" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catérogie non définie dans YGPL_RUN_CAT"/>
       <ITEM LANG="F" TEXT="Catérogie non définie dans YGPL_RUN_CAT"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="L&apos;action a échouée"/>
       <ITEM LANG="F" TEXT="L&apos;action a échouée"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SYSTEM_CAT" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Utilisation d&apos;une catégorie systeme (non autorisé)"/>
       <ITEM LANG="F" TEXT="Utilisation d&apos;une catégorie systeme (non autorisé)"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="WRONG_DATA_TYPE" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Type de donnée incorect"/>
       <ITEM LANG="F" TEXT="Type de donnée incorect"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
*** inactive deleted ***</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_DEL_MSG" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Delete messages records"/>
     <ITEM LANG="F" TEXT="Delete messages records"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="RUN_ID" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_RUN">
      <TEXTS>
       <ITEM LANG="E" TEXT="ID unique de l&apos;exécution"/>
       <ITEM LANG="F" TEXT="ID unique de l&apos;exécution"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Delete has failed"/>
       <ITEM LANG="F" TEXT="Delete has failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************

  CALL METHOD _lock
    EXPORTING
      run_id       = run_id
    EXCEPTIONS
      foreign_lock = 1
      sys_failure  = 2
      OTHERS       = 3.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.

*  IF _run-run_id &lt;&gt; run_id.
  DELETE FROM ygpl_msgs WHERE run_id = run_id.

  COMMIT WORK AND WAIT.

  CALL METHOD _unlock( run_id = run_id ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_DEL_OBJ" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Delete Objects records"/>
     <ITEM LANG="F" TEXT="Delete Objects records"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="RUN_ID" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_RUN">
      <TEXTS>
       <ITEM LANG="E" TEXT="ID unique de l&apos;exécution"/>
       <ITEM LANG="F" TEXT="ID unique de l&apos;exécution"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Delete has failed"/>
       <ITEM LANG="F" TEXT="Delete has failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************

  CALL METHOD _lock
    EXPORTING
      run_id       = run_id
    EXCEPTIONS
      foreign_lock = 1
      sys_failure  = 2
      OTHERS       = 3.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.

  DELETE FROM ygpl_objects WHERE run_id = run_id.

  COMMIT WORK AND WAIT.

  CALL METHOD _unlock( run_id = run_id ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_GENERATE_BLOCS" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Group µblocs into Blocs"/>
     <ITEM LANG="F" TEXT="Group µblocs into Blocs"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="BLOC_SIZE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_BLOC_SIZE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
       <ITEM LANG="F" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="M_BLOC" CMPTYPE="1" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_BLOCS_NFO">
      <TEXTS>
       <ITEM LANG="E" TEXT="Table dépendance bloc"/>
       <ITEM LANG="F" TEXT="Table dépendance bloc"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Action failed"/>
       <ITEM LANG="F" TEXT="Action failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  TYPES:
    t_line LIKE LINE OF m_bloc.
  DATA:
    size TYPE t_bloc_size,
    new_b TYPE t_line,
    blocs TYPE STANDARD TABLE OF t_line.
  FIELD-SYMBOLS:
    &lt;b&gt; TYPE t_line.

  blocs = m_bloc.
  REFRESH m_bloc.
  SORT blocs BY size DESCENDING.
  DO.
    IF blocs IS INITIAL. EXIT. ENDIF.
    READ TABLE blocs INDEX 1 ASSIGNING &lt;b&gt;.
    new_b = &lt;b&gt;.
    DELETE blocs INDEX 1.
    IF sy-subrc &lt;&gt; 0.
      RAISE failed.
    ENDIF.
    IF new_b-size &lt; bloc_size AND NOT blocs IS INITIAL.
      size = bloc_size - new_b-size.
      LOOP AT blocs ASSIGNING &lt;b&gt;.
        IF &lt;b&gt;-size &lt; size.
          ADD &lt;b&gt;-size TO new_b-size.
          size = bloc_size - new_b-size.
          APPEND LINES OF &lt;b&gt;-objs TO new_b-objs.
          IF sy-subrc &lt;&gt; 0.
            RAISE failed.
          ENDIF.
          DELETE blocs.
          IF sy-subrc &lt;&gt; 0.
            RAISE failed.
          ENDIF.
        ENDIF.
      ENDLOOP.
    ENDIF.
    INSERT new_b INTO TABLE m_bloc.
    IF sy-subrc &lt;&gt; 0.
      RAISE failed.
    ENDIF.
  ENDDO.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_GENERATE_BLOC_ID" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Create a new Bloc_ID"/>
     <ITEM LANG="F" TEXT="Create a new Bloc_ID"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="BLOC_ID" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="T_OBJKEY">
      <TEXTS>
       <ITEM LANG="E" TEXT="ID unique du bloc d&apos;objet"/>
       <ITEM LANG="F" TEXT="ID unique du bloc d&apos;objet"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************

  CALL FUNCTION &apos;GUID_CREATE&apos;
    IMPORTING
*     EV_GUID_16       =
*     EV_GUID_22       =
      EV_GUID_32       = BLOC_ID.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_GENERATE_MSG_ID" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Create a new Msg_ID"/>
     <ITEM LANG="F" TEXT="Create a new Msg_ID"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="MSG_ID" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="T_MSGKEY">
      <TEXTS>
       <ITEM LANG="E" TEXT="ID de message"/>
       <ITEM LANG="F" TEXT="ID de message"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************

  CALL FUNCTION &apos;GUID_CREATE&apos;
    IMPORTING
*     EV_GUID_16       =
*     EV_GUID_22       =
      EV_GUID_32       = MSG_ID.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_GET_BATCH" EXPOSURE="1" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Get a batch (n blocs)"/>
     <ITEM LANG="F" TEXT="Get a batch (n blocs)"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="OBJECTS" CMPTYPE="1" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Liste d&apos;objet générique"/>
       <ITEM LANG="F" TEXT="Liste d&apos;objet générique"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="WAIT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_BOOLEAN" PARVALUE="&apos;X&apos;" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Attendre"/>
       <ITEM LANG="F" TEXT="Attendre"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="BATCH_NOT_CONFIRMED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Confirm BATCH fisrt"/>
       <ITEM LANG="F" TEXT="Confirm BATCH fisrt"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Run creation has failed"/>
       <ITEM LANG="F" TEXT="Run creation has failed"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="FOREIGN_LOCK" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Objet déjà bloqué"/>
       <ITEM LANG="F" TEXT="Objet déjà bloqué"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA tab_ref TYPE REF TO data.
  FIELD-SYMBOLS :
    &lt;fs&gt; LIKE objects.
  DATA maxrow TYPE i.
  DATA rows TYPE i.
  DATA mem_size TYPE t_mem_size.
  DATA t_size TYPE t_mem_size.
  DATA _run TYPE ts_run.
  DATA _blocs TYPE STANDARD TABLE OF ygpl_objects.

  FIELD-SYMBOLS :
    &lt;wa&gt; LIKE LINE OF _blocs.

  IF NOT current_blocs[] IS INITIAL.
    RAISE batch_not_confirmed.
  ENDIF.

  CREATE DATA tab_ref LIKE objects.
  ASSIGN tab_ref-&gt;* TO &lt;fs&gt;.

  CALL METHOD _lock
    EXPORTING
      run_id       = run_id
      cat          = ygpl_mt_categori=&gt;data_bloc
    EXCEPTIONS
      foreign_lock = 1
      sys_failure  = 2
      OTHERS       = 3.
  IF sy-subrc = 1.
    RAISE foreign_lock.
  ELSEIF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.

* Determine Maxrow
  CALL METHOD _get_run
    IMPORTING
      run_data  = _run
    EXCEPTIONS
      not_found = 1
      OTHERS    = 2.
  IF sy-subrc &lt;&gt; 0.
    CALL METHOD _unlock( run_id = run_id
      cat = ygpl_mt_categori=&gt;data_bloc ).
    RAISE failed.
  ENDIF.

  maxrow = ( _run-obj_left / _run-objects * _run-blocs * batch_taux ) DIV _run-threads + 1.
  IF maxrow &lt; 1. maxrow = 1. ENDIF.

* Get data : Big ones first
  SELECT * INTO TABLE _blocs
    FROM ygpl_objects UP TO maxrow ROWS
    WHERE run_id = run_id
      AND status = ygpl_mt_status=&gt;to_do
      AND bloc_size &gt; _bloc_size.

  IF NOT _bloc_size IS INITIAL.
* When no more big ones
    DESCRIBE TABLE _blocs LINES rows.
    SUBTRACT rows FROM maxrow.
    IF maxrow &gt; 0.
      SELECT * APPENDING TABLE _blocs
        FROM ygpl_objects UP TO maxrow ROWS
        WHERE run_id = run_id
          AND status = ygpl_mt_status=&gt;to_do
          AND bloc_size &lt;= _bloc_size.
* si _blocs était vide inutile de recherche avec bloc_size =&amp;gt; RAZ
* mais pas avant car on s&amp;apos;en sert dans cette requette avec
*          AND mem_size &amp;lt;= _bloc_size.
      if rows = 0. CLEAR _bloc_size. endif.
    ENDIF.
  ENDIF.

  IF NOT _blocs IS INITIAL.
    SORT _blocs BY mem_size DESCENDING.
    LOOP AT _blocs ASSIGNING &lt;wa&gt;.
* Memory limits
      IF max_mem &gt; 0.
        t_size = mem_size + &lt;wa&gt;-mem_size.
        IF t_size &gt; max_mem AND mem_size &gt; 0.
          CONTINUE.
        ENDIF.
        ADD &lt;wa&gt;-mem_size TO mem_size.
      ENDIF.
      IMPORT objects = &lt;fs&gt; FROM DATA BUFFER &lt;wa&gt;-obj_data.
      IF sy-subrc = 0.
        APPEND LINES OF &lt;fs&gt; TO objects.
        IF sy-subrc = 0.
          APPEND &lt;wa&gt;-bloc_id TO current_blocs.
          IF sy-subrc = 0.
            UPDATE ygpl_objects SET status = ygpl_mt_status=&gt;in_progress
              WHERE bloc_id = &lt;wa&gt;-bloc_id.
          ENDIF.
        ENDIF.
      ENDIF.
      IF sy-subrc &lt;&gt; 0.
        ROLLBACK WORK.
        CALL METHOD _unlock( run_id = run_id
          cat = ygpl_mt_categori=&gt;data_bloc ).
        RAISE failed.
      ENDIF.
    ENDLOOP.
  ENDIF.

  DESCRIBE TABLE objects LINES maxrow.
  ADD maxrow TO total_objects.
  processed_objects = maxrow.
  CLEAR msg_objects.

  COMMIT WORK AND WAIT.
  CALL METHOD _unlock( run_id = run_id
    cat = ygpl_mt_categori=&gt;data_bloc ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_GET_INFO" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Read info from DB"/>
     <ITEM LANG="F" TEXT="Read info from DB"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="CATEG" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="YGPL_MT_CATEGORI=&gt;_CATEG">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catégorie de donnée supplémentaire"/>
       <ITEM LANG="F" TEXT="Catégorie de donnée supplémentaire"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="INFO" CMPTYPE="1" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY">
      <TEXTS>
       <ITEM LANG="E" TEXT="Information à stocker"/>
       <ITEM LANG="F" TEXT="Information à stocker"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="action has failed"/>
       <ITEM LANG="F" TEXT="action has failed"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="NOT_FOUND" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="information record do not exists"/>
       <ITEM LANG="F" TEXT="information record do not exists"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA: data_info TYPE ygpl_run_info-data_info.

  CALL METHOD _lock
    EXPORTING
      run_id       = run_id
      cat          = categ
    EXCEPTIONS
      foreign_lock = 1
      sys_failure  = 2
      OTHERS       = 3.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.

  SELECT SINGLE data_info
    INTO data_info
    FROM ygpl_run_info
    WHERE run_id = run_id
      AND categ = categ.
  IF sy-subrc &lt;&gt; 0.
    CALL METHOD _unlock( run_id = run_id
      cat = categ ).
    RAISE not_found.
  ENDIF.

  IMPORT info = info FROM DATA BUFFER data_info.
  IF sy-subrc &lt;&gt; 0.
    CALL METHOD _unlock( run_id = run_id
      cat = categ ).
    RAISE failed.
  ENDIF.

  CALL METHOD _unlock( run_id = run_id
    cat = categ ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_GET_OBJ_BLOC" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Get Object Bloc if assigned"/>
     <ITEM LANG="F" TEXT="Get Object Bloc if assigned"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="BLOC" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="T_OBJ_NUM"/>
     <ITEM SCONAME="NUM" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_OBJ_NUM"/>
     <ITEM SCONAME="TABLE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_LINES_NFO"/>
    </PARAMETERS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  FIELD-SYMBOLS :
  &lt;obj2b&gt; LIKE LINE OF table.

  READ TABLE table with TABLE KEY key = num ASSIGNING &lt;obj2b&gt;.
  IF sy-subrc = 0.
    bloc = &lt;obj2b&gt;-val.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_GET_OBJ_SIZE" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Get Object Size (weigthed)"/>
     <ITEM LANG="F" TEXT="Get Object Size (weigthed)"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="OBJECTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Objects list"/>
       <ITEM LANG="F" TEXT="Objects list"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJ_NUM" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_OBJ_NUM">
      <TEXTS>
       <ITEM LANG="E" TEXT="Numéro d&apos;objet"/>
       <ITEM LANG="F" TEXT="Numéro d&apos;objet"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SIZE" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="T_BLOC_SIZE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
       <ITEM LANG="F" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="WEIGHT_FN" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_FN">
      <TEXTS>
       <ITEM LANG="E" TEXT="Field Name"/>
       <ITEM LANG="F" TEXT="Field Name"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA fn TYPE string.

  FIELD-SYMBOLS :
    &lt;obj&gt; TYPE ANY,
    &lt;weight&gt; TYPE ANY.

  size = 1.
  IF weight_fn IS INITIAL.
    RETURN.
  ENDIF.

  CONCATENATE &apos;&lt;obj&gt;-&apos; weight_fn INTO fn.

  READ TABLE objects INDEX obj_num ASSIGNING &lt;obj&gt;.
  IF sy-subrc &lt;&gt; 0.
    RETURN.
  ENDIF.

  ASSIGN (fn) TO &lt;weight&gt;.
  IF sy-subrc &lt;&gt; 0.
    RETURN.
  ENDIF.

  size = &lt;weight&gt;.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_GET_RUN" EXPOSURE="1" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Récupération des information d&apos;un bloc"/>
     <ITEM LANG="F" TEXT="Récupération des information d&apos;un bloc"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="LOCK" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_BOOLEAN" PARVALUE="&apos;X&apos;" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Verrouille le Run"/>
       <ITEM LANG="F" TEXT="Verrouille le Run"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RUN_DATA" CMPTYPE="1" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_RUN">
      <TEXTS>
       <ITEM LANG="E" TEXT="donnée d&apos;un run"/>
       <ITEM LANG="F" TEXT="donnée d&apos;un run"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Echec"/>
       <ITEM LANG="F" TEXT="Echec"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="NOT_FOUND" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Non trouvé"/>
       <ITEM LANG="F" TEXT="Non trouvé"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA _run TYPE ts_run.

  IF NOT lock IS INITIAL.
    CALL METHOD _lock
      EXPORTING
        run_id       = run_id
        cat          = ygpl_mt_categori=&gt;run_info
      EXCEPTIONS
        foreign_lock = 1
        sys_failure  = 2
        OTHERS       = 3.
    IF sy-subrc &lt;&gt; 0.
      RAISE failed.
    ENDIF.
  ENDIF.

*  IF _run-run_id &lt;&gt; run_id.
  SELECT SINGLE * INTO CORRESPONDING FIELDS OF _run
    FROM ygpl_run
    WHERE run_id = run_id.
  IF sy-subrc &lt;&gt; 0.
    RAISE not_found.
  ENDIF.
*  ENDIF.

  IF NOT lock IS INITIAL.
    CALL METHOD _unlock( run_id = run_id
      cat = ygpl_mt_categori=&gt;run_info ).
  ENDIF.

  run_data = _run.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_GET_SIZE" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Get memory use"/>
     <ITEM LANG="F" TEXT="Get memory use"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="OBJECT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY">
      <TEXTS>
       <ITEM LANG="E" TEXT="Object to get size"/>
       <ITEM LANG="F" TEXT="Object to get size"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SIZE" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="T_MEM_SIZE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Estimated Memory size of the bloc"/>
       <ITEM LANG="F" TEXT="Estimated Memory size of the bloc"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA xstr TYPE xstring.

  TRY.
      CALL METHOD cl_abap_memory_utilities=&gt;get_memory_size_of_object
        EXPORTING
          object                     = object
*          ignore_string_sharing      =
*          ignore_table_sharing       =
        IMPORTING
*          bound_size_alloc           =
          bound_size_used            = size
*          referenced_size_alloc      =
*          referenced_size_used       =
*          is_part_of_non_trivial_szk =
*          szk_size_alloc             =
*          szk_size_used              =
*          low_mem                    =
*          is_in_shared_memory        =
*          sizeof_alloc               =
*          sizeof_used                = size
          .
    CATCH cx_root.
      EXPORT x = object TO DATA BUFFER xstr COMPRESSION OFF.
      size = XSTRLEN( xstr ).
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_GET_THREAD" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="récupère donné d&apos;un thread"/>
     <ITEM LANG="F" TEXT="récupère donné d&apos;un thread"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="JOBCOUNT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TBTCJOB-JOBCOUNT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Numéro d&apos;identification d&apos;un job"/>
       <ITEM LANG="F" TEXT="Numéro d&apos;identification d&apos;un job"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="JOBNAME" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TBTCJOB-JOBNAME">
      <TEXTS>
       <ITEM LANG="E" TEXT="Nom d&apos;un job d&apos;arrière-plan"/>
       <ITEM LANG="F" TEXT="Nom d&apos;un job d&apos;arrière-plan"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="JOB_INFO" CMPTYPE="1" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_JOB_INFO">
      <TEXTS>
       <ITEM LANG="E" TEXT="Description des valeurs d&apos;un job (BI-API)"/>
       <ITEM LANG="F" TEXT="Description des valeurs d&apos;un job (BI-API)"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="JOB_DOESNT_EXIST" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Le job n&apos;existe pas"/>
       <ITEM LANG="F" TEXT="Le job n&apos;existe pas"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA: ret_val TYPE i.
*  btc_edit_btcctl_tbl       LIKE btch0000-int4 VALUE  1,
*  btc_show_btcctl_tbl       LIKE btch0000-int4 VALUE  2,
*  btc_edit_user_eventids    LIKE btch0000-int4 VALUE  3,
*  btc_show_user_eventids    LIKE btch0000-int4 VALUE  4,
*  btc_edit_system_eventids  LIKE btch0000-int4 VALUE  5,
*  btc_show_system_eventids  LIKE btch0000-int4 VALUE  6,
*  btc_edit_steplist         LIKE btch0000-int4 VALUE  7,
*  btc_show_steplist         LIKE btch0000-int4 VALUE  8,
*  btc_show_variantlist      LIKE btch0000-int4 VALUE  9,
*  btc_create_job            LIKE btch0000-int4 VALUE 10,
*  btc_edit_job              LIKE btch0000-int4 VALUE 11,
*  btc_show_job              LIKE btch0000-int4 VALUE 12,
*  btc_check_only            LIKE btch0000-int4 VALUE 13,
*  btc_edit_startdate        LIKE btch0000-int4 VALUE 14,
*  btc_show_startdate        LIKE btch0000-int4 VALUE 15,
*  btc_modify_whole_job      LIKE btch0000-int4 VALUE 16,
*  btc_release_job           LIKE btch0000-int4 VALUE 17,
*  btc_derelease_job         LIKE btch0000-int4 VALUE 18,
*  btc_read_jobhead_only     LIKE btch0000-int4 VALUE 19,
*  btc_read_all_jobdata      LIKE btch0000-int4 VALUE 20,
*  btc_joblist_edit          LIKE btch0000-int4 VALUE 21,
*  btc_joblist_show          LIKE btch0000-int4 VALUE 22,
*  btc_joblist_select        LIKE btch0000-int4 VALUE 23,
*  btc_joblog_show           LIKE btch0000-int4 VALUE 24,
*  btc_edit_omset            LIKE btch0000-int4 VALUE 25,
*  btc_show_omset            LIKE btch0000-int4 VALUE 26,
*  btc_show_oms_sdl_tbl      LIKE btch0000-int4 VALUE 27,
*  btc_show_xpgm_list        LIKE btch0000-int4 VALUE 28,
*  btc_close_job             LIKE btch0000-int4 VALUE 29,
*  btc_varjoblist_select     LIKE btch0000-int4 VALUE 30,
*  btc_varlist_select        LIKE btch0000-int4 VALUE 31,
*  btc_performance_list      LIKE btch0000-int4 VALUE 32,
*  btc_performance_info      LIKE btch0000-int4 VALUE 33,
*  btc_batchproces_list      LIKE btch0000-int4 VALUE 34,
*  btc_dont_read_priparams   LIKE btch0000-int4 VALUE 35,  &quot; note 770158
*  btc_xbp_all_jobdata       LIKE btch0000-int4 VALUE 36,  &quot; note 792767
*  btc_xbp_jobhead_only      LIKE btch0000-int4 VALUE 37.  &quot; note 792767

  CALL FUNCTION &apos;BP_JOB_READ&apos;
    EXPORTING
      job_read_jobcount           = jobcount
      job_read_jobname            = jobname
      job_read_opcode             = 19 &quot; btc_read_jobhead_only
*     JOB_STEP_NUMBER             =
    IMPORTING
      JOB_READ_JOBHEAD            = JOB_INFO
*     JOBLOG_ATTRIBUTES           =
*   TABLES
*     JOB_READ_STEPLIST           =
*     SPOOL_ATTRIBUTES            =
     CHANGING
      ret                         = ret_val
    EXCEPTIONS
      invalid_opcode              = 1
      job_doesnt_exist            = 2
      job_doesnt_have_steps       = 3
      OTHERS                      = 4.
  IF sy-subrc &lt;&gt; 0 OR ret_val &lt;&gt; 0.
    RAISE job_doesnt_exist.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_GET_THREAD_DETAILS" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Récupère donné d&apos;un thread en détails (étapes)"/>
     <ITEM LANG="F" TEXT="Récupère donné d&apos;un thread en détails (étapes)"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="JOBCOUNT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TBTCJOB-JOBCOUNT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Numéro d&apos;identification d&apos;un job"/>
       <ITEM LANG="F" TEXT="Numéro d&apos;identification d&apos;un job"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="JOBNAME" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TBTCJOB-JOBNAME">
      <TEXTS>
       <ITEM LANG="E" TEXT="Nom d&apos;un job d&apos;arrière-plan"/>
       <ITEM LANG="F" TEXT="Nom d&apos;un job d&apos;arrière-plan"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="JOB_INFO" CMPTYPE="1" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_JOB_INFO">
      <TEXTS>
       <ITEM LANG="E" TEXT="Description des valeurs d&apos;un job (BI-API)"/>
       <ITEM LANG="F" TEXT="Description des valeurs d&apos;un job (BI-API)"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="STEPS" CMPTYPE="1" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_STEPINFO">
      <TEXTS>
       <ITEM LANG="E" TEXT="Steps d&apos;un job"/>
       <ITEM LANG="F" TEXT="Steps d&apos;un job"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="JOB_DOESNT_EXIST" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Le job n&apos;existe pas"/>
       <ITEM LANG="F" TEXT="Le job n&apos;existe pas"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA: ret_val TYPE i.
*  btc_edit_btcctl_tbl       LIKE btch0000-int4 VALUE  1,
*  btc_show_btcctl_tbl       LIKE btch0000-int4 VALUE  2,
*  btc_edit_user_eventids    LIKE btch0000-int4 VALUE  3,
*  btc_show_user_eventids    LIKE btch0000-int4 VALUE  4,
*  btc_edit_system_eventids  LIKE btch0000-int4 VALUE  5,
*  btc_show_system_eventids  LIKE btch0000-int4 VALUE  6,
*  btc_edit_steplist         LIKE btch0000-int4 VALUE  7,
*  btc_show_steplist         LIKE btch0000-int4 VALUE  8,
*  btc_show_variantlist      LIKE btch0000-int4 VALUE  9,
*  btc_create_job            LIKE btch0000-int4 VALUE 10,
*  btc_edit_job              LIKE btch0000-int4 VALUE 11,
*  btc_show_job              LIKE btch0000-int4 VALUE 12,
*  btc_check_only            LIKE btch0000-int4 VALUE 13,
*  btc_edit_startdate        LIKE btch0000-int4 VALUE 14,
*  btc_show_startdate        LIKE btch0000-int4 VALUE 15,
*  btc_modify_whole_job      LIKE btch0000-int4 VALUE 16,
*  btc_release_job           LIKE btch0000-int4 VALUE 17,
*  btc_derelease_job         LIKE btch0000-int4 VALUE 18,
*  btc_read_jobhead_only     LIKE btch0000-int4 VALUE 19,
*  btc_read_all_jobdata      LIKE btch0000-int4 VALUE 20,
*  btc_joblist_edit          LIKE btch0000-int4 VALUE 21,
*  btc_joblist_show          LIKE btch0000-int4 VALUE 22,
*  btc_joblist_select        LIKE btch0000-int4 VALUE 23,
*  btc_joblog_show           LIKE btch0000-int4 VALUE 24,
*  btc_edit_omset            LIKE btch0000-int4 VALUE 25,
*  btc_show_omset            LIKE btch0000-int4 VALUE 26,
*  btc_show_oms_sdl_tbl      LIKE btch0000-int4 VALUE 27,
*  btc_show_xpgm_list        LIKE btch0000-int4 VALUE 28,
*  btc_close_job             LIKE btch0000-int4 VALUE 29,
*  btc_varjoblist_select     LIKE btch0000-int4 VALUE 30,
*  btc_varlist_select        LIKE btch0000-int4 VALUE 31,
*  btc_performance_list      LIKE btch0000-int4 VALUE 32,
*  btc_performance_info      LIKE btch0000-int4 VALUE 33,
*  btc_batchproces_list      LIKE btch0000-int4 VALUE 34,
*  btc_dont_read_priparams   LIKE btch0000-int4 VALUE 35,  &quot; note 770158
*  btc_xbp_all_jobdata       LIKE btch0000-int4 VALUE 36,  &quot; note 792767
*  btc_xbp_jobhead_only      LIKE btch0000-int4 VALUE 37.  &quot; note 792767

  CALL FUNCTION &apos;BP_JOB_READ&apos;
    EXPORTING
      job_read_jobcount           = jobcount
      job_read_jobname            = jobname
      job_read_opcode             = 20 &quot; btc_read_all_jobdata
*     JOB_STEP_NUMBER             =
    IMPORTING
      JOB_READ_JOBHEAD            = JOB_INFO
*     JOBLOG_ATTRIBUTES           =
    TABLES
      JOB_READ_STEPLIST           = STEPS
*     SPOOL_ATTRIBUTES            =
     CHANGING
      ret                         = ret_val
    EXCEPTIONS
      invalid_opcode              = 1
      job_doesnt_exist            = 2
      job_doesnt_have_steps       = 3
      OTHERS                      = 4.
  IF sy-subrc &lt;&gt; 0 OR ret_val &lt;&gt; 0.
    RAISE job_doesnt_exist.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_HANDLE_MSG" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Look for message"/>
     <ITEM LANG="F" TEXT="Look for message"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="MSG_READ" CMPTYPE="1" PARDECLTYP="1" TYPTYPE="1" TYPE="OAX">
      <TEXTS>
       <ITEM LANG="E" TEXT="Messages lu ?"/>
       <ITEM LANG="F" TEXT="Messages lu ?"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Message handling as failed"/>
       <ITEM LANG="F" TEXT="Message handling as failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA: it_msg TYPE tt_msgs.
  DATA: it_sys_msg TYPE tt_msgs.

  SELECT mandt msg_id categ msg_data INTO TABLE it_msg
    FROM ygpl_msgs
    WHERE run_id = run_id.
  IF it_msg IS INITIAL.
    RETURN.
  ENDIF.

  msg_read = abap_true.

  it_sys_msg = it_msg.
  DELETE it_sys_msg WHERE NOT categ IN ygpl_mt_categori=&gt;x_categ.
  DELETE it_msg WHERE categ IN ygpl_mt_categori=&gt;x_categ.

  SORT it_sys_msg BY categ.
  SORT it_msg BY categ.

  IF NOT it_sys_msg IS INITIAL.
    CALL METHOD _handle_system_msg
      EXPORTING
        msgs   = it_sys_msg
      EXCEPTIONS
        failed = 1
        OTHERS = 2.
    IF sy-subrc &lt;&gt; 0.
      RAISE failed.
    ENDIF.
  ENDIF.

  IF NOT it_msg IS INITIAL.
    CALL METHOD _handle_specific_msg
      changing
        msgs   = it_msg
      EXCEPTIONS
        failed = 1
        OTHERS = 2.
    IF sy-subrc &lt;&gt; 0.
      RAISE failed.
    ENDIF.
  ENDIF.
* Security delete
  DELETE ygpl_msgs FROM TABLE it_msg.
  COMMIT WORK AND WAIT.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_HANDLE_OBJ_CONF" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Handle System Message : Object Confirmation."/>
     <ITEM LANG="F" TEXT="Handle System Message : Object Confirmation."/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="MSG_DATA" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_MSGDATA">
      <TEXTS>
       <ITEM LANG="E" TEXT="Donnée de Message"/>
       <ITEM LANG="F" TEXT="Donnée de Message"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA: status TYPE	tt_status_list.
  FIELD-SYMBOLS:
    &lt;statut&gt; LIKE LINE OF status.

  IMPORT msg = status FROM DATA BUFFER msg_data.
  IF sy-subrc &lt;&gt; 0.
*    RAISE failed.
  ENDIF.

  LOOP AT status ASSIGNING &lt;statut&gt;.
    ADD &lt;statut&gt;-count TO msg_objects.
    COLLECT &lt;statut&gt; INTO my_status.
  ENDLOOP.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_HANDLE_SPECIFIC_MSG" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Handle your own message"/>
     <ITEM LANG="F" TEXT="Handle your own message"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="MSGS" CMPTYPE="1" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_MSGS">
      <TEXTS>
       <ITEM LANG="E" TEXT="Messages à traiter"/>
       <ITEM LANG="F" TEXT="Messages à traiter"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Message processing has failed (abort futher processing)"/>
       <ITEM LANG="F" TEXT="Message processing has failed (abort futher processing)"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  FIELD-SYMBOLS:
*    &lt;data&gt; TYPE ANY,
    &lt;dt&gt; LIKE LINE OF msg_cat_types,
    &lt;msg&gt; LIKE LINE OF msgs.

  DATA:
*    _data TYPE REF TO data,
    _has_failed TYPE t_boolean.

  LOOP AT msgs ASSIGNING &lt;msg&gt;.
** Get Categorie data Type
*    READ TABLE msg_cat_types WITH TABLE KEY cat = &lt;msg&gt;-categ ASSIGNING &lt;dt&gt;.
*    IF sy-subrc &lt;&gt; 0.
*      _has_failed = abap_true.
*      DELETE msgs.
*      CONTINUE.
*    ENDIF.
*
** Create specific data Type
*    TRY.
*        CREATE DATA _data TYPE (&lt;dt&gt;-type).
*      CATCH cx_sy_create_data_error.
*        _has_failed = abap_true.
*        DELETE msgs.
*        CONTINUE.
*    ENDTRY.
*
** Need to use field symobl
*    ASSIGN _data TO &lt;data&gt;.
*    IF sy-subrc &lt;&gt; 0.
*      _has_failed = abap_true.
*      DELETE msgs.
*      CONTINUE.
*    ENDIF.
*
** Convert stored information into this data type
*    TRY.
**      IMPORT msg = _data FROM DATA BUFFER &lt;msg&gt;-msg_data.
** This command is refused by ABAP Compiler
**      IMPORT msg = &lt;data&gt; FROM DATA BUFFER &lt;msg&gt;-msg_data.
**CX_SY_CONVERSION_CODEPAGE
**CX_SY_IMPORT_MISMATCH_ERROR
**CX_SY_IMPORT_FORMAT_ERROR
*      CATCH cx_root.
*        _has_failed = abap_true.
*        DELETE msgs.
*        CONTINUE.
*    ENDTRY.

* Call external event handler
    RAISE EVENT handle_specific_msg
      EXPORTING
        cat     = &lt;msg&gt;-categ
        rawdata = &lt;msg&gt;-msg_data.
  ENDLOOP.

  DELETE ygpl_msgs FROM TABLE msgs.

*Raise exception if one of the message couldn&apos;t be processed
  IF _has_failed = abap_true. RAISE failed. ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_HANDLE_SYSTEM_MSG" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Handle systemes messages"/>
     <ITEM LANG="F" TEXT="Handle systemes messages"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="MSGS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_MSGS">
      <TEXTS>
       <ITEM LANG="E" TEXT="Messages à traiter"/>
       <ITEM LANG="F" TEXT="Messages à traiter"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Message Processing has failed"/>
       <ITEM LANG="F" TEXT="Message Processing has failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  FIELD-SYMBOLS:
    &lt;msg&gt; LIKE LINE OF msgs.

  LOOP AT msgs ASSIGNING &lt;msg&gt;.
    CASE &lt;msg&gt;-categ.
      WHEN ygpl_mt_categori=&gt;obj_conf.
        CALL METHOD _handle_obj_conf
          EXPORTING
            msg_data = &lt;msg&gt;-msg_data.
      WHEN OTHERS.
* Un expected messages
    ENDCASE.
  ENDLOOP.

  IF msg_objects &lt;&gt; 0.
    CALL METHOD _lock
      EXPORTING
        run_id       = run_id
        cat          = ygpl_mt_categori=&gt;run_info
      EXCEPTIONS
        foreign_lock = 1
        sys_failure  = 2
        OTHERS       = 3.
    IF sy-subrc &lt;&gt; 0.
      RAISE failed.
    ENDIF.

*  IF _run-run_id &lt;&gt; run_id.
    UPDATE ygpl_run SET obj_left = obj_left - msg_objects
      WHERE run_id = run_id.
    IF sy-subrc &lt;&gt; 0.
      ROLLBACK WORK.
      CALL METHOD _unlock( run_id = run_id
        cat = ygpl_mt_categori=&gt;run_info ).
      RAISE failed.
    ENDIF.

    ADD msg_objects TO processed_objects.

    CLEAR msg_objects.
    CALL METHOD _unlock( run_id = run_id
      cat = ygpl_mt_categori=&gt;run_info ).
  ENDIF.

  DELETE ygpl_msgs FROM TABLE msgs.
  IF sy-subrc &lt;&gt; 0.
    ROLLBACK WORK.
    CALL METHOD _unlock( run_id = run_id
      cat = ygpl_mt_categori=&gt;run_info ).
    RAISE failed.
  ENDIF.

  COMMIT WORK AND WAIT.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_IS_DATA_TYPE_OK" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Controle que le type de donnée est OK"/>
     <ITEM LANG="F" TEXT="Controle que le type de donnée est OK"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="DATA_TYPE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_DATA_TYPE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Type de donnée"/>
       <ITEM LANG="F" TEXT="Type de donnée"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RESULT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="T_BOOLEAN">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catégorie de donnée supplémentaire"/>
       <ITEM LANG="F" TEXT="Catégorie de donnée supplémentaire"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
*** inactive deleted ***</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_JOIN_2_MICRO_BLOC" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Join 2 Micro blocs"/>
     <ITEM LANG="F" TEXT="Join 2 Micro blocs"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="BLOC1" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_OBJ_NUM">
      <TEXTS>
       <ITEM LANG="E" TEXT="Numéro d&apos;objet"/>
       <ITEM LANG="F" TEXT="Numéro d&apos;objet"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="BLOC2" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_OBJ_NUM">
      <TEXTS>
       <ITEM LANG="E" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
       <ITEM LANG="F" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="M_BLOC" CMPTYPE="1" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_BLOCS_NFO">
      <TEXTS>
       <ITEM LANG="E" TEXT="Table dépendance bloc"/>
       <ITEM LANG="F" TEXT="Table dépendance bloc"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJ2BLOCS" CMPTYPE="1" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_LINES_NFO">
      <TEXTS>
       <ITEM LANG="E" TEXT="Table dépendance bloc : OBJ-&gt;Bloc ou Bloc-&gt;Obj"/>
       <ITEM LANG="F" TEXT="Table dépendance bloc : OBJ-&gt;Bloc ou Bloc-&gt;Obj"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Action failed"/>
       <ITEM LANG="F" TEXT="Action failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  FIELD-SYMBOLS:
    &lt;b1&gt; LIKE LINE OF m_bloc,
    &lt;b2&gt; LIKE LINE OF m_bloc.

  READ TABLE m_bloc with TABLE KEY id = bloc1 ASSIGNING &lt;b1&gt;.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.
  READ TABLE m_bloc with TABLE KEY id = bloc2 ASSIGNING &lt;b2&gt;.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.

  ADD &lt;b2&gt;-size TO &lt;b1&gt;-size.
  APPEND lines of &lt;b2&gt;-objs TO &lt;b1&gt;-objs.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.

  delete table m_bloc WITH TABLE KEY id = bloc2.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_LOAD_RUN" EXPOSURE="1" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Generic Run initialisation"/>
     <ITEM LANG="F" TEXT="Generic Run initialisation"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="BLOC_SIZE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_BLOC_SIZE" PARVALUE="10" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
       <ITEM LANG="F" TEXT="Taille (en nb d&apos;objet) d&apos;un bloc (unité mini de traitement)"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="DEPENDENCIES" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_DEPENDENCIES" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Table des dépendences"/>
       <ITEM LANG="F" TEXT="Table des dépendences"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Liste d&apos;objet générique"/>
       <ITEM LANG="F" TEXT="Liste d&apos;objet générique"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="THREADS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_THREADS">
      <TEXTS>
       <ITEM LANG="E" TEXT="Nombre de thread"/>
       <ITEM LANG="F" TEXT="Nombre de thread"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="WEIGHT_FN" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_FN" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Field Name du numérique poids"/>
       <ITEM LANG="F" TEXT="Field Name du numérique poids"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Run creation has failed"/>
       <ITEM LANG="F" TEXT="Run creation has failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA _bs TYPE T_BLOC_SIZE.

* Check Objects
  DESCRIBE TABLE objects LINES TOTAL_OBJECTS.
  IF TOTAL_OBJECTS &lt; 1. EXIT. ENDIF.

* Check Bloc_Size
  IF bloc_size &lt; 1.
    _bs = 1.
  ELSE.
    _bs = bloc_size.
  ENDIF.

* Add run record
  CALL METHOD _add_run
    EXPORTING
      threads   = threads
      count     = TOTAL_OBJECTS
      bloc_size = _bs
    EXCEPTIONS
      failed    = 1
      OTHERS    = 2.
  IF sy-subrc &lt;&gt; 0.
    ROLLBACK WORK.
    RAISE failed.
  ENDIF.

  CALL METHOD _create_blocs
    EXPORTING
      OBJECTS      = objects
      bloc_size    = _bs
      weight_fn    = weight_fn
      dependencies = dependencies
    EXCEPTIONS
      failed       = 1
      others       = 2.
  IF sy-subrc &lt;&gt; 0.
      ROLLBACK WORK.
      RAISE failed.
  ENDIF.

  COMMIT WORK AND WAIT.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_LOCK" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Lock a catégorie (private)"/>
     <ITEM LANG="F" TEXT="Lock a catégorie (private)"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="CAT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_CAT" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catégorie de donnée supplémentaire"/>
       <ITEM LANG="F" TEXT="Catégorie de donnée supplémentaire"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RUN_ID" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_RUN">
      <TEXTS>
       <ITEM LANG="E" TEXT="ID unique de l&apos;exécution"/>
       <ITEM LANG="F" TEXT="ID unique de l&apos;exécution"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FOREIGN_LOCK" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Objet déjà bloqué"/>
       <ITEM LANG="F" TEXT="Objet déjà bloqué"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SYS_FAILURE" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Erreur interne du serveur enqueue"/>
       <ITEM LANG="F" TEXT="Erreur interne du serveur enqueue"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************

  CALL FUNCTION &apos;ENQUEUE_EYGPL_RUN&apos;
    EXPORTING
      mode_ygpl_run_info       = &apos;X&apos;
      run_id                   = run_id
      categ                    = cat
*   X_RUN_ID                 = &apos; &apos;
*   X_CATEG                  = &apos; &apos;
      _scope                   = &apos;2&apos;
      _wait                    = &apos;X&apos;
      _collect                 = &apos; &apos;
    EXCEPTIONS
      foreign_lock             = 1
      system_failure           = 2
      OTHERS                   = 3.
  IF sy-subrc = 1.
    RAISE foreign_lock.
  ELSEIF sy-subrc &lt;&gt; 0.
    RAISE sys_failure.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_LOCK_CAT" EXPOSURE="1" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Lock a catégorie (protected)"/>
     <ITEM LANG="F" TEXT="Lock a catégorie (protected)"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="CAT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_CAT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catégorie de donnée supplémentaire"/>
       <ITEM LANG="F" TEXT="Catégorie de donnée supplémentaire"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="CAT_NOT_FOUND" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catérogie non définie dans YGPL_RUN_CAT"/>
       <ITEM LANG="F" TEXT="Catérogie non définie dans YGPL_RUN_CAT"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="FOREIGN_LOCK" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Objet déjà bloqué"/>
       <ITEM LANG="F" TEXT="Objet déjà bloqué"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SYSTEM_CAT" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Utilisation d&apos;une catégorie systeme (non autorisé)"/>
       <ITEM LANG="F" TEXT="Utilisation d&apos;une catégorie systeme (non autorisé)"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SYS_FAILURE" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Erreur interne du serveur enqueue"/>
       <ITEM LANG="F" TEXT="Erreur interne du serveur enqueue"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  IF cat IN ygpl_mt_categori=&gt;x_categ. RAISE system_cat. ENDIF.
  IF ygpl_mt_categori=&gt;do_exists( cat ) IS INITIAL. RAISE cat_not_found. ENDIF.

  CALL METHOD _lock
    EXPORTING
      run_id       = run_id
      cat          = cat
    EXCEPTIONS
      foreign_lock = 1
      sys_failure  = 2
      OTHERS       = 3.
  IF sy-subrc = 1.
    RAISE foreign_lock.
  ELSEIF sy-subrc &lt;&gt; 0.
    RAISE sys_failure.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_SEND_BLOCS" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Send blocs to DB"/>
     <ITEM LANG="F" TEXT="Send blocs to DB"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="BLOCS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_BLOCS_NFO">
      <TEXTS>
       <ITEM LANG="E" TEXT="Table dépendance bloc"/>
       <ITEM LANG="F" TEXT="Table dépendance bloc"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="DONE_OBJ" CMPTYPE="1" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_LINES_NFO">
      <TEXTS>
       <ITEM LANG="E" TEXT="Objets déjà envoyés"/>
       <ITEM LANG="F" TEXT="Objets déjà envoyés"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJECTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Liste des objets"/>
       <ITEM LANG="F" TEXT="Liste des objets"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="WEIGHT_FN" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_FN">
      <TEXTS>
       <ITEM LANG="E" TEXT="Field Name"/>
       <ITEM LANG="F" TEXT="Field Name"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="action à échouée"/>
       <ITEM LANG="F" TEXT="action à échouée"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA tab_ref TYPE REF TO data.
  DATA obj_id LIKE LINE OF done_obj.
  DATA weight TYPE t_bloc_size.
  DATA b_weight TYPE t_bloc_size.
  DATA fn TYPE string.

  FIELD-SYMBOLS :
    &lt;weight&gt; TYPE ANY,
    &lt;b&gt; LIKE LINE OF blocs,
    &lt;id&gt; LIKE LINE OF &lt;b&gt;-objs,
    &lt;obj&gt; TYPE ANY,
    &lt;objects&gt; LIKE objects.

  CREATE DATA tab_ref LIKE objects.
  ASSIGN tab_ref-&gt;* TO &lt;objects&gt;.

  IF NOT weight_fn IS INITIAL. CONCATENATE &apos;&lt;obj&gt;-&apos; weight_fn INTO fn. ENDIF.
* Creation bloc
  LOOP AT blocs ASSIGNING &lt;b&gt;.
    LOOP AT &lt;b&gt;-objs ASSIGNING &lt;id&gt;.
      READ TABLE objects INDEX &lt;id&gt;-id ASSIGNING &lt;obj&gt;.
      IF sy-subrc &lt;&gt; 0.
        RAISE failed.
      ENDIF.
* Weight determine
      weight = 1.
      IF NOT fn IS INITIAL.
        ASSIGN (fn) TO &lt;weight&gt;.
        IF sy-subrc = 0.
          weight = &lt;weight&gt;.
        ENDIF.
      ENDIF.
      ADD weight TO b_weight.

      APPEND &lt;obj&gt; TO &lt;objects&gt;.
      IF sy-subrc &lt;&gt; 0.
        RAISE failed.
      ENDIF.
      obj_id-key = &lt;id&gt;-id.
      INSERT obj_id INTO TABLE done_obj.
      IF sy-subrc &lt;&gt; 0.
        RAISE failed.
      ENDIF.
    ENDLOOP.
    CALL METHOD _add_bloc
      EXPORTING
        OBJECTS   = &lt;objects&gt;
        bloc_size = b_weight
      EXCEPTIONS
        failed  = 1
        OTHERS  = 2.
    IF sy-subrc &lt;&gt; 0.
      RAISE failed.
    ENDIF.
    REFRESH &lt;objects&gt;.
    clear: b_weight.
  ENDLOOP.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_SEND_MESSAGE" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Send message to DB"/>
     <ITEM LANG="F" TEXT="Send message to DB"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="CATEG" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="YGPL_MT_CATEGORI=&gt;_CATEG">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catégorie de donnée supplémentaire"/>
       <ITEM LANG="F" TEXT="Catégorie de donnée supplémentaire"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="MSG" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY">
      <TEXTS>
       <ITEM LANG="E" TEXT="Donnée du message"/>
       <ITEM LANG="F" TEXT="Donnée du message"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="action has failed"/>
       <ITEM LANG="F" TEXT="action has failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA: _msg TYPE ygpl_msgs.

  _msg-msg_id = _generate_msg_id( ).
  _msg-run_id = run_id.
  _msg-categ = categ.

  EXPORT msg = msg TO DATA BUFFER _msg-msg_data COMPRESSION ON.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.

  GET TIME STAMP FIELD _msg-timestamp.
  INSERT ygpl_msgs FROM _msg.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_SET_INFO" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Write info to DB"/>
     <ITEM LANG="F" TEXT="Write info to DB"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="CATEG" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="YGPL_MT_CATEGORI=&gt;_CATEG">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catégorie de donnée supplémentaire"/>
       <ITEM LANG="F" TEXT="Catégorie de donnée supplémentaire"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="INFO" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY">
      <TEXTS>
       <ITEM LANG="E" TEXT="Information à stocker"/>
       <ITEM LANG="F" TEXT="Information à stocker"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="action has failed"/>
       <ITEM LANG="F" TEXT="action has failed"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA: _info TYPE ygpl_run_info.

  CALL METHOD _lock
    EXPORTING
      run_id       = run_id
      cat          = categ
    EXCEPTIONS
      foreign_lock = 1
      sys_failure  = 2
      OTHERS       = 3.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.

  _info-run_id = run_id.
  _info-categ = categ.

  EXPORT info = info TO DATA BUFFER _info-data_info COMPRESSION ON.
  IF sy-subrc &lt;&gt; 0.
    CALL METHOD _unlock( run_id = run_id
      cat = categ ).
    RAISE failed.
  ENDIF.

  GET TIME STAMP FIELD _info-timestamp.
  INSERT ygpl_run_info FROM _info.
  IF sy-subrc &lt;&gt; 0.
    CALL METHOD _unlock( run_id = run_id
      cat = categ ).
    RAISE failed.
  ENDIF.

  CALL METHOD _unlock( run_id = run_id
    cat = categ ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_SET_OBJ_BLOC" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Set Object&apos;s Bloc"/>
     <ITEM LANG="F" TEXT="Set Object&apos;s Bloc"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="BLOC" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_OBJ_NUM">
      <TEXTS>
       <ITEM LANG="E" TEXT="Numéro de bloc"/>
       <ITEM LANG="F" TEXT="Numéro de bloc"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJ" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_OBJ_NUM">
      <TEXTS>
       <ITEM LANG="E" TEXT="Numéro d&apos;objet"/>
       <ITEM LANG="F" TEXT="Numéro d&apos;objet"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="OBJ2BLOCS" CMPTYPE="1" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_LINES_NFO">
      <TEXTS>
       <ITEM LANG="E" TEXT="Table dépendance bloc : OBJ-&gt;Bloc ou Bloc-&gt;Obj"/>
       <ITEM LANG="F" TEXT="Table dépendance bloc : OBJ-&gt;Bloc ou Bloc-&gt;Obj"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="FAILED" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="action a échouée"/>
       <ITEM LANG="F" TEXT="action a échouée"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  DATA wa LIKE LINE OF obj2blocs.

  wa-key = obj.
  wa-val = bloc.
  INSERT wa INTO TABLE obj2blocs.
  IF sy-subrc &lt;&gt; 0.
    RAISE failed.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_SLEEP" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Mise en sommeil"/>
     <ITEM LANG="F" TEXT="Mise en sommeil"/>
    </TEXTS>
    <SOURCE>`
  WAIT UP TO wait_time SECONDS.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_UNLOCK" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Unlock run categorie (private)"/>
     <ITEM LANG="F" TEXT="Unlock run categorie (private)"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="CAT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_CAT" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catégorie de donnée supplémentaire"/>
       <ITEM LANG="F" TEXT="Catégorie de donnée supplémentaire"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RUN_ID" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_RUN">
      <TEXTS>
       <ITEM LANG="E" TEXT="ID unique de l&apos;exécution"/>
       <ITEM LANG="F" TEXT="ID unique de l&apos;exécution"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************

  CALL FUNCTION &apos;DEQUEUE_EYGPL_RUN&apos;
    EXPORTING
      MODE_YGPL_RUN_INFO       = &apos;X&apos;
      RUN_ID                   = run_id
      CATEG                    = cat
*      X_RUN_ID                 = &apos; &apos;
*      X_CATEG                  = &apos; &apos;
      _SCOPE                   = &apos;3&apos;
      _SYNCHRON                = &apos; &apos;
      _COLLECT                 = &apos; &apos;.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_UNLOCK_CAT" EXPOSURE="1" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Unlock run categorie (protected)"/>
     <ITEM LANG="F" TEXT="Unlock run categorie (protected)"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="CAT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="T_CAT">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catégorie de donnée supplémentaire"/>
       <ITEM LANG="F" TEXT="Catégorie de donnée supplémentaire"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="CAT_NOT_FOUND" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Catérogie non définie dans YGPL_RUN_CAT"/>
       <ITEM LANG="F" TEXT="Catérogie non définie dans YGPL_RUN_CAT"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SYSTEM_CAT" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="Utilisation d&apos;une catégorie systeme (non autorisé)"/>
       <ITEM LANG="F" TEXT="Utilisation d&apos;une catégorie systeme (non autorisé)"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************
  IF cat IN ygpl_mt_categori=&gt;x_categ. RAISE system_cat. ENDIF.
  IF ygpl_mt_categori=&gt;do_exists( cat ) IS INITIAL. RAISE cat_not_found. ENDIF.

  CALL METHOD _unlock
    EXPORTING
      run_id         = run_id
      cat            = cat.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_UPDATE_BLOC_COUNT" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Màj Nombre de bloc"/>
     <ITEM LANG="F" TEXT="Màj Nombre de bloc"/>
    </TEXTS>
    <SOURCE>`
**********************************************************************
* Author : Al&apos;oustad Taryck BENSIALI (taryck.bensiali@gmail.com)     *
* Date : 2008 December                                               *
**********************************************************************

  UPDATE ygpl_run SET blocs = _bloc_count
    WHERE run_id = run_id.</SOURCE>
   </ITEM>
  </METHODS>
  <TYPEGROUPS>
   <ITEM TYPEGROUP="ABAP" EXPLICIT="X"/>
  </TYPEGROUPS>
  <TYPES>
   <ITEM CMPNAME="R_TYPE_KIND" STATE="1" TYPTYPE="4">
    r_type_kind TYPE RANGE OF abap_typekind
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Range de type_kind."/>
     <ITEM LANG="F" TEXT="Range de type_kind."/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_BLOC" STATE="1" TYPTYPE="4">
    BEGIN OF ts_bloc,
      bloc_id TYPE ygpl_bloc_id,
    END OF ts_bloc
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Structure d&apos;un bloc"/>
     <ITEM LANG="F" TEXT="Structure d&apos;un bloc"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_BLOC_NFO" STATE="1" TYPTYPE="4">
    BEGIN OF ts_bloc_nfo,  &quot; acces by line number
      id TYPE t_obj_num,
      size TYPE t_bloc_size,
      objs TYPE tt_idlst_nfo,
    END OF ts_bloc_nfo
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Info dépendance bloc"/>
     <ITEM LANG="F" TEXT="Info dépendance bloc"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_DEPENDENCY" EXPOSURE="2" STATE="1" TYPTYPE="4">
    begin of TS_dependency,
        Obj1 type t_obj_num,
        Obj2 type t_obj_num,
      end of TS_dependency
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Structure de dépendence (n° des lignes des objets devant)"/>
     <ITEM LANG="F" TEXT="Structure de dépendence (n° des lignes des objets devant)"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_IDLST_NFO" STATE="1" TYPTYPE="4">
    BEGIN OF ts_idlst_nfo,
       id TYPE t_obj_num,
     END OF ts_idlst_nfo
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Liste d&apos;objet"/>
     <ITEM LANG="F" TEXT="Liste d&apos;objet"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_JOBLIST" STATE="1" TYPTYPE="4">
    BEGIN OF ts_joblist,
      Num type t_threads,
      jobname TYPE tbtcjob-jobname,
      jobcount TYPE tbtcjob-jobcount,
    END OF ts_joblist
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Structure d&apos;un Job"/>
     <ITEM LANG="F" TEXT="Structure d&apos;un Job"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_JOB_INFO" STATE="1" TYPTYPE="1" TYPE="TBTCJOB">
    <TEXTS>
     <ITEM LANG="E" TEXT="Description des valeurs d&apos;un job (BI-API)"/>
     <ITEM LANG="F" TEXT="Description des valeurs d&apos;un job (BI-API)"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_LINE_NFO" STATE="1" TYPTYPE="4">
    BEGIN OF ts_line_nfo,
      key TYPE t_obj_num,
      val TYPE t_obj_num,
    END OF ts_line_nfo
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Info dépendance bloc : OBJ-&gt;Bloc ou Bloc-&gt;Obj"/>
     <ITEM LANG="F" TEXT="Info dépendance bloc : OBJ-&gt;Bloc ou Bloc-&gt;Obj"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_MSG" STATE="1" TYPTYPE="4">
    BEGIN OF ts_msg,
* Adding Table Key for delete
      mandt TYPE ygpl_msgs-mandt,
      msg_id TYPE	ygpl_msgs-msg_id,
* End of key
      categ	TYPE ygpl_msgs-categ,
      msg_data TYPE	ygpl_msgs-msg_data,
    END OF ts_msg
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Message à traiter"/>
     <ITEM LANG="F" TEXT="Message à traiter"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_MSG_CAT_TYPE" EXPOSURE="1" STATE="1" TYPTYPE="4">
    BEGIN OF ts_msg_cat_type,
      cat TYPE string,
      ok TYPE t_boolean,
      type TYPE t_data_type,
    END OF ts_msg_cat_type
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Structure déf. les types de données pour les msgs par cat"/>
     <ITEM LANG="F" TEXT="Structure déf. les types de données pour les msgs par cat"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_RUN" EXPOSURE="2" STATE="1" TYPTYPE="4">
    begin of TS_RUN,
        RUN_ID type	YGPL_RUN_ID,
        THREADS type YGPL_THREAD_COUNT,
        OBJECTS type YGPL_OBJ_COUNT,
        OBJ_LEFT type	YGPL_OBJ_LEFT,
        BLOC_SIZE type YGPL_BLOC_SIZE,
        BLOCS type YGPL_Bloc_COUNT,
      end of TS_RUN
`
    <TEXTS>
     <ITEM LANG="E" TEXT="donnée d&apos;un run"/>
     <ITEM LANG="F" TEXT="donnée d&apos;un run"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_STATUS_INFO" EXPOSURE="2" STATE="1" TYPTYPE="4">
    begin of TS_STATUS_INFO,
        STATUS type T_STATUS,
        Count type I,
      end of TS_STATUS_INFO
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Conteur par status"/>
     <ITEM LANG="F" TEXT="Conteur par status"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_STEPINFO" STATE="1" TYPTYPE="1" TYPE="TBTCSTEP">
    <TEXTS>
     <ITEM LANG="E" TEXT="Structure de ligne info de step de job"/>
     <ITEM LANG="F" TEXT="Structure de ligne info de step de job"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_BLOCS" STATE="1" TYPTYPE="4">
    tt_blocs TYPE STANDARD TABLE OF ts_bloc
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Blocs envoyé"/>
     <ITEM LANG="F" TEXT="Blocs envoyé"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_BLOCS_NFO" STATE="1" TYPTYPE="4">
    tt_blocs_nfo TYPE SORTED TABLE OF ts_bloc_nfo WITH UNIQUE KEY id
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Table dépendance bloc"/>
     <ITEM LANG="F" TEXT="Table dépendance bloc"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_DEPENDENCIES" EXPOSURE="2" STATE="1" TYPTYPE="4">
    TT_dependencies type sorted TABLE OF TS_dependency with UNIQUE
key Obj1 Obj2
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Table des dépendences"/>
     <ITEM LANG="F" TEXT="Table des dépendences"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_IDLST_NFO" STATE="1" TYPTYPE="4">
    tt_idlst_nfo TYPE STANDARD TABLE OF ts_idlst_nfo WITH DEFAULT KEY
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Liste d&apos;objet"/>
     <ITEM LANG="F" TEXT="Liste d&apos;objet"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_JOBLIST" STATE="1" TYPTYPE="4">
    tt_joblist TYPE STANDARD TABLE OF ts_joblist
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Liste des threads"/>
     <ITEM LANG="F" TEXT="Liste des threads"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_LINES_NFO" STATE="1" TYPTYPE="4">
    tt_lines_nfo TYPE SORTED TABLE OF ts_line_nfo WITH UNIQUE KEY KEY
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Table dépendance bloc : OBJ-&gt;Bloc ou Bloc-&gt;Obj"/>
     <ITEM LANG="F" TEXT="Table dépendance bloc : OBJ-&gt;Bloc ou Bloc-&gt;Obj"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_MSGS" STATE="1" TYPTYPE="4">
    tt_msgs TYPE STANDARD TABLE OF ts_msg
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Liste de message à traiter"/>
     <ITEM LANG="F" TEXT="Liste de message à traiter"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_MSG_CAT_TYPES" EXPOSURE="1" STATE="1" TYPTYPE="4">
    tt_msg_cat_types TYPE HASHED TABLE OF ts_msg_cat_type WITH UNIQUE KEY cat
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Table des types de donnée pour catégorie de msg"/>
     <ITEM LANG="F" TEXT="Table des types de donnée pour catégorie de msg"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_STATUS_LIST" EXPOSURE="2" STATE="1" TYPTYPE="4">
    TT_Status_list type sorted TABLE OF TS_STATUS_INFO with UNIQUE
key status
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Liste des status"/>
     <ITEM LANG="F" TEXT="Liste des status"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_STEPINFO" STATE="1" TYPTYPE="4">
    tt_stepinfo TYPE STANDARD TABLE OF ts_stepinfo
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Steps d&apos;un job"/>
     <ITEM LANG="F" TEXT="Steps d&apos;un job"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_BLOC_COUNT" STATE="1" TYPTYPE="1" TYPE="YGPL_BLOC_COUNT">
    <TEXTS>
     <ITEM LANG="E" TEXT="Nombre de bloc pour traitement //"/>
     <ITEM LANG="F" TEXT="Nombre de bloc pour traitement //"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_BLOC_SIZE" EXPOSURE="2" STATE="1" TYPTYPE="1" TYPE="YGPL_BLOC_SIZE">
    <TEXTS>
     <ITEM LANG="E" TEXT="Taille d&apos;un bloc (unité mini de traitement)"/>
     <ITEM LANG="F" TEXT="Taille d&apos;un bloc (unité mini de traitement)"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_BOOLEAN" EXPOSURE="2" STATE="1" TYPTYPE="1" TYPE="OAX">
    <TEXTS>
     <ITEM LANG="E" TEXT="Oui &apos;X&apos; ou &apos;N&apos;"/>
     <ITEM LANG="F" TEXT="Oui &apos;X&apos; ou &apos;N&apos;"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_CAT" EXPOSURE="2" STATE="1" TYPTYPE="1" TYPE="YGPL_RUN_DATA_CAT">
    <TEXTS>
     <ITEM LANG="E" TEXT="Catégorie de donnée supplémentaire"/>
     <ITEM LANG="F" TEXT="Catégorie de donnée supplémentaire"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_DATA_TYPE" EXPOSURE="1" STATE="1" TYPTYPE="1" TYPE="STRING">
    <TEXTS>
     <ITEM LANG="E" TEXT="Type de donnée"/>
     <ITEM LANG="F" TEXT="Type de donnée"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_FN" EXPOSURE="2" STATE="1" TYPTYPE="1" TYPE="ABAP_COMPNAME">
    <TEXTS>
     <ITEM LANG="E" TEXT="Field Name"/>
     <ITEM LANG="F" TEXT="Field Name"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_JOBCOUNT" EXPOSURE="2" STATE="1" TYPTYPE="1" TYPE="TBTCJOB-JOBCOUNT">
    <TEXTS>
     <ITEM LANG="E" TEXT="N° du job arrière plan"/>
     <ITEM LANG="F" TEXT="N° du job arrière plan"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_JOBNAME" EXPOSURE="2" STATE="1" TYPTYPE="1" TYPE="TBTCJOB-JOBNAME">
    <TEXTS>
     <ITEM LANG="E" TEXT="Nom du job arrière plan"/>
     <ITEM LANG="F" TEXT="Nom du job arrière plan"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_MEM_SIZE" EXPOSURE="2" STATE="1" TYPTYPE="1" TYPE="YGPL_MEM_SIZE">
    <TEXTS>
     <ITEM LANG="E" TEXT="Estimated Memory size of the bloc"/>
     <ITEM LANG="F" TEXT="Estimated Memory size of the bloc"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_MSGDATA" STATE="1" TYPTYPE="1" TYPE="YGPL_EXPDATA">
    <TEXTS>
     <ITEM LANG="E" TEXT="Donnée de Message"/>
     <ITEM LANG="F" TEXT="Donnée de Message"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_MSGKEY" STATE="1" TYPTYPE="1" TYPE="YGPL_MSG_ID">
    <TEXTS>
     <ITEM LANG="E" TEXT="ID de message"/>
     <ITEM LANG="F" TEXT="ID de message"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_OBJKEY" STATE="1" TYPTYPE="1" TYPE="YGPL_BLOC_ID">
    <TEXTS>
     <ITEM LANG="E" TEXT="ID unique du bloc d&apos;objet"/>
     <ITEM LANG="F" TEXT="ID unique du bloc d&apos;objet"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_OBJ_COUNT" EXPOSURE="2" STATE="1" TYPTYPE="1" TYPE="YGPL_OBJ_COUNT">
    <TEXTS>
     <ITEM LANG="E" TEXT="Nombre d&apos;objet"/>
     <ITEM LANG="F" TEXT="Nombre d&apos;objet"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_OBJ_NUM" EXPOSURE="2" STATE="1" TYPTYPE="1" TYPE="I">
    <TEXTS>
     <ITEM LANG="E" TEXT="Numéro d&apos;objet"/>
     <ITEM LANG="F" TEXT="Numéro d&apos;objet"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_PROGRESS" EXPOSURE="2" STATE="1" TYPTYPE="4">t_progress(6) TYPE p DECIMALS 3
`</ITEM>
   <ITEM CMPNAME="T_RAWDATA" EXPOSURE="2" STATE="1" TYPTYPE="1" TYPE="XSTRING">
    <TEXTS>
     <ITEM LANG="E" TEXT="Donnée brute à décoder avec CONV_RAW2DATA"/>
     <ITEM LANG="F" TEXT="Donnée brute à décoder avec CONV_RAW2DATA"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_RUN" EXPOSURE="2" STATE="1" TYPTYPE="1" TYPE="YGPL_RUN_ID">
    <TEXTS>
     <ITEM LANG="E" TEXT="ID unique de l&apos;exécution"/>
     <ITEM LANG="F" TEXT="ID unique de l&apos;exécution"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_STATUS" EXPOSURE="2" STATE="1" TYPTYPE="1" TYPE="YGPL_STATUS">
    <TEXTS>
     <ITEM LANG="E" TEXT="Status de Objets"/>
     <ITEM LANG="F" TEXT="Status de Objets"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_THREADS" EXPOSURE="2" STATE="1" TYPTYPE="1" TYPE="INT4">
    <TEXTS>
     <ITEM LANG="E" TEXT="Nombre de thread"/>
     <ITEM LANG="F" TEXT="Nombre de thread"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_TIME" EXPOSURE="2" STATE="1" TYPTYPE="1" TYPE="INT4">
    <TEXTS>
     <ITEM LANG="E" TEXT="Temps en seconde"/>
     <ITEM LANG="F" TEXT="Temps en seconde"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_TIMESTAMP" STATE="1" TYPTYPE="1" TYPE="TIMESTAMPL">
    <TEXTS>
     <ITEM LANG="E" TEXT="Horodatage UTC sous forme étendue (AAAAMMJJhhmmssmmmuuun)"/>
     <ITEM LANG="F" TEXT="Horodatage UTC sous forme étendue (AAAAMMJJhhmmssmmmuuun)"/>
    </TEXTS>
   </ITEM>
  </TYPES>
 </RAW>
</ZL_OBJECT>
