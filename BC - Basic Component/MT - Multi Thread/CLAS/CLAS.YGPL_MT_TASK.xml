<?xml version="1.0" encoding="utf-16"?>
<ZL_OBJECT CHECKSUM="A02D21D65E417E03A5AAE945172756CA" CODE_SIGNATURE="D0FDFE5B369754E44190D85BAB799213" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="YGPL_MT_TASK" TYPE="CLAS" VERSION="1.01">
 <DEPENDENCIES>
  <ITEM TYPE="CLAS" NAME="YGPL_MT_PROCESS_4MT"/>
 </DEPENDENCIES>
 <DIRECTORY DEVCLASS="YGPL-MULTITHREAD" MASTERLANG="E"/>
 <RAW>
  <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" CLSCCINCL="X" FIXPT="X" UNICODE="X">
   <INHERITANCE REFCLSNAME="YGPL_MT_PROCESS_4MT" STATE="1"/>
   <TEXTS>
    <ITEM LANG="E" TEXT="MT : Task process"/>
   </TEXTS>
  </A0_MAINDATA>
  <ATTRIBUTS>
   <ITEM CMPNAME="BLOC_SIZE" STATE="1" TYPTYPE="1" TYPE="TD_BLOC_SIZE">
    <TEXTS>
     <ITEM LANG="E" TEXT="Minimal bloc size"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="F_DEFINITION_SENDED" STATE="1" TYPTYPE="1" TYPE="TD_BOOLEAN">
    <TEXTS>
     <ITEM LANG="E" TEXT="Task definition has been sended"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="F_HAS_CHANGED" STATE="1" TYPTYPE="1" TYPE="TD_BOOLEAN">
    <TEXTS>
     <ITEM LANG="E" TEXT="Object has changed"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="F_STOP_REQUESTED" STATE="1" TYPTYPE="1" TYPE="TD_BOOLEAN">
    <TEXTS>
     <ITEM LANG="E" TEXT="Stop has been requested"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="F_SYSTEM_MESSAGE" STATE="1" TYPTYPE="1" TYPE="TD_BOOLEAN">
    <TEXTS>
     <ITEM LANG="E" TEXT="System Message Allowed"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="IS_NEW" STATE="1" ATTDECLTYP="1" TYPTYPE="1" TYPE="TD_BOOLEAN">
    <TEXTS>
     <ITEM LANG="E" TEXT="Constructor in factory mode"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="MAX_MEMORY" EXPOSURE="2" STATE="1" ATTRDONLY="X" TYPTYPE="1" TYPE="TD_MEMORY_SIZE">
    <TEXTS>
     <ITEM LANG="E" TEXT="Estimated Memory size of the bloc"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="O_INFORMATIONS" EXPOSURE="1" STATE="1" TYPTYPE="1" TYPE="TO_INFORMATIONS">
    <TEXTS>
     <ITEM LANG="E" TEXT="Information communication between process"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="O_MESSAGING" EXPOSURE="1" STATE="1" TYPTYPE="1" TYPE="TO_MESSAGING">
    <TEXTS>
     <ITEM LANG="E" TEXT="Message communication between process"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="O_OBJECTS" EXPOSURE="1" STATE="1" TYPTYPE="1" TYPE="TO_OBJECTS">
    <TEXTS>
     <ITEM LANG="E" TEXT="Object store engine"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="O_RUN" EXPOSURE="1" STATE="1" TYPTYPE="1" TYPE="TO_RUN">
    <TEXTS>
     <ITEM LANG="E" TEXT="MT : Run Process"/>
    </TEXTS>
   </ITEM>
  </ATTRIBUTS>
  <LOCAL>
   <TYPES>`
*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</TYPES>
   <IMPLEMENTATIONS>`
*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</IMPLEMENTATIONS>
   <MACROS>`
*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</MACROS>
  </LOCAL>
  <METHODS>
   <ITEM CMPNAME="CONFIRM_BATCH" EXPOSURE="2" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Confirm to correct handling of previous batch of objects"/>
    </TEXTS>
    <SOURCE>`
  o_objects-&gt;confirm_batch( ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CONFIRM_OBJECTS" EXPOSURE="2" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Confirm each single object or set of objects"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="COUNT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_COUNT" PARVALUE="1" PAROPTIONL="X"/>
     <ITEM SCONAME="STATUS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_STATUS"/>
    </PARAMETERS>
    <SOURCE>`
  o_objects-&gt;confirm_objects( status = status
                               count = count ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CONSTRUCTOR" EXPOSURE="2" STATE="1" MTDTYPE="2" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Create existing Task"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="TASK_ID" CMPTYPE="1" MTDTYPE="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_PROCESS_ID">
      <TEXTS>
       <ITEM LANG="E" TEXT="Task Process ID"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="YGPL_MT_CX" LANGU="E" MTDTYPE="2">
      <TEXTS>
       <ITEM LANG="E" TEXT="MultyThread : Root exception class"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
  DATA length TYPE i.

  length = XSTRLEN( task_id ).
  ASSERT task_id IS INITIAL OR length = 16.

  super-&gt;constructor( ).

  CREATE OBJECT o_categories.
  CREATE OBJECT o_messaging
    EXPORTING
      o_process = me.

  IF task_id IS INITIAL.
* Do not have any run yet
    status = ygpl_mt_status=&gt;starting.
    is_new = abap_true.
    f_has_changed = abap_true.
  ELSE.
    is_new = abap_false.
    me-&gt;process_id = task_id.
    read( ).
    o_run-&gt;set_category( o_categories ).
    CREATE OBJECT o_informations
      EXPORTING
        o_process = o_run.
    CREATE OBJECT o_objects
      EXPORTING
        o_run = o_run.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="GET_PROGRESSION" EXPOSURE="2" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Get run progression"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="RESULT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_PROGRESSION">
      <TEXTS>
       <ITEM LANG="E" TEXT="Run&apos;s progression"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  result-processed_objects = o_objects-&gt;processed_objects.
  result-global_status = o_objects-&gt;global_status.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="HANDLE_NEW_CONDITIONS" STATE="1" MTDTYPE="1" REFCLSNAME="YGPL_MT_MESSAGING" REFCMPNAME="NEW_RUNNING_CONDITIONS">
    <TEXTS>
     <ITEM LANG="E" TEXT="Recieving new running conditions"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="CONDITIONS" CMPTYPE="1" MTDTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_RUNNING_CONDITIONS"/>
    </PARAMETERS>
    <SOURCE>`
  IF NOT conditions-max_memory IS INITIAL AND o_objects-&gt;maximum_memory &lt;&gt; conditions-max_memory.
    o_objects-&gt;maximum_memory = conditions-max_memory .
  ENDIF.
  IF NOT conditions-stop IS INITIAL.    f_stop_requested = abap_true.     ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="PROCESS_BATCH" EXPOSURE="1" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Method to redefine by children to process objects batch"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="OBJECTS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE"/>
    </PARAMETERS>
   </ITEM>
   <ITEM CMPNAME="PROCESS_OBJECTS" EXPOSURE="2" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Process objects"/>
    </TEXTS>
    <SOURCE>`
  FIELD-SYMBOLS &lt;objects&gt; TYPE STANDARD TABLE.

  DO.
* Get data
    _get_batch( IMPORTING objects = &lt;objects&gt; ).

    IF &lt;objects&gt; IS INITIAL.     EXIT.       ENDIF.

* Process Data set
    process_batch( EXPORTING objects = &lt;objects&gt; ).
    ASSERT o_objects-&gt;get_confirmed_object_count( ) &gt; 0.

    FREE &lt;objects&gt;.

* Confirm Data
    confirm_batch( ).

  ENDDO.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SET_CATEGORY" EXPOSURE="2" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Change the category list"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="O_CATEGORIES" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_CATEGORIES">
      <TEXTS>
       <ITEM LANG="E" TEXT="Define new Catagories"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  CHECK o_categories IS BOUND.
  me-&gt;o_categories = o_categories.
  CHECK o_run IS BOUND.
  o_run-&gt;set_category( o_categories ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SET_RUN" EXPOSURE="1" STATE="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Set new Run if new task"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="RUN_ID" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_PROCESS_ID">
      <TEXTS>
       <ITEM LANG="E" TEXT="Run Process ID"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="YGPL_MT_CX" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="MultyThread : Root exception class"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
  CHECK is_new = abap_true.
  _set_run( run_id ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SET_STATUS" EXPOSURE="2" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Change the status list"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="O_STATUS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_STATUS">
      <TEXTS>
       <ITEM LANG="E" TEXT="New Status list"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  CHECK o_status IS BOUND.
  me-&gt;o_status = o_status.
  CHECK o_run IS BOUND.
  o_run-&gt;set_status( o_status ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_GET_BATCH" EXPOSURE="1" STATE="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Get a batch of objects"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="OBJECTS" CMPTYPE="1" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE"/>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="YGPL_MT_CX" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="MultyThread : Root exception class"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
  IF status &lt;&gt; ygpl_mt_status=&gt;in_progress.
    status = ygpl_mt_status=&gt;in_progress.
    f_has_changed = abap_true.
    save( ).
  ELSE.
    autosave( ).
  ENDIF.
  _send_task_definition( ).
  CHECK f_stop_requested IS INITIAL.
  o_objects-&gt;get_batch( IMPORTING objects = objects ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_GET_INFORMATION" EXPOSURE="1" STATE="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Read information from DB"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="CATEGORY" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_CATEGORY">
      <TEXTS>
       <ITEM LANG="E" TEXT="Information Category"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="INFO" CMPTYPE="1" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY">
      <TEXTS>
       <ITEM LANG="E" TEXT="Information stored"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="YGPL_MT_CX" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="MultyThread : Root exception class"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
  o_informations-&gt;get_information( EXPORTING category = category
                                    CHANGING     info = info ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_LOCK" STATE="1" MTDDECLTYP="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Locking"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="LOCK_MODE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_LOCK_MODE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Lock mode (E, S, X)"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="PROCESS_ID" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_PROCESS_ID">
      <TEXTS>
       <ITEM LANG="E" TEXT="Task ID"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="TIMEOUT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_TIME" PARVALUE="60">
      <TEXTS>
       <ITEM LANG="E" TEXT="Timeout value (second)"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="YGPL_MT_CX" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="MultyThread : Root exception class"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
  DATA _key TYPE string.
  DATA user TYPE sy-uname.

  ygpl_mt_lock_managment=&gt;check_lock_mode( lock_mode ).

  ygpl_mt_lock_managment=&gt;set_timeout_timestamp( timeout ).
  DO.
  CALL FUNCTION &apos;ENQUEUE_EYGPLMT_TASKS&apos;
    EXPORTING
      MODE_YGPLMT_TASKS       = lock_mode
      MANDT                   = SY-MANDT
      TASK_ID                 = process_id
      X_TASK_ID               = abap_true
      _SCOPE                  = &apos;2&apos;
      _WAIT                   = abap_true
      _COLLECT                = &apos; &apos;
    EXCEPTIONS
      FOREIGN_LOCK            = 1
      SYSTEM_FAILURE          = 2
      OTHERS                  = 3.
  IF sy-subrc = 1.
      IF ygpl_mt_lock_managment=&gt;check_timeout( ) IS INITIAL.
        CONTINUE.
      ELSE.
    user = sy-msgv1.
    _key = process_id.
    RAISE EXCEPTION TYPE ygpl_mt_cx_locks
          EXPORTING textid = ygpl_mt_cx_locks=&gt;foreign_lock
                  object_name = &apos;MT Process Data&apos;(tds)
                   object_key = _key
                         user = user.
  ENDIF.
*  else if sy-subrc &lt;&gt; 0.
  ELSE.
    ASSERT sy-subrc = 0.
  ENDIF.
  CALL FUNCTION &apos;YGPL_DO_NOTHING&apos; IN UPDATE TASK.
    EXIT.
  ENDDO.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_SEND_MESSAGE" EXPOSURE="1" STATE="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Send message to DB"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="ARCHIVE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_BOOLEAN" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Archive message after reception"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="CATEGORY" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_CATEGORY">
      <TEXTS>
       <ITEM LANG="E" TEXT="Message category"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="MESSAGE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY">
      <TEXTS>
       <ITEM LANG="E" TEXT="Message data"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="YGPL_MT_CX" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="MultyThread : Root exception class"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
  o_messaging-&gt;send_message( archive = archive
                            category = category
                             message = message ).</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_SEND_TASK_DEFINITION" EXPOSURE="1" STATE="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Send task definition is needed"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="OBJECTS" CMPTYPE="1" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE"/>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="YGPL_MT_CX" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="MultyThread : Root exception class"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
  DATA s_info TYPE ts_process_definition.

  IF f_definition_sended IS INITIAL.
    autosave( ).
    s_info-process_id = me-&gt;process_id.
    s_info-batch_info = me-&gt;batch_info.
    s_info-workprocess = me-&gt;workprocess.
    o_messaging-&gt;send_system_message( category = system_categories-task_def
                                       message = s_info ).
    f_definition_sended = abap_true.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_SET_RUN" STATE="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Set new Run"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="RUN_ID" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_PROCESS_ID">
      <TEXTS>
       <ITEM LANG="E" TEXT="Run Process ID"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="YGPL_MT_CX" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="MultyThread : Root exception class"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
  DATA f_no_msg TYPE td_boolean.

  f_no_msg = ygpl_mt_process=&gt;no_message.
  ygpl_mt_process=&gt;no_message = abap_true.
  CREATE OBJECT o_run
    EXPORTING
      run_id = run_id.
  ygpl_mt_process=&gt;no_message = f_no_msg.
  bloc_size = o_run-&gt;infos-bloc_size.
  o_run-&gt;set_category( o_categories ).
  o_run-&gt;set_status( o_status ).
  CREATE OBJECT o_informations
    EXPORTING
      o_process = o_run.
  CREATE OBJECT o_objects
    EXPORTING
      o_run = o_run.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_UNLOCK" STATE="1" MTDDECLTYP="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Unlocking"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="LOCK_MODE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_LOCK_MODE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Lock mode (E, S, X)"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="PROCESS_ID" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_PROCESS_ID">
      <TEXTS>
       <ITEM LANG="E" TEXT="Task ID"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="YGPL_MT_CX" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="MultyThread : Root exception class"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
  ygpl_mt_lock_managment=&gt;check_lock_mode( lock_mode ).

  CALL FUNCTION &apos;DEQUEUE_EYGPLMT_TASKS&apos;
    EXPORTING
      mode_ygplmt_tasks = lock_mode
      mandt             = sy-mandt
      task_id           = process_id
      x_task_id         = abap_true
      _scope            = &apos;2&apos;
      _synchron         = &apos; &apos;
      _collect          = &apos; &apos;.</SOURCE>
   </ITEM>
  </METHODS>
  <REDEFINITIONS>
   <ITEM REFCLSNAME="YGPL_MT_PROCESS_4MT" MTDNAME="AUTOSAVE">
    <SOURCE>`
  super-&gt;autosave( ).
  CHECK NOT f_has_changed IS INITIAL.
  save( ).
  CLEAR f_has_changed.</SOURCE>
   </ITEM>
   <ITEM REFCLSNAME="YGPL_MT_PROCESS_4MT" MTDNAME="IS_SYSTEM_MESSAGE_ALLOWED" MTDFINAL="X">
    <SOURCE>`
  result = f_system_message.</SOURCE>
   </ITEM>
   <ITEM REFCLSNAME="YGPL_MT_PROCESS_4MT" MTDNAME="LOCK_EXCLUSIVE">
    <SOURCE>`
  super-&gt;lock_exclusive( ).
  _lock( lock_mode = ygpl_mt_lock_managment=&gt;lock_modes-write
        process_id = me-&gt;process_id ).</SOURCE>
   </ITEM>
   <ITEM REFCLSNAME="YGPL_MT_PROCESS_4MT" MTDNAME="LOCK_WITH_SHARE">
    <SOURCE>`
  super-&gt;lock_with_share( ).
  _lock( lock_mode = ygpl_mt_lock_managment=&gt;lock_modes-read
        process_id = me-&gt;process_id ).</SOURCE>
   </ITEM>
   <ITEM REFCLSNAME="YGPL_MT_PROCESS_4MT" MTDNAME="READ">
    <SOURCE>`
  DATA _task TYPE ygplmt_tasks.

  super-&gt;read( ).

  SELECT SINGLE * INTO _task
    FROM ygplmt_tasks
    WHERE task_id = process_id.
  ASSERT sy-subrc = 0.

  unlock_with_share( ).

  times-start = _task-timestamp.
  _set_run( _task-run_id ).
  status = _task-status.</SOURCE>
   </ITEM>
   <ITEM REFCLSNAME="YGPL_MT_PROCESS_4MT" MTDNAME="SAVE">
    <SOURCE>`
  DATA _task TYPE ygplmt_tasks.

  super-&gt;save( ).

  _task-task_id = process_id.
  _task-status = status.
  _task-run_id = o_run-&gt;process_id.
  MODIFY ygplmt_tasks FROM _task.
  ASSERT sy-subrc = 0.</SOURCE>
   </ITEM>
   <ITEM REFCLSNAME="YGPL_MT_PROCESS_4MT" MTDNAME="UNLOCK_EXCLUSIVE">
    <SOURCE>`
  _unlock( lock_mode = ygpl_mt_lock_managment=&gt;lock_modes-write
          process_id = me-&gt;process_id ).
  super-&gt;unlock_exclusive( ) .</SOURCE>
   </ITEM>
   <ITEM REFCLSNAME="YGPL_MT_PROCESS_4MT" MTDNAME="UNLOCK_WITH_SHARE">
    <SOURCE>`
  _unlock( lock_mode = ygpl_mt_lock_managment=&gt;lock_modes-read
          process_id = me-&gt;process_id ).
  super-&gt;unlock_with_share( ).</SOURCE>
   </ITEM>
  </REDEFINITIONS>
  <TYPES>
   <ITEM CMPNAME="TO_RUN" EXPOSURE="1" STATE="1" EDITORDER="1 " TYPTYPE="3" TYPE="YGPL_MT_PARENT">
    <TEXTS>
     <ITEM LANG="E" TEXT="MT : Run Process"/>
    </TEXTS>
   </ITEM>
  </TYPES>
 </RAW>
</ZL_OBJECT>
