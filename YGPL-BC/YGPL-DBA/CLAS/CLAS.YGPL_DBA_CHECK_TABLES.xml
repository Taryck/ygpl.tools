<?xml version="1.0" encoding="utf-16"?>
<ZL_OBJECT CHECKSUM="014D7F037175E35D0416A62B7A8F0157" CODE_SIGNATURE="092794F77CB9A6E17249A4E96404BAE3" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="YGPL_DBA_CHECK_TABLES" TYPE="CLAS" VERSION="1.01">
 <DIRECTORY DEVCLASS="YGPL-DBA" MASTERLANG="E"/>
 <RAW>
  <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" CLSCCINCL="X" FIXPT="X" UNICODE="X">
   <INHERITANCE REFCLSNAME="YGPL_DBA_CHECK_GENERIC" STATE="1"/>
   <TEXTS>
    <ITEM LANG="E" TEXT="DBA tools - Check table consistency">U1&amp;FUNCTIONALITY&amp;
ASAllow to activate (compile) a components.
U1&amp;RELATIONS&amp;
AS
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AS</ITEM>
   </TEXTS>
  </A0_MAINDATA>
  <ALIASES>
   <ITEM CMPNAME="CHECK_LOG" EXPOSURE="2" REFCLSNAME="YGPLIDBA_CHECK_TABLES" REFCMPNAME="CHECK_LOG"/>
   <ITEM CMPNAME="DO_CHECK" EXPOSURE="2" CMPTYPE="1" REFCLSNAME="YGPLIDBA_CHECK_TABLES" REFCMPNAME="DO_CHECK"/>
   <ITEM CMPNAME="DO_CHECKC" EXPOSURE="2" CMPTYPE="1" REFCLSNAME="YGPLIDBA_CHECK_GEN" REFCMPNAME="DO_CHECK"/>
   <ITEM CMPNAME="GET_TABLE_CHECK_PROTOCOL" EXPOSURE="2" CMPTYPE="1" REFCLSNAME="YGPLIDBA_CHECK_TABLES" REFCMPNAME="GET_TABLE_CHECK_PROTOCOL"/>
   <ITEM CMPNAME="RESET" EXPOSURE="2" CMPTYPE="1" REFCLSNAME="YGPLIDBA_CHECK_TABLES" REFCMPNAME="RESET"/>
   <ITEM CMPNAME="RESET2" EXPOSURE="2" CMPTYPE="1" REFCLSNAME="YGPLIDBA_CHECK_GEN" REFCMPNAME="RESET"/>
   <ITEM CMPNAME="SET_LIST_VX" EXPOSURE="2" CMPTYPE="1" REFCLSNAME="YGPLIDBA_CHECK_GEN" REFCMPNAME="SET_LIST"/>
   <ITEM CMPNAME="TD_TABLE_NAME" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPLIDBA_CHECK_TABLES" REFCMPNAME="TD_TABLE_NAME"/>
   <ITEM CMPNAME="TT_CHECK_LOG" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPLIDBA_CHECK_TABLES" REFCMPNAME="TT_CHECK_LOG"/>
   <ITEM CMPNAME="TT_TABLES_CHECK_LOG" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPLIDBA_CHECK_TABLES" REFCMPNAME="TT_TABLES_CHECK_LOG"/>
  </ALIASES>
  <ATTRIBUTS>
   <ITEM CMPNAME="TABLE_ENQ_TYPE" EXPOSURE="1" STATE="1" ATTDECLTYP="1" TYPTYPE="1" TYPE="RSDEO-OBJTYPE">
    <TEXTS>
     <ITEM LANG="E" TEXT="Pseudo Cosntant : ABAP/4 Dictionary object type"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TABLE_TYPE" EXPOSURE="1" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;T&apos;" TYPTYPE="1" TYPE="RSEDD0-DDOBJTYPE">
    <TEXTS>
     <ITEM LANG="E" TEXT="DD object type in DE management system"/>
    </TEXTS>
   </ITEM>
  </ATTRIBUTS>
  <INTERFACES>
   <ITEM REFCLSNAME="YGPLIDBA_CHECK_TABLES" EXPOSURE="2" STATE="1" RELTYPE="1">
    <COMPONENTS>
     <ITEM MTDNAME="GET_TABLE_CHECK_PROTOCOL">
      <SOURCE>`
  DATA objname        TYPE rsedd0-ddobjname.
  DATA protid         TYPE sy-tabix.
  DATA actmode        TYPE ddrefstruc-mode.
  DATA subrc          TYPE sy-subrc.
  DATA s_memid        TYPE tstrf01-filename.
  DATA s_table_def    TYPE ts_table_def.
  DATA ctrl_tbix_act  TYPE dctbixact.
  DATA rc             TYPE sy-subrc.

  DEFINE define_struct.                  &quot;Parameter: Name Bezugsstruktur
    data: begin of &amp;1.
            include structure &amp;2.
    data: end of &amp;1.
  END-OF-DEFINITION.

  objname = name.
  CALL FUNCTION &apos;INTERN_DD_CHECK_EXIST&apos;&quot;Existenz-/Objektklasseprüfung
         EXPORTING
              objname            = objname
              objtype            = table_type
              err_message        = &apos; &apos;
              objstate           = &apos;M&apos;
              exists             = &apos;X&apos;
         EXCEPTIONS
              OTHERS             = 01.
  CHECK sy-subrc = 0.

  CALL FUNCTION &apos;DD_OBJ_PROT_OPEN&apos;
    EXPORTING
      objectname = objname
      objecttype = table_enq_type
      level      = 1
      device     = &apos;M&apos;
      ddfunc     = &apos;CHE&apos;
    IMPORTING
      prid       = protid
    EXCEPTIONS
      OTHERS     = 01.
  ASSERT sy-subrc = 0.

  PERFORM stdo_set_format IN PROGRAM radbtout USING protid &apos;S&apos;.
  actmode = 9.                       &quot;Prüfen

** Ledge to control activation
*  define_struct ctrl_tabl_act dctablact.
** 2. Set the ledge for the activation dependent of activation-mode
*  PERFORM tabl_setactivation IN PROGRAM SAPLSDTA
**          USING ctrl_tabl_act act_mode ntab_putstate timer_on &apos; &apos; auth_chk &apos; &apos; &apos;M&apos; excommit.
*          USING ctrl_tabl_act 9 &apos;A&apos; &apos; &apos; &apos; &apos; &apos;X&apos; &apos; &apos; &apos;M&apos; &apos;X&apos;.

  s_table_def = get_table_definition( name = name
                                    protid = protid ).

  PERFORM indx_setchecks IN PROGRAM radixchk
          USING 10 space s_table_def-dd02v_a s_table_def-dd02v ctrl_tbix_act.   &quot; ctrl_tabl_act-tbixchk
  PERFORM indx_cre_reflog IN PROGRAM radixchk
          TABLES s_table_def-t_dd12v USING protid.
  PERFORM indx_dispatch IN PROGRAM radixchk
          TABLES s_table_def-t_dd12v_a s_table_def-t_dd12v s_table_def-t_dd17v_a s_table_def-t_dd17v s_table_def-t_dd03p
           USING protid s_table_def-dd02v ctrl_tbix_act rc.

  PERFORM dd_pr_close IN PROGRAM radbtout USING protid &apos;X&apos;.

  CONCATENATE &apos;CHE&apos; table_enq_type objname INTO s_memid.
  CALL FUNCTION &apos;TRINT_READ_LOG_FROM_MEMORY&apos;
    EXPORTING
      iv_logname_memory = s_memid
      iv_free_memory    = &apos;X&apos;
    TABLES
      et_log            = result
    EXCEPTIONS
      log_not_found     = 1
      OTHERS            = 2.
  ASSERT sy-subrc = 0.</SOURCE>
     </ITEM>
    </COMPONENTS>
   </ITEM>
  </INTERFACES>
  <LOCAL>
   <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE</TYPES>
   <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* LOCAL HELPER CLASSES</IMPLEMENTATIONS>
   <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* IN THE IMPLEMENTATION PART OF THE CLASS</MACROS>
  </LOCAL>
  <METHODS>
   <ITEM CMPNAME="CLASS_CONSTRUCTOR" EXPOSURE="2" STATE="1" MTDTYPE="2" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="CLASS_CONSTRUCTOR"/>
    </TEXTS>
    <SOURCE>`
  CALL FUNCTION &apos;INTERN_TRANSL_EUTYPE&apos; &quot;Sperrtyp
       EXPORTING
            eutype       = table_type
       IMPORTING
            enqueue_type = table_enq_type.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="GET_TABLE_DEFINITION" EXPOSURE="1" STATE="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Get Table&apos;s definition"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="NAME" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_TABLE_NAME">
      <TEXTS>
       <ITEM LANG="E" TEXT="Table name, 16 characters"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="PROTID" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_PROTOCOL_ID" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Protocole ID"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RESULT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_TABLE_DEF"/>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="YGPL_DBA_CX" LANGU="E">
      <TEXTS>
       <ITEM LANG="E" TEXT="DBA : Root exception class"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>`
  DATA objname  TYPE rsedd0-ddobjname.

  objname = name.
  CALL FUNCTION &apos;DD_TABL_GET&apos;
    EXPORTING
*     get_state            = &apos;M&apos;
      langu                = sy-langu
      prid                 = protid
      tabl_name            = objname
*     WITHTEXT             = &apos; &apos;
      add_typeinfo         = &apos;D&apos;
*     USE_CACHE            = &apos; &apos;
*     TRACELEVEL           = 0
    IMPORTING
      dd02v_wa_a           = result-dd02v_a
      dd02v_wa_n           = result-dd02v
*     DD09L_WA_A           =
*     DD09L_WA_N           =
*     GOT_STATE            =
    TABLES
*     DD03P_TAB_A          =
      dd03p_tab_n          = result-t_dd03p
*     DD05M_TAB_A          =
*     DD05M_TAB_N          =
*     DD08V_TAB_A          =
*     DD08V_TAB_N          =
      dd12v_tab_a          = result-t_dd12v_a
      dd12v_tab_n          = result-t_dd12v
      dd17v_tab_a          = result-t_dd17v_a
      dd17v_tab_n          = result-t_dd17v
*     DD35V_TAB_A          =
*     DD35V_TAB_N          =
*     DD36M_TAB_A          =
*     DD36M_TAB_N          =
    EXCEPTIONS
      access_failure       = 1
      OTHERS               = 2.
  ASSERT sy-subrc = 0.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SAV_GET_TABLE_CHECK_PROTOCOL" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Save of previous version of GET_TABLE_CHECK_PROTOCOL"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="NAME" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_TABLE_NAME">
      <TEXTS>
       <ITEM LANG="E" TEXT="Table name, 16 characters"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RESULT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TT_CHECK_LOG"/>
    </PARAMETERS>
    <SOURCE>`
  DATA objname  TYPE rsedd0-ddobjname.
  DATA protid   TYPE sy-tabix.
  DATA actmode  TYPE ddrefstruc-mode.
  DATA subrc    TYPE sy-subrc.
  DATA s_memid  TYPE tstrf01-filename.

  objname = name.
  CALL FUNCTION &apos;INTERN_DD_CHECK_EXIST&apos;&quot;Existenz-/Objektklasseprüfung
         EXPORTING
              objname            = objname
              objtype            = table_type
              err_message        = &apos; &apos;
              objstate           = &apos;M&apos;
              exists             = &apos;X&apos;
         EXCEPTIONS
              OTHERS             = 01.
  CHECK sy-subrc = 0.

  CALL FUNCTION &apos;DD_OBJ_PROT_OPEN&apos;
    EXPORTING
      objectname = objname
      objecttype = table_enq_type
      level      = 1
      device     = &apos;M&apos;
      ddfunc     = &apos;CHE&apos;
    IMPORTING
      prid       = protid
    EXCEPTIONS
      OTHERS     = 01.
  ASSERT sy-subrc = 0.

  PERFORM stdo_set_format IN PROGRAM radbtout USING protid &apos;S&apos;.
  actmode = 9.                       &quot;Prüfen
  CALL FUNCTION &apos;DD_TABL_ACT&apos;
    EXPORTING
      device      = &apos;M&apos;
      path        = &apos; &apos;
      protname    = &apos; &apos;
      tabname     = objname
      timer_on    = &apos; &apos;
      prid        = protid
      act_mode    = actmode
*     AUTH_CHK                = &apos;X&apos;
*     EXCOMMIT                = &apos;X&apos;
    IMPORTING
      act_result  = subrc
*   TABLES
*     ACT_RES_TAB             =
    EXCEPTIONS
      actok_failure           = 1
      dbchange_failure        = 2
      lockact_failure         = 3
      ntab_gen_failure        = 4
      put_failure             = 5
      read_failure            = 6
      unlockact_failure       = 7
      access_failure          = 8
      OTHERS                  = 9.
  CHECK sy-subrc = 0.   &quot; Generation Failure
  CHECK subrc &lt;= 4.     &quot; Warning

  CONCATENATE &apos;CHE&apos; table_enq_type objname INTO s_memid.
  CALL FUNCTION &apos;TRINT_READ_LOG_FROM_MEMORY&apos;
    EXPORTING
      iv_logname_memory = s_memid
      iv_free_memory    = &apos;X&apos;
    TABLES
      et_log            = result
    EXCEPTIONS
      log_not_found     = 1
      OTHERS            = 2.
  ASSERT sy-subrc = 0.</SOURCE>
   </ITEM>
  </METHODS>
  <TYPES>
   <ITEM CMPNAME="TD_PROTOCOL_ID" EXPOSURE="1" STATE="1" EDITORDER="6 " TYPTYPE="1" TYPE="SY-TABIX">
    <TEXTS>
     <ITEM LANG="E" TEXT="Protocole ID"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_DD02V" EXPOSURE="1" STATE="1" EDITORDER="1 " TYPTYPE="1" TYPE="DD02V"/>
   <ITEM CMPNAME="TS_TABLE_DEF" EXPOSURE="1" STATE="1" EDITORDER="5 " TYPTYPE="4">BEGIN OF ts_table_def,
      dd02v         TYPE ts_dd02v,
      dd02v_a       TYPE ts_dd02v,
      t_dd12v       TYPE tt_dd12v,
      t_dd12v_a     TYPE tt_dd12v,
      t_dd17v       TYPE tt_dd17v,
      t_dd17v_a     TYPE tt_dd17v,
      t_dd03p       TYPE tt_dd03p,
    END OF ts_table_def
`</ITEM>
   <ITEM CMPNAME="TT_DD03P" EXPOSURE="1" STATE="1" EDITORDER="4 " TYPTYPE="4">tt_dd03p      TYPE STANDARD TABLE OF dd03p WITH DEFAULT KEY
`</ITEM>
   <ITEM CMPNAME="TT_DD12V" EXPOSURE="1" STATE="1" EDITORDER="2 " TYPTYPE="4">tt_dd12v      TYPE STANDARD TABLE OF dd12v WITH DEFAULT KEY
`</ITEM>
   <ITEM CMPNAME="TT_DD17V" EXPOSURE="1" STATE="1" EDITORDER="3 " TYPTYPE="4">tt_dd17v      TYPE STANDARD TABLE OF dd17v WITH DEFAULT KEY
`</ITEM>
  </TYPES>
 </RAW>
</ZL_OBJECT>
