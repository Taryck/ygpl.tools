<?xml version="1.0" encoding="utf-16"?>
<ZL_OBJECT CHECKSUM="53960298A853676149354014DAD92066" CODE_SIGNATURE="DDC8EAFEA36FD2A2B1DA5FE9E1C6B639" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="YGPL_DBA_ORACLE_ENGINE" TYPE="CLAS" VERSION="1.01">
 <DEPENDENCIES>
  <ITEM TYPE="CLAS" NAME="YGPL_DBA_COMMON_ENGINE"/>
 </DEPENDENCIES>
 <DIRECTORY DEVCLASS="YGPL-DBA" MASTERLANG="E"/>
 <RAW>
  <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" CLSCCINCL="X" FIXPT="X" UNICODE="X">
   <INHERITANCE REFCLSNAME="YGPL_DBA_COMMON_ENGINE" STATE="1"/>
   <TEXTS>
    <ITEM LANG="E" TEXT="Table Size for Oracle">U1&amp;FUNCTIONALITY&amp;
ASAllow to activate (compile) a components.
U1&amp;RELATIONS&amp;
AS
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AS</ITEM>
   </TEXTS>
  </A0_MAINDATA>
  <ATTRIBUTS>
   <ITEM CMPNAME="RELEASE" EXPOSURE="2" STATE="1" ATTDECLTYP="1" ATTRDONLY="X" TYPTYPE="1" TYPE="ORACLE_RELEASE">
    <TEXTS>
     <ITEM LANG="E" TEXT="Oracle release"/>
    </TEXTS>
   </ITEM>
  </ATTRIBUTS>
  <LOCAL>
   <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE</TYPES>
   <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* LOCAL HELPER CLASSES</IMPLEMENTATIONS>
   <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* IN THE IMPLEMENTATION PART OF THE CLASS</MACROS>
  </LOCAL>
  <METHODS>
   <ITEM CMPNAME="CLASS_CONSTRUCTOR" EXPOSURE="2" STATE="1" MTDTYPE="2" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="CLASS_CONSTRUCTOR"/>
    </TEXTS>
    <SOURCE>`
  DATA s_td110  TYPE td110_stru.
  DATA s_cache  TYPE ts_cache.

  ASSERT sy-dbsys(3) = &apos;ORA&apos;.

* Oracle Release
  CALL FUNCTION &apos;GET_DB_ORA_RELEASE&apos;
    IMPORTING
      oracle_release = release.

* DB Size
  CALL FUNCTION &apos;DB02_ORA_FILL_TD110&apos;
    IMPORTING
      td110 = s_td110.
  db_size = s_td110-tssi.

  TRY.
      CALL METHOD ygpl_ds_engine=&gt;get_from_cache
        EXPORTING
          id    = cache_id
        CHANGING
          value = s_cache.
      tables_list = s_cache-tables.
      indexes_list = s_cache-indexes.
      EXIT.
    CATCH ycx_gpl_ds_memory.
    CATCH ycx_gpl_ds_obsolete.
  ENDTRY.

* Table size
  compute_table_list( ).

* Table size
  compute_index_list( ).

  s_cache-tables = tables_list.
  s_cache-indexes = indexes_list.
  TRY.
      CALL METHOD ygpl_ds_engine=&gt;save_to_cache
        EXPORTING
          id       = cache_id
          value    = s_cache
          validity = cache_validity.
    CATCH ycx_gpl_ds_memory.
* Can&apos;t be saved in shared memory : too big ??
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="COMPUTE_INDEX_LIST" EXPOSURE="1" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Compute Index_list from Oracle DB"/>
    </TEXTS>
    <SOURCE>`
  DATA s_data   LIKE LINE OF indexes_list.
  DATA t_data   TYPE STANDARD TABLE OF ts_table_size WITH DEFAULT KEY.

  EXEC SQL.
    OPEN dbcur for
    select
      s.segment_name,
      sum( s.bytes/1024 ) mb
    from dba_segments s
    where s.owner like &apos;%SAP%&apos;
      and s.SEGMENT_TYPE like &apos;%INDEX%&apos;
      and s.segment_name like &apos;%~%&apos;
    group by s.segment_name
  ENDEXEC.
  DO.
    CLEAR s_data.
    EXEC SQL.
      FETCH NEXT dbcur INTO :s_data-table_name, :s_data-size
    ENDEXEC.
    IF sy-subrc &lt;&gt; 0.
      EXIT.
    ELSE.
      APPEND s_data TO t_data.
    ENDIF.
  ENDDO.

  EXEC SQL.
    CLOSE dbcur
  ENDEXEC.

  indexes_list = t_data.     &quot; standard table to hashed table</SOURCE>
   </ITEM>
   <ITEM CMPNAME="COMPUTE_TABLE_LIST" EXPOSURE="1" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Compute table_list from Oracle DB"/>
    </TEXTS>
    <SOURCE>`
  DATA s_data   LIKE LINE OF tables_list.
  DATA t_data   TYPE STANDARD TABLE OF ts_table_size WITH DEFAULT KEY.

  EXEC SQL.
    OPEN dbcur for
    select
/*      S.Owner,    */
      case
        when l.table_name is not null then l.table_name
        when i.table_name is not null then i.table_name
        when instr( s.segment_name, &apos;~&apos; ) = 0 then s.segment_name
        else substr( s.segment_name, 1, instr( s.segment_name, &apos;~&apos; ) - 1 )
      end Table_name
      , sum( s.bytes/1024 ) mb
    from dba_segments s, dba_lobs l, dba_lobs i
    where s.owner like &apos;%SAP%&apos;
      and l.owner(+) = s.owner
      and l.segment_name(+) = s.segment_name
      and i.owner(+) = s.owner
      and i.index_name(+) = s.segment_name
    group by
/*    S.Owner, */
      case
        when l.table_name is not null then l.table_name
        when i.table_name is not null then i.table_name
        when instr( s.segment_name, &apos;~&apos; ) = 0 then s.segment_name
        else substr( s.segment_name, 1, instr( s.segment_name, &apos;~&apos; ) - 1 )
      end
/*    order by sum( s.bytes/1024 ) desc*/
  ENDEXEC.
  DO.
    CLEAR s_data.
    EXEC SQL.
      FETCH NEXT dbcur INTO :s_data-table_name, :s_data-size
    ENDEXEC.
    IF sy-subrc &lt;&gt; 0.
      EXIT.
    ELSE.
      APPEND s_data TO t_data.
    ENDIF.
  ENDDO.

  EXEC SQL.
    CLOSE dbcur
  ENDEXEC.

  tables_list = t_data.     &quot; standard table to hashed table</SOURCE>
   </ITEM>
   <ITEM CMPNAME="GET_TABLE_ORA_STATS" EXPOSURE="1" STATE="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANG="E" TEXT="Get Table statistics (Table &amp; Indexes)"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="STATS" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_ORA_TABLE_INDEX_STATS">
      <TEXTS>
       <ITEM LANG="E" TEXT="Oracle Statistics for a table and his indexes"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="TABLE_NAME" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_TABLE_NAME"/>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="YCX_GPL_DBA" LANGU="E"/>
    </EXCEPTIONS>
    <SOURCE>`
  DATA rc TYPE i.
  DATA ind_cnt TYPE i.
  DATA col_cnt TYPE i.
  FIELD-SYMBOLS:
    &lt;ti&gt; TYPE tt_ora_idx_stats.

  stats-table-table_name = table_name.
  PERFORM get_schemaname IN PROGRAM rsxplora.
  PERFORM get_table_info IN PROGRAM rsxplora
          CHANGING stats-table rc.
  IF rc &lt;&gt; 0.
    CLEAR stats.
    EXIT.
  ENDIF.

  PERFORM get_indexes IN PROGRAM rsxplora
          USING  stats-table-table_name ind_cnt col_cnt.
  ASSIGN (&apos;(RSXPLORA)_INDEX_INFO_TAB[]&apos;) TO &lt;ti&gt;.
  ASSERT sy-subrc = 0.
  stats-indexes = &lt;ti&gt;.</SOURCE>
   </ITEM>
  </METHODS>
  <REDEFINITIONS>
   <ITEM REFCLSNAME="YGPL_DBA_COMMON_ENGINE" MTDNAME="YGPLIDBA_TABLES_STATISTICS~GET_TABLE_STATS" EXPOSURE="2">
    <SOURCE>`
  DATA stats TYPE ts_ora_table_index_stats.
  DATA index LIKE LINE OF result-indexes.
  DATA col   LIKE LINE OF index-columns.
  DATA l_tab TYPE td_table_name.
  FIELD-SYMBOLS:
    &lt;i&gt; LIKE LINE OF stats-indexes,
    &lt;c&gt; LIKE LINE OF &lt;i&gt;-columns.

  stats = get_table_ora_stats( table_name ).
  CHECK NOT stats IS INITIAL.
  MOVE-CORRESPONDING stats-table TO result-base.
  LOOP AT stats-indexes ASSIGNING &lt;i&gt;.
    CLEAR index.
    MOVE-CORRESPONDING &lt;i&gt;-index TO index-base.
* &lt;i&gt;-index_name is in oracle format TABLE~index
    SPLIT &lt;i&gt;-index_name AT &apos;~&apos; INTO l_tab index-index_name.
    CHECK l_tab = table_name. &quot; remove other indexes
* Uniqueness
    IF &lt;i&gt;-uniqueness = &apos;UNIQUE&apos;.   index-uniqueness = abap_true.     ELSE.     index-uniqueness = abap_false.     ENDIF.
    LOOP AT &lt;i&gt;-columns ASSIGNING &lt;c&gt;.
      CLEAR col.
      MOVE-CORRESPONDING &lt;c&gt; TO col.
      APPEND col TO index-columns.
    ENDLOOP.
    INSERT index INTO TABLE  result-indexes.
    ASSERT sy-subrc = 0.
  ENDLOOP.</SOURCE>
   </ITEM>
  </REDEFINITIONS>
  <TYPES>
   <ITEM CMPNAME="TS_ORA_COL_STATS" EXPOSURE="1" STATE="1" EDITORDER="1 " TYPTYPE="4">BEGIN OF ts_ora_col_stats,       &quot; copy of t_index_column IN PROGRAM RSXPLORA
         column_name(30),
         num_distinct(16) TYPE p DECIMALS 0,
       END OF ts_ora_col_stats
`</ITEM>
   <ITEM CMPNAME="TS_ORA_IDX_ONLY_STATS" EXPOSURE="1" STATE="1" EDITORDER="2 " TYPTYPE="4">BEGIN OF ts_ora_idx_only_stats,     &quot; Copy of t_index_info IN PROGRAM RSXPLORA
         index_name       TYPE ind_ora-index_name,
         table_name       TYPE ind_ora-table_name,
         uniqueness       TYPE ind_ora-uniqueness,
         blevel           TYPE ind_ora-blevel,
         leaf_blocks      TYPE ind_ora-leaf_blks,
         distinct_keys    TYPE ind_ora-dist_keys,
         avg_leaf_blks    TYPE ind_ora-avg_leaf_b,
         avg_data_blks    TYPE ind_ora-avg_data_b,
         clust_factor     TYPE ind_ora-clust_fact,
         sample_size      TYPE i,
         last_analyzed(14),
         col_cnt          TYPE i,
    END OF ts_ora_idx_only_stats
`</ITEM>
   <ITEM CMPNAME="TS_ORA_IDX_STATS" EXPOSURE="1" STATE="1" EDITORDER="3 " TYPTYPE="4">
    BEGIN OF ts_ora_idx_stats.     &quot; Copy of t_index_info IN PROGRAM RSXPLORA
      INCLUDE TYPE ts_ora_idx_only_stats as Index.
  types:
         columns          TYPE STANDARD TABLE OF ts_ora_col_stats WITH DEFAULT KEY,
    END OF ts_ora_idx_stats
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Oracle Statistics for 1 index"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_ORA_TABLE_INDEX_STATS" EXPOSURE="1" STATE="1" EDITORDER="6 " TYPTYPE="4">
    BEGIN OF ts_ora_table_index_stats.
  INCLUDE TYPE ts_ora_table_stats AS table.
  TYPES:
      indexes TYPE tt_ora_idx_stats,
    END OF ts_ora_table_index_stats
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Oracle Statistics for a table and his indexes"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_ORA_TABLE_STATS" EXPOSURE="1" STATE="1" EDITORDER="5 " TYPTYPE="4">
    BEGIN OF ts_ora_table_stats,         &quot; Copy of t_table_info IN PROGRAM RSXPLORA
         table_name       TYPE tab_ora-table_name,
         num_rows         TYPE tab_ora-num_rows,
         blocks           TYPE tab_ora-blocks,
         empty_blocks     TYPE tab_ora-empty_blks,
         avg_space        TYPE tab_ora-avg_space,
         chain_cnt        TYPE tab_ora-chain_cnt,
         avg_row_len      TYPE tab_ora-avg_row_ln,
         sample_size      TYPE i,
         last_analyzed(14),
         partitioned(3),
     END OF ts_ora_table_stats
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Oracle Statistics for a table"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_ORA_IDX_STATS" EXPOSURE="1" STATE="1" EDITORDER="4 " TYPTYPE="4">
    tt_ora_idx_stats TYPE STANDARD TABLE OF ts_ora_idx_stats WITH DEFAULT KEY
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Oracle Indexes Statistics"/>
    </TEXTS>
   </ITEM>
  </TYPES>
 </RAW>
</ZL_OBJECT>
