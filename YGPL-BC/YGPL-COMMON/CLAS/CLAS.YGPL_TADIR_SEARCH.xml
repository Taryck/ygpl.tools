<?xml version="1.0" encoding="utf-16"?>
<ZL_OBJECT CHECKSUM="756AD6D994C89E1A65884CF3EE792693" CODE_SIGNATURE="32DED5316DB3E1B1428488FA1FE2047C" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="YGPL_TADIR_SEARCH" TYPE="CLAS" VERSION="1.01">
 <DIRECTORY DEVCLASS="YGPL-COMMON" MASTERLANG="E"/>
 <RAW>
  <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" CLSCCINCL="X" FIXPT="X" UNICODE="X" RSTAT="K">
   <TEXTS>
    <ITEM LANG="E" TEXT="Tools for TADIR query">U1&amp;FUNCTIONALITY&amp;
ASAllow to activate (compile) a components.
U1&amp;RELATIONS&amp;
AS
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AS</ITEM>
   </TEXTS>
  </A0_MAINDATA>
  <ALIASES>
   <ITEM CMPNAME="TD_COMPNAME" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPL_COMMON_TYPESPOOL" REFCMPNAME="TD_COMPNAME"/>
   <ITEM CMPNAME="TD_COMPTYPE" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPL_COMMON_TYPESPOOL" REFCMPNAME="TD_COMPTYPE"/>
   <ITEM CMPNAME="TD_TRANSPORT_KIND" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPL_COMMON_TYPESPOOL" REFCMPNAME="TD_TRANSPORT_KIND"/>
   <ITEM CMPNAME="TD_TYPEORDER" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPL_COMMON_TYPESPOOL" REFCMPNAME="TD_TYPEORDER"/>
   <ITEM CMPNAME="TR_AUTHOR" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPL_COMMON_TYPESPOOL" REFCMPNAME="TR_AUTHOR"/>
   <ITEM CMPNAME="TR_COMPNAME" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPL_COMMON_TYPESPOOL" REFCMPNAME="TR_COMPNAME"/>
   <ITEM CMPNAME="TR_COMPTYPE" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPL_COMMON_TYPESPOOL" REFCMPNAME="TR_COMPTYPE"/>
   <ITEM CMPNAME="TR_PACKAGES" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPL_COMMON_TYPESPOOL" REFCMPNAME="TR_PACKAGES"/>
   <ITEM CMPNAME="TR_SOFTCOMP" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPL_COMMON_TYPESPOOL" REFCMPNAME="TR_SOFTCOMP"/>
   <ITEM CMPNAME="TR_SRCSYSTEM" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPL_COMMON_TYPESPOOL" REFCMPNAME="TR_SRCSYSTEM"/>
   <ITEM CMPNAME="TS_TADIR_INFORMATION" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPL_COMMON_TYPESPOOL" REFCMPNAME="TS_TADIR_INFORMATION"/>
   <ITEM CMPNAME="TT_COMPKEYS" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPL_COMMON_TYPESPOOL" REFCMPNAME="TT_COMPKEYS"/>
  </ALIASES>
  <ATTRIBUTS>
   <ITEM CMPNAME="MAX_ORDER" STATE="1" ATTDECLTYP="2" ATTVALUE="&apos;999999&apos;" TYPTYPE="1" TYPE="TD_TYPEORDER">
    <TEXTS>
     <ITEM LANG="E" TEXT="Max (and default) Rank for type"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="SAPTYPES" EXPOSURE="1" STATE="1" ATTDECLTYP="1" TYPTYPE="1" TYPE="TT_SAPTYPES">
    <TEXTS>
     <ITEM LANG="E" TEXT="List of SAP Types"/>
    </TEXTS>
   </ITEM>
  </ATTRIBUTS>
  <INTERFACES>
   <ITEM REFCLSNAME="YGPL_COMMON_TYPESPOOL" EXPOSURE="2" STATE="1" RELTYPE="1"/>
  </INTERFACES>
  <LOCAL>
   <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE</TYPES>
   <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* LOCAL HELPER CLASSES</IMPLEMENTATIONS>
   <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* IN THE IMPLEMENTATION PART OF THE CLASS</MACROS>
  </LOCAL>
  <METHODS>
   <ITEM CMPNAME="CLASS_CONSTRUCTOR" EXPOSURE="2" STATE="1" MTDTYPE="2" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="CLASS_CONSTRUCTOR"/>
    </TEXTS>
    <SOURCE>`
  DATA t_types    TYPE STANDARD TABLE OF ko100 WITH DEFAULT KEY.
  DATA s_saptypes LIKE LINE OF saptypes.
  DATA t_saptypes TYPE STANDARD TABLE OF ts_saptypes.
  FIELD-SYMBOLS:
    &lt;t&gt; LIKE LINE OF t_types.

  CALL FUNCTION &apos;TR_OBJECT_TABLE&apos;
*   IMPORTING
*     WE_TABLE_LINES       =
    TABLES
      wt_object_text       = t_types.

  SORT t_types BY object.
  DELETE ADJACENT DUPLICATES FROM t_types COMPARING object.

  LOOP AT t_types ASSIGNING &lt;t&gt;.
    CLEAR s_saptypes. s_saptypes-hdr = &lt;t&gt;.
    s_saptypes-order = max_order.
    APPEND s_saptypes TO t_saptypes.
  ENDLOOP.

  saptypes = t_saptypes.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="GET_KEYS_FROM_TADIR" EXPOSURE="2" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Get object list from TADIR : Package, type, author,..."/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="AUTHOR" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TR_AUTHOR" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Range of author (person reponsible of the component)"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="EXT" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="ABAP_TRUE" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Extend to sub package"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="NAME" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TR_COMPNAME" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Range of component name"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="PACKAGES" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TR_PACKAGES" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Range of package"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RESULT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TT_COMPKEYS">
      <TEXTS>
       <ITEM LANG="E" TEXT="List of component keys"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SOFTCOMP" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TR_SOFTCOMP" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Range of Software Component"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="SRCSYSTEM" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TR_SRCSYSTEM" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Range of source system"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="TYPE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TR_COMPTYPE" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Range of component types"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  TYPES tt_pack TYPE STANDARD TABLE OF tdevc-devclass.
  DATA r_exclu TYPE tr_packages.
  DATA t_devc  TYPE tt_pack.
  DATA t_exclu TYPE tt_pack.
  FIELD-SYMBOLS: &lt;p&gt; LIKE LINE OF t_exclu.
  DATA t_ext_pack TYPE tr_packages.

  t_ext_pack = ygpl_devc_search=&gt;limit_packages( softcomp = softcomp
                                                 packages = packages ).
  IF t_ext_pack IS INITIAL.
    CHECK srcsystem IS NOT INITIAL OR type IS NOT INITIAL OR name IS NOT INITIAL OR author IS NOT INITIAL. &quot; to prevent extracting all tadir
    SELECT object obj_name
      INTO TABLE result
      FROM tadir
      WHERE srcsystem IN srcsystem
        AND object IN type
        AND obj_name IN name
        AND author IN author.
    EXIT.
  ENDIF.

  IF ext = abap_true.   t_ext_pack = ygpl_devc_search=&gt;extend_packages( t_ext_pack ).    ENDIF.

* Done in Extend Packages
*  r_exclu = packages.     APPEND LINES OF t_ext_pack TO r_exclu.      &quot; t_ext_pack might have only including values if extend_packages have been applied
*  DELETE r_exclu WHERE sign &lt;&gt; &apos;E&apos;. &quot; Keep only Devcclass to remove

* Package selection
  SELECT devclass
      FROM tdevc
      INTO TABLE t_devc
      WHERE devclass IN t_ext_pack.

*  IF NOT ext IS INITIAL.
*    t_devc = ygpl_devc_search=&gt;extend_package( t_devc ).
*  ENDIF.
*
** Package selection
*  IF NOT r_exclu IS INITIAL.
*    SELECT devclass
*        FROM tdevc
*        INTO TABLE t_exclu
*        WHERE NOT devclass IN r_exclu.
*
*    t_exclu = ygpl_devc_search=&gt;extend_package( t_exclu ).
*    LOOP AT t_exclu ASSIGNING &lt;p&gt;.
*      DELETE TABLE t_devc FROM &lt;p&gt;.
*    ENDLOOP.
*  ENDIF.

  IF NOT t_devc IS INITIAL.
    SELECT object obj_name
      INTO TABLE result
      FROM tadir
        FOR ALL ENTRIES IN t_devc
      WHERE devclass = t_devc-table_line
        AND srcsystem IN srcsystem
        AND object IN type
        AND obj_name IN name
        AND author IN author.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="GET_OBJECT_INFORMATION" EXPOSURE="2" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Get object information"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="KIND" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_TRANSPORT_KIND" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANG="E" TEXT="Program ID in Requests and Tasks"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="NAME" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_COMPNAME">
      <TEXTS>
       <ITEM LANG="E" TEXT="Object Name"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RESULT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_TADIR_INFORMATION">
      <TEXTS>
       <ITEM LANG="E" TEXT="TADIR Information"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="TYPE" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_COMPTYPE">
      <TEXTS>
       <ITEM LANG="E" TEXT="Object Type"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  DATA lv_kind TYPE td_transport_kind.
  IF NOT kind IS INITIAL.
    lv_kind = kind.
  ELSE.
    lv_kind = get_typekind( type ).
  ENDIF.
  SELECT SINGLE *
    INTO CORRESPONDING FIELDS OF result
    FROM tadir
    WHERE pgmid = lv_kind
      AND object = type
      AND obj_name = name.
  CHECK sy-subrc = 0.
  IF result-component IS INITIAL AND result-devclass IS NOT INITIAL.
    SELECT SINGLE dlvunit
      INTO result-component
      FROM tdevc
      WHERE devclass = result-devclass.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="GET_TYPEKIND" EXPOSURE="2" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Get Program ID of object type"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="DATA" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_COMPTYPE"/>
     <ITEM SCONAME="RESULT" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TD_TRANSPORT_KIND"/>
    </PARAMETERS>
    <SOURCE>`
  FIELD-SYMBOLS &lt;t&gt; LIKE LINE OF saptypes.

  READ TABLE saptypes ASSIGNING &lt;t&gt;
       WITH TABLE KEY object = data.
  IF sy-subrc = 0.    result = &lt;t&gt;-pgmid.   ENDIF.</SOURCE>
   </ITEM>
  </METHODS>
  <TYPEGROUPS>
   <ITEM TYPEGROUP="ABAP" EXPLICIT="X"/>
   <ITEM TYPEGROUP="SEWOR" EXPLICIT="X"/>
   <ITEM TYPEGROUP="SWBM" EXPLICIT="X"/>
  </TYPEGROUPS>
  <TYPES>
   <ITEM CMPNAME="TS_SAPTYPES" EXPOSURE="1" STATE="1" EDITORDER="2 " TYPTYPE="4">BEGIN OF ts_saptypes.
  INCLUDE TYPE ko100 AS hdr.
  TYPES:
      order TYPE td_typeorder,     &quot; order of prefered load
    END OF ts_saptypes
`</ITEM>
   <ITEM CMPNAME="TT_PACK" EXPOSURE="1" STATE="1" EDITORDER="1 " TYPTYPE="4">tt_pack TYPE STANDARD TABLE OF tdevc-devclass with DEFAULT KEY
`</ITEM>
   <ITEM CMPNAME="TT_SAPTYPES" EXPOSURE="1" STATE="1" EDITORDER="3 " TYPTYPE="4">
    tt_saptypes TYPE HASHED TABLE OF ts_saptypes WITH UNIQUE KEY object
`
    <TEXTS>
     <ITEM LANG="E" TEXT="List of SAP CTS Types"/>
    </TEXTS>
   </ITEM>
  </TYPES>
 </RAW>
</ZL_OBJECT>
