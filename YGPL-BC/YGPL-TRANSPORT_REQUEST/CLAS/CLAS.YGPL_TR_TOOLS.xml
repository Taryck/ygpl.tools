<?xml version="1.0" encoding="utf-16"?>
<ZL_OBJECT CHECKSUM="2CCFC33012F18B1F416F6D44C4530687" CODE_SIGNATURE="BBB89199D6C15DEB8C2F5BD483CC6D6F" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="YGPL_TR_TOOLS" TYPE="CLAS" VERSION="1.01">
 <DIRECTORY DEVCLASS="YGPL-TRANSPORT_REQUEST" MASTERLANG="E"/>
 <RAW>
  <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" CLSCCINCL="X" FIXPT="X" UNICODE="X">
   <TEXTS>
    <ITEM LANG="E" TEXT="Toolbox for Transport Requests"/>
   </TEXTS>
  </A0_MAINDATA>
  <ALIASES>
   <ITEM CMPNAME="TD_SRCSYSTEM" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPL_COMMON_TYPESPOOL" REFCMPNAME="TD_SRCSYSTEM"/>
   <ITEM CMPNAME="TD_TRANSPORT_REQUEST" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPL_COMMON_TYPESPOOL" REFCMPNAME="TD_TRANSPORT_REQUEST"/>
   <ITEM CMPNAME="TT_COMPKEYS" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="YGPL_COMMON_TYPESPOOL" REFCMPNAME="TT_COMPKEYS"/>
  </ALIASES>
  <INTERFACES>
   <ITEM REFCLSNAME="YGPL_COMMON_TYPESPOOL" EXPOSURE="2" STATE="1" RELTYPE="1"/>
  </INTERFACES>
  <LOCAL>
   <TYPES>`
*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</TYPES>
   <IMPLEMENTATIONS>`
*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</IMPLEMENTATIONS>
   <MACROS>`
*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</MACROS>
  </LOCAL>
  <METHODS>
   <ITEM CMPNAME="ADD_KEYS" EXPOSURE="2" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Add keys to transport request"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="KEYS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_COMPKEYS"/>
     <ITEM SCONAME="TRANSPORT_REQUEST" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_TRANSPORT_REQUEST"/>
    </PARAMETERS>
    <SOURCE>`
  DATA t_e071 TYPE STANDARD TABLE OF e071 WITH DEFAULT KEY.
  DATA s_e071 LIKE LINE OF t_e071.
  FIELD-SYMBOLS:
    &lt;k&gt; LIKE LINE OF keys.

  LOOP AT keys ASSIGNING &lt;k&gt;.
    CLEAR s_e071.
    s_e071-pgmid = &apos;R3TR&apos;.
    s_e071-object = &lt;k&gt;-type.
    s_e071-obj_name = &lt;k&gt;-name.
    APPEND s_e071 TO t_e071.
  ENDLOOP.
  CALL FUNCTION &apos;TRINT_APPEND_COMM&apos;
    EXPORTING
      wi_exclusive                       = abap_true
      wi_sel_e071                        = abap_true
*     WI_SEL_E071K                       = &apos; &apos;
      wi_trkorr                          = transport_request
*   IMPORTING
*     WE_KEYS_PHYSICAL_APPENDED          =
*     WE_OBJECTS_PHYSICAL_APPENDED       =
    TABLES
      wt_e071                            = t_e071
*     WT_E071K                           =
    EXCEPTIONS
      e071k_append_error                 = 1
      e071_append_error                  = 2
      trkorr_empty                       = 3
      OTHERS                             = 4.
  IF sy-subrc &lt;&gt; 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CHANGE_SYSTEM_SOURCE" EXPOSURE="2" STATE="1" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Mass change of system source"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="KEYS" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_COMPKEYS"/>
     <ITEM SCONAME="SOURCE_SYSTEM" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_SRCSYSTEM"/>
    </PARAMETERS>
    <SOURCE>`
  DATA src_system TYPE tadir-srcsystem.
  DATA exists TYPE abap_bool.
  DATA s_tadir TYPE tadir.
  FIELD-SYMBOLS:
    &lt;k&gt; LIKE LINE OF keys.

  LOOP AT keys ASSIGNING &lt;k&gt;.
    s_tadir-pgmid = &apos;R3TR&apos;.
    s_tadir-object = &lt;k&gt;-type.
    s_tadir-obj_name = &lt;k&gt;-name.
    CALL FUNCTION &apos;TRINT_TADIR_QUERY&apos;
      EXPORTING
        iv_pgmid           = s_tadir-pgmid
        iv_object          = s_tadir-object
        iv_obj_name        = s_tadir-obj_name
      IMPORTING
*        EV_OBJECT          =
        ev_srcsystem       = src_system
*        EV_DEVCLASS        =
*        EV_AUTHOR          =
*        EV_GENFLAG         =
        ev_exist           = exists.
    CHECK exists = abap_true AND src_system &lt;&gt; source_system.
    CALL FUNCTION &apos;TRINT_TADIR_INTERFACE&apos;
      EXPORTING
*       WI_DELETE_TADIR_ENTRY                = &apos; &apos;
*       WI_REMOVE_REPAIR_FLAG                = abap_false
        wi_set_repair_flag                   = abap_false
        wi_test_modus                        = abap_false
        wi_tadir_pgmid                       = s_tadir-pgmid
        wi_tadir_object                      = s_tadir-object
        wi_tadir_obj_name                    = s_tadir-obj_name
*       WI_TADIR_KORRNUM                     = &apos; &apos;
        wi_tadir_srcsystem                   = source_system
*       WI_TADIR_AUTHOR                      = &apos; &apos;
*       WI_TADIR_DEVCLASS                    = &apos; &apos;
*       WI_TADIR_MASTERLANG                  = &apos; &apos;
*       WI_TADIR_CPROJECT                    = &apos; &apos;
*       WI_TADIR_VERSID                      = &apos; &apos;
*       WI_REMOVE_GENFLAG                    = &apos; &apos;
*       WI_SET_GENFLAG                       = &apos; &apos;
*       WI_READ_ONLY                         = &apos; &apos;
*       IV_SET_EDTFLAG                       = &apos; &apos;
*       IV_WBO_INTERNAL                      = &apos; &apos;
*       IV_INSERT_MODE                       = &apos; &apos;
*       IV_TRANSL_TECH_TEXT                  = &apos; &apos;
*       IV_DELFLAG                           = &apos; &apos;
*       IV_NO_PAK_CHECK                      = &apos; &apos;
*       IV_OBJ_STABILITY                     = &apos; &apos;
*       IV_TRANSL_TECH_TEXT_SUPP             = &apos; &apos;
*       IV_DELFLAG_SUPP                      = &apos;&apos;
*       IV_NO_PAK_CHECK_SUPP                 = &apos; &apos;
*       IV_OBJ_STABILITY_SUPP                = &apos; &apos;
      IMPORTING
*       NEW_GTADIR_ENTRY                     =
        new_tadir_entry                      = s_tadir
      EXCEPTIONS
        tadir_entry_not_existing             = 1
        tadir_entry_ill_type                 = 2
        no_systemname                        = 3
        no_systemtype                        = 4
        original_system_conflict             = 5
        object_reserved_for_devclass         = 6
        object_exists_global                 = 7
        object_exists_local                  = 8
        object_is_distributed                = 9
        obj_specification_not_unique         = 10
        no_authorization_to_delete           = 11
        devclass_not_existing                = 12
        simultanious_set_remove_repair       = 13
        order_missing                        = 14
        no_modification_of_head_syst         = 15
        pgmid_object_not_allowed             = 16
        masterlanguage_not_specified         = 17
        devclass_not_specified               = 18
        specify_owner_unique                 = 19
        loc_priv_objs_no_repair              = 20
        gtadir_not_reached                   = 21
        object_locked_for_order              = 22
        change_of_class_not_allowed          = 23
        no_change_from_sap_to_tmp            = 24
        OTHERS                               = 25.
    IF sy-subrc &lt;&gt; 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
              WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.
    CHECK     s_tadir-object = &lt;k&gt;-type AND s_tadir-obj_name = &lt;k&gt;-name AND s_tadir-srcsystem = source_system.
* Has failed

  ENDLOOP.</SOURCE>
   </ITEM>
  </METHODS>
 </RAW>
</ZL_OBJECT>
